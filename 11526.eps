%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FP-PPD-17-10790_28.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Akash
%%CreationDate: 8/16/2017
%%BoundingBox: 0 0 289 288
%%HiResBoundingBox: 0 0 288.0030 287.9991
%%CropBox: 0 0 288.0030 287.9991
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 18338 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD86FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA9FFFFFFAFFFFFFFAFFDBBFFAFFDFCFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA9FFFFFFAFFDB7FFAFFFFFFFAFFDFCFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9
%FFFFFFAFFFFFFFAFFDB3FFAFFFFFFFAFFFFFFFAFFDF5FFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA9FFFFFFAFFDAFFFA9FFFFFFA9FFFFFFAFFFFFFFAF
%FDF5FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFAFFFFFFFAFFDAB
%FFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFDEDFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFAFFD52FFA8FD54FFA8FFFF
%FFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFD0DFFA8FFFFFFA8FD76FFA8
%FD0BFFA8FD58FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FF7DFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA9FFFFFFAFFFFFFFAFFDA3FFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFA8FD0BFFA8FD70FFA8FFFFFFA8FD60FFA8FFAF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8
%A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9
%FFFFFFAFFD3CFFA8FD62FFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFF
%FFA9FFFFFFAFA8FFFFAFFFFFFFA8FD74FFA8FD06FFA8FD63FFAFFFA8FFAF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9
%FFFFFFAFFFFFFFAFFD3EFFA8FD5CFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA9FFA8FFA9FFFFFFAFA8FFFFAFFFFFA8AFFD6EFFA9FD05FFA8FD05FFAF
%FD62FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFA8A8FFFFFFA8FFA8
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFAFFD2DFFA8A8FD68FFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFA8FFA9FFFFFFA8FFFFFFAFFF
%FFFFAFFD6EFFA8FD05FF7DFD05FFA8FD60FFA9FFA8FFAFFFA8FFAFFFA8FF
%AFFFA8A8A8FFA8FFFFA87DFFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A9FFFFFFA8FFFFFFAFFD23FFA8FD05FFA8A8FD0BFFA8FD5CFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8A9FFFFA8FFFFA8A8FFFFFFA9FFFFFFA9FFFFFFAFFFFF
%FFAFFFFFFFAFFD64FF7DFD05FF7DFD05FFA8FD05FFA9FD49FFA8FD14FFA8
%FFA9FFA8FFA9FFA8FFAFFFA8FFAFFFA8FF52FFA8FFFFFF7DFFFFFFA8FF7D
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFAFFD1EFF7DFD05FFA8
%FD05FF7DFD4FFFA9FD14FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8
%FFA8A9FFFFA8FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFD5EFFA8
%FD05FFA8A8FD04FFA8FD68FFA9FFA8FFA9FFA8FFA9FFA8FFAFFFA8A8AFFF
%A8FF7DA8A8FFFFFFA8A8FFFFA8FFA8A8A8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFA8FFA8A8
%FFFF7DFFFFFFAFFFFFFFAFFD14FFA8FD05FFA8FD05FFA8FD05FFA8FD64FF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF
%FFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFD5BFFA8A8FD04FFA8A8FD
%05FFA8FD4FFFA8FD14FFA8FFA8FFA8FFA9FFA8FFA9A8A8FFA9FFA87DA8FF
%A8FFAFA8A8FFAFFFA8A8FFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA9FFFFFFAFFD10FFAFFD04FFA8A8FD04FFA8A8FD05FFA8FD
%4FFFA8FD05FFA8FD0EFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFF
%FFFFAFFD56FFA8A8FD04FFA8A8FD04FFA8A8FD1EFFA8FFFFFFA8FFFFFFA8
%FFFFA8A8FFFFFFA8FD38FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA87DA9FFA8
%FFA852A8FFAFFFA87DAFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFF7D7DFFFF2752A8FF5227A8FF2727FFFFF8277DFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFF
%FFA8FFFFA8A8FFA8FFA9FFFFFFAFFFFFFFAFFD0CFFAFA8FD05FF7DFD05FF
%A8FD1DFFA827A8FF7D27A8FF7D27FFFF5227FFFF5227A8FD39FFA8FFFFFF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFA8A8FFA8FFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFD4EFFA8FD05FF
%7DFD05FF7DFD05FF7DFD05FFA8FD05FFA8FD3FFFA8FFFFFFA8FD05FFA8FD
%0EFFA8FFA8FFA8FFA8FFA8FFA8FF52FFA9FFA8FF7DFFA8FFA9FF7DA8AFFF
%A8FFA8A8A8FFAFFFA8A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FF
%527DA8A852FD08A87DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA9FD0CFFA9FD05FFA8A8FD04FFA8A8FD05FFA8FD05FFA8FD05FFA8FD0E
%FF52FFFF2727FFA8277EFF52A87DFF522727FD1FFFA8FD05FFA8FD05FFA8
%FD0CFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFFFA8FFFFFFA8FFA8FFA8A8FF
%FFA8FFFFA8A8FFFFFFA8FFA8FFA8FFFFFFA9FFFFFFA9FFFFFFA9FFFF7DAF
%FF52FFAFA827A8FFA827A8FF7D7D52FD44FFA952FD05FF7DFD05FF7DFD05
%FFA8FD60FFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8FF27FFA8FFA9FF27A8A9
%FFA8FFA8A8A8FFAFFFA8A8AFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8A8A8FFA8
%A8FFA8A8FFFFFFA8FFFFFFA9FD0EFF7DFD05FFA8A8FD05FF7DFD0CFFA8FD
%0DFFA8A852A8A8847DA87D84A8FF7D84A8A87E7DA87D7DFD38FFA8FFFFFF
%A8FFFFFFA8FFFFA8A8FFFFA8A8FFA8FFA87DA8FFA8FFFFA8A8FFFFFFA8FF
%7DFFA8FFFFFFA8AFFFFFA8FFFFFFA9FFFFFFA87D7DA87DA8A87D7DFFA87D
%7DA87DA852A87DA8FD1EFFA8FD05FFA8A8FFFFA8FD18FFA8FD05FF7DFD05
%FF52FFFFFFA8FFA8FFFFFFA8FD49FFA8FFFFA8A8FFFFA8FFFFA8FD0AFFA8
%FFA8FFA8FFA8FF7DFFA8FFA8FF27FFA8FFA8FF7DA8A9FFA8FFA852A8FFA9
%FFA8A8AFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FD0EFF52A8FD04FFA87DFD05FF27A8FD04FFA87DFD05FFA8FD41
%FFA8FD05FFA8FFFFFF52FD0EFFA8FFAFFFA8FFFFFFA8FFFFA8A8FFFF7DA8
%FFA8FFA87D7DFFA8FFFFFF52FFFFFFA8FFA8A8A8FFFFFFA8FFFFFFA8FFA8
%FFA8FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFD44FFA8FFFFA8FF
%FF7DFFFFFFA8FFA8FFFFFF52FD06FFA8FD06FFA8FD41FFA8FFFFA8A8FFA8
%A8FFFFA8FD0CFFA8FFA8FFA8FFA8FFA8FFA8FF27A8A8FFA8FFA87DA8FFA8
%FFA952A8FFA97DA8FFA8FFA8FF7DFFA8FFAFFFA8A8AFFFA8FFA8FFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8A8A8
%FFA87DFFFFA8FFFFFFA8FFFFFFA8FD0AFFA8FD06FF52FD05FF7D7DFFFFFF
%AFFF52FFFFFFA8FD3BFFA8FFFFFFA8FD1EFFAFFFA8FFAFFFA8FFFFFFA8FF
%FF52A8FFFFFFA8A827FFA8FFFFFF277DFFFFA8FFFF7DA8FFFFFFA8FFFFFF
%A8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFF
%FFFFAFFD1DFFA8FFFFA8FFFF277DFF7D27FFFFA8FD17FFA8FFFFFF52FD05
%FF5227FD05FF7D52FFFFFFA8FFA8FD04FF7DFD04FFA8FD09FFA9FD21FFA8
%FFFFFFA8FD20FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFFA87DA8FF7D27A8
%FF7DFFA87DF8FFA9FFA8FFA852A8FFA9A8A8FFAFFFA8FFAFA8A8FFAFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8A8A8FFA87DFFFF7D
%A8FFFFA8FFFFFFA8FFFFFFA8FD11FF527DFFFFA8A8A827FFFFFF52FFA8A8
%FFFFFF27FD06FFA8FD04FFA8FD04FFA8FD21FFA8FD09FFA8FD12FFA8FD0F
%FFA8FFAFFFA8FFAFFFA8FFAFA827FFFFFFA8FF277DA8FF7DA8A852A8FFA8
%277DFFA8FFFFFF7DA8FFFFA8A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8AFFF
%FFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFA8FD06FFA8FD0CFFA8
%FFFFFF7DFFFFA8A8FFFF7DFD1FFF5252FD05FF2752FFFFA8A8FF52A8FFFF
%7D59FD06FFA8FD04FF7DFD04FFA8FD07FFA8FD19FFA8FD05FFA8FFFFFFA8
%FD0FFF52FFFFA8A8FD0CFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8
%7D27FFA8FF7DFF5227A8FFA87DA9FF7DFFA9FF27FFA9FFA87DAFFFA8FF7D
%FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8
%FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFFF7DFFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0EFFA8FFFFA827FFA9A8A8
%FF52F8A8FFA97DA8A827FFFFFF2752FFFFFFA8FFFFA8FFA8FD0AFFA8FD0A
%FFA8FD19FFA8FD0CFFA8FFFFA8A8FFFFA8FD0EFFAFFFA8FFAFFFA8FFAFFF
%A8FFAFFF7DFFA852A8FFA8F87DFF52A8A8A8F87DA8FF7D52A87DA8A8A8FF
%27A8A8FFFF27A8FFFFFF7DA9FFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFF
%A9FFFFFFAFFFFFA8AFFFA8FFAFFFFFFF7DFD09FFA8A8FFFFA8A8FFFFA8FD
%25FF277DFFFFA8A8A827A8FFFFF827FFA8FFA8FF5327FFFFFFF87DFFFFFF
%7DA8FFFFFF7DFD05FF7DFD07FFA8FFFFA8FD0AFFA8FFA8FD06FFA8FD06FF
%A8FFFFFFA8FD08FF7DFFFFA852FFFF52A8FFFFA8FD0CFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FF2752A8FF2727A8527DFFA87DF8A8A8FF277DA8
%7DA87DA8FF52A8A8FFA97DA8FFAFFFA8FFAF7DA8FFAFFFA8FFFFFFA8FFA8
%FFA8A8FFFFA8FFFFFFA8FFFFFFA8A8A8FFA8FFFFFF52A8FFFFA8FFA8FFA8
%FF7DA8A8FFA8FFA8FFFFFFA8FFFFA8A8FFFFA8A8FFFFFFA8FFFFFFA8FD12
%FF7D7DFFFFA87DFF5227FFFFA8F8A8FFA8A8A8FF2752FFFFFFF852FFFFFF
%527DFFFFFFA87DFD07FF7DFD14FF7DFD06FFA8FD05FFA8FD09FFA8A8FFFF
%52FFFFA87DFD11FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF52F87D
%FFFF52A8A82784FFFF52F8FFFFFF2752FF7DA87DA8FFA8FFA87DA8FFFFFF
%27FFFFFFA8FFFFFF7DA9FFA8A8FFA8FFA9FFFFA8A9FF7DFF7DFFFFFFAFFF
%FFFFA8FF7DFFFFFFA8FD05FF7DA8FFFFA8FD09FFA8FD21FFA8F8A8A87DA8
%A8A82752FFFF7DF8FFFD04A8FF527DFFA8FF527DFFFFFFA852FF7DFD04FF
%7D7DFD0CFFA8FFFFA8FD09FFA8FFA8FD06FFA8FFFFFFA8FD06FFA8FFFF52
%A8FFFF52FD13FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852A8FFA8F8F8
%FFA8FF27FFA852A8FFA827F8FFA8FFF852A9FFA85227FFA8FFA8F8A8FFAF
%FFA8FFAF52A8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7DFFFFA8A8
%FFFFFFA8A827FFA8FFFFFF7DFFFFFF27A8FFFFA8FFFFFFA8FF52FFA8A87D
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD13FF7D27FF7D7D7DFF7DF87DFFFF7D
%27FFA8A87D7DFFA8A8A87DFFA8A8A87DFFFFA8FF527DFD07FFA8FFA8A8FF
%A8FD07FF7DFFFFA8FD08FF7DFD06FF52FFFFFFA8FD05FF52A8FFA852A8FD
%14FFA9FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFAFFF7E52AFFF7DF827FFA8A8
%27FF8452A8A8A85227FFA8FF5227A8FFFFA827FF7DFFA8FFFFA8F8FFA8FF
%A8FFFFFFA8FFFFA8A8FF7DFFA8FFFFA8A9FFFFFFA9FFA8FFA852FFFFAFFF
%FF7D52FD05FF27A8FFFF52A8FFFFA8FF7DFFFFFF7DFD14FFAFFD0FFFA827
%52FF52A87DFF52F87DFFFF52F8FFFFFF5227A8FFA8A8F8FFFFFFA82752FF
%A8FFFFA8FF7D7DFF7DFD14FF52A8FFA8FFFFFF7DA8AFA8FFFFA852FD04FF
%A852A8FFA827A8FFFFA8FD13FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFF852A8FF52F852FF7D7D27FF7D7DA87DA87D27FF52FFA852A852A8
%FFA8FF5227A8A8A9FFA8FFAF7DA8A852FF7DFFAFA8A8FFA8FF7DA8FF7DA8
%FF7DFFA8FFFFFFA884FF7D7DFFFFA87EFF7DFFA8A8F8A8A8FFA8FF7DFFFF
%FF52FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD14FFA87DFFFFA852A8FF52
%FF7DFF7D27A8FFFF52F8FFFFFF52F8A8FFFFFFF8A8A8A8FFFFA8FFF87DA8
%A8FD07FFA8FFFF7DFFFFA8FFA8FD09FFA8A8FF7DFFFFFFA8FF7D7DFFFFA8
%7DFF7DFFFFFF27A8FFFF7DFD15FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFAFFF
%A8FFAFFFA8FF277DA8FF28F87DFFA852F8A8A8A87D27A8FF7DA8F87DA8FF
%FF5227FFA8FFA8A8FF7D05FF7DA8A8A9FFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A9FFFFA852FF7DFFA9FFFFA8A8277DFFAFFFA87D27FFFFA827FD05FF52FD
%16FFAFFFFFFFAFFD0DFFA8FFFFFFA8277DFF52FF52FFA827A87DFF7DF8A8
%7DFFA852A87D7DFFA8FFA8F8A8FFA8FD04FF7D7DFFF8FFA87DFFA8A8FFA8
%FFA8A8FFA8A8FF52FD08FF7D27FFA8FFFFFF2752FFFFA8FFA827A8FFA852
%FD17FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A8F87DA8
%FF52F852FFA852F87DA8FF7DF827FFA8FF2752A87DA9FFA8FF2727A87DA8
%FFA8FFAFA8A8FF7DFF52A8AF52A8FF7DFFA8FFFFFFA8FFFFFF7DFFF8A8A8
%A8FFFFA8F87DA8A8FFFF52F8FFFFFF7DFFA8FFA8FF7DFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD16FF7DFFFFFF7DF87DFF7DA827A8A87DA952A8
%FF7DFF2752FFFFFF7DF8A87DFFFFFFA8FFF8A87D52FFA8A8FD0FFFA8FF52
%FF7D7DFD05FF7D52FF52FFFFFF277DA8FFFFFF7D27FD19FFA9FFA8FFA9FF
%A8FFA9FFA8FFA9FFA8FFAFFFA8FFAFFFA852A8FF27A87DFF7DF87DA8A8A8
%F87D84FFFF5227A852FFA8A8A8F827FF52FFA8FFFFA852FFF852A827A8A8
%52FF7DA8A852A8A852FF527DA852A8FFA9FFA8FF27A87D52AFFFA852A852
%7DFFAF5252FFA8FFFFFF7DFD18FFAFFFFFFFAFFFFFFFA8FD0AFFA8F852FF
%FF7DF87DFFA8A8F852FFFFA82727FFA8FF5227A852A8FFA8FF52F8A8527D
%FD04FFA8A8FF52FF7D52FF527DFF27FFA8A8FD06FF7DFF5227A852A8FFFF
%A8A8A827A8FFFF7DFF7D7DFD1BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8A8A85284FF52A827A8A852A8527DFF7DA82727A8FFA8A8
%F8527D7DA8FF7DFF27277D27A8FF7DFFA9FFA8FFAFFFA8FFAFFFA8FFAFFF
%A8FF527D7DF87D7D52FFFFFF52FF2727A8FFFFFFA8277DFFA8A8A8FFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD10FFA8FD0BFF52A8FFFF
%7DF852FFA8FFF827A8FFFF5227FF27A8FFA8A852F8FF52A8FFFFA8FF52FF
%5227FF2752A827A8A87DFF527DFF27A87D27FF2752FF7DFFFFFF7D7D7DF8
%7DFFA8FFFFA8F8FD05FF7DA8FD19FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFA8FFA8FFAF277DFF7DA8F827AFA8A852F8FFA8FF7DF87D
%7D7DFFA8A87DF8527D27FFA8FFFFFFA8FF7DA8A827A85227FF2752A852A8
%FF7DFFFFFFA8FFA827A827F8FF7DFFFFFF5252FFA8AFFFFFF8A8FD05FFA8
%FD16FFAFFFFFFFAFFFFFFFAFFFFFFFAFFD0DFF7DFF7DA8A8277D7D52FFA8
%7DA827A8FFA8FFF827A852A8FFA8FF5227A82752FF52FD0FFFA8FFA87DA8
%2727A8F8A8A8FFA9FFA827A87DA8FFFFFF52FFA8FFFFFF7DFD18FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8F827FFA8
%FFF8F8FD04A8F8A8277DA8A87D7DF87D7D7DA8FFA8FF527D7DF87D52F8A8
%277D7D27A87D52FF27527DF87D52F8A8277DA8A8FFA8A82727FF27FFFFFF
%7DA8A852A8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FD1EFFA8FFA8FFFFA8A852F8A8FFFFA82727A827FFFF7DFF2727A8
%F87DA9A8FFFFA8FFA87DAF277DA8F8A85227FF5252FF52FD06FFA8A8A8F8
%A87D7DFFFFFFA8FF2752FD05FFA8FD1AFFA8FFA8FFA8FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFA8FF7EFFA852A8277DFFA8
%FF27F87D52A8FFA8FF7DF87D27F8A8527DFFA8A8FFFFFFA8A8FFFFA8FFFF
%FFA8FFFF7DA87D27FFF852A87DA8FFFFA8A8A8F8FFA9FFFFFFAFA8FFFFAF
%FFFFFFAFFD18FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD09FFA8FFFF
%FFA827FD04FF27527D52FFFF7DA9F8527D27A8FFA8FF7D53A82727A8F8A8
%7D52FF527DA827A85227A827277DF87D7D27A8A8A8FFFFFF52FF2752FD05
%FF52A8FD1EFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FF52FFA8FFA852F8A827FD04A852F87DF852A8
%7DA8FFA8FFA87DA97D52FF27527DF87D52F8A8277DA87DAFFFA8FFA8FF27
%7D7DF8A8FFFFFFA8FF7DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD22FFA8FD06FF5252FFFFFF7DF8527D52FFFFA8
%A827527DF8527D52FD04FFA8FD05FFA8FD06FFA8FFFF52FF5227A87D7DFD
%05FF52A8FD23FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFAFFFA8A8AFFFA8FF28527E27A8FF7DFF27F8A827A8FFA8
%FFA8278427F8A8F87D7DF87D7D52FF277DA827A87D27FFF827A827A8FF7D
%FFA8FFFFFFA827FFA8A8FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFD14FFA9
%FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD0DFFA8FD04FF52F87D
%A8FFFFFFA8A8F8535227A8A8A8FFA8FFFFA8A8A827A87D27A82752A8F8A8
%7D27A8A8A8FD08FFA8FFFFA8FD26FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A87D7D
%FF27FFA8A8A87D27A8F827A8277DA87DFFA8FFA9FFA8FFA8FFA8FFA9FFA8
%FFA8FF7DA8AF52A8A87DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD2EFF7D27A85252
%FD04FF7DA8A8F8A827F8842752A8F8A87D52FF7D7DA8F8A85227A85252FF
%7DFD2EFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8FFAFFFA8A8AFFFA8FFA8FFA8FFAFFFA8FF2727A87DFFFFA8FF
%FFA8A8A87DFF007DA827845227FF0552A827A8A852FFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFD
%10FFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD09FF
%A8FD05FFA8FD05FFA8FFA8FF7D52FFA8A8FD46FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFFA852A8A87DFFA8FFA8A8A8FF
%A8FFA8FFA9FFA8FFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD43FFA8A9
%FF7DFFAFA8FFFFAFFD36FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8
%FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFA9
%FFFFFFAFFFFFFFAFFD0CFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFD62FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD81FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9
%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFD08FFA9
%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFD5CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8
%FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 28 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">01-2017-JANUARY-V03-WATERCOLOR</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2017-08-16T12:41:56+05:30</xmp:MetadataDate>
         <xmp:ModifyDate>2017-08-16T12:41:56+05:30</xmp:ModifyDate>
         <xmp:CreateDate>2017-08-16T12:41:55+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>216</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AM9AvNJ8s2sS2Fktstw7x&#xA;wxhWmleOFVLzMCyAKAy1+LeuSLFlv5d6Fon/ACsS08x2MAtLu6sbm3uoljMYehjoxFFWq+n1HWvh&#xA;TEqHtORZOxV2KvMPOvmWWe51F4by5tdO8stD9eisHdLm4muSioKIwPpx8967HfLYih72iR4jV8kd&#xA;+X/mTUF8w33lHUbptQe2to7+wvHJaX0Hbg0c7N8RZSyFSeRNTVjxxnEVxBcUjxGJeg5U3uxV2KvJ&#xA;vP3nfXBrWr6Vpty9lYaTbxpfyW8fK5eW7AIKMd1CI6cSnxcifAZdGIAsuPKRMqCO/K3zhrN1fJ5f&#xA;1SZ71X06PUdNvpqfWDCPTRknKgBm/eoQ32jvyJ64JxFWE4pG+EvS8qb3Yq7FXhX/ADkB+bOveWta&#xA;03y3o0htJbyNJ5rpKGRvWleKKNdmZRWJixUVOw23qQhJ/wDnH785vM+tec7zylrc7X0QMwguJAzS&#xA;Ryw1Yjmfi9Ngp+3uDTpWmJS+jcCuxV2KvAPzh8/+f/8AGWpaN5a9e00fy3ZwXGs3cVFZpboPJGA4&#xA;Jbhwj26fEGB7YqlX5Ufnr5ou/OGl+XNWmW8g1JvSR5NpEYVFSx5E/ZpSvX3rir6UxV2KuxV55+cn&#xA;nnU/KmhrLp8dZrnmvr02j4BTsenJgTQfdhVgf5WfnL5qvPNsega+wubeWiK6xMJEeRQysTwQ8amh&#xA;5ePyqkID3/Al2KuxV5J+fPmbzNZz+WvLGgXn6MuPM92bWTUlYrJEqvEgCsu68mnqSu+23XMjBEGy&#xA;ejiaqchURtxMG8oea/NnlfzZ5ZMnmC+8w6H5oum02W11Nn9aKRGiQSp6jzcVBuVb4SOQBB/ZbLJR&#xA;EonaiGmEpQkN7EmW6h+UGq3un29pd2UN6lnP69qHuDCyMW57SxUdSp6UzFtz6R3kfyH5+0/8w49Y&#xA;1b6lB5ds7Ca0sLO2kZ5FeV425OCgqfgp9qgFKDrUEpAes4EuxV2KvP8AzB+V13e+Yptf0bWZdHvb&#xA;1BHqUfFp4ZuCiNXVfUiaN+CKpKtTYGnIVy2OTaiLaJ4blYNJx5J8jx+WlvJ5byXUtU1FlN7fS/CC&#xA;sZYxxxxgkIimRz1LEsSSe0Zz4mWPHw+ZLKMg2uxV2KsF81/lrc6trB1rStUOkalJGsFyxhS4hlSM&#xA;sUZoyYm9VeWzh+gpTpSyM6FFpnis2DRRvkvyEvl65utRvLw6nrF4BHLeGMQokQPIRwxAvwUmhb4j&#xA;Wg7AACc7Tjx8O53LLcg2uxV2KvO/zQ/JrRfPxguLmZ7HUrT4be+i3bgG5BWWq14sSVIIIJOKqX5V&#xA;/khoXkCaa9iuH1HVbgES3so4bMasQvJ/iY9WJ/jVV6TirsVdirzX8y/ym1PzJqqeYPLetN5e8xx2&#xA;kmnS3QjE0VzaSmphniaqkKSzKaVB36gUVYx+Uv8Azja3lHzIvmfzDq41rVoeQtERCsMZYU9Q8iSz&#xA;AVptsflir3HFXYq7FWL+d/KWpeY7M2ltqa2UDjjPFLaw3cUgPcrIAwYdiG+jFUu8g/lRo3lGa6vV&#xA;lk1LVrx1abULqhkCoOKolPsqAf8AOgxVnOKuxV2KsS/MT8udG886ULDUaxSQt6llexUE0MlKVUkG&#xA;qt+0vf5gETx5DE2GrLiExRYt5O/IiLR/MkPmLXtduvMmp2Y42D3YPCIUIqRI87MVLVT4gFO9K7iy&#xA;eexQFNWPTVLiJ4i9WyhynYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8tH5qLbXd8dRmWKCLVJdOt44vS9QelKYU5+tIgPMxMdtzX&#xA;4a0oLfDaBl3Pvej2d/DPPLbB1a4t1Q3CruFMgJUHwNBWh3oR45XTcCi8CXYq7FXmuofmdFpmu69N&#xA;qLmLQ9DMVqIkMSvNcSqrO7vOYlULz4qocVp3qBlvBsPNo8Xc9wZ1a6vaT6xdaUhrc2cEFxP0oFuW&#xA;lVB8/wBwx+7K62tu4t6TDAl2KuxV4r+bP5palpOpSaVYMbcRfanWaOEMx2NZZSirSvZuuxruovx4&#xA;wRZcXNlINBPfyf8AzJuPMlrLaapIrXsPpmCf4V9RXX7JpsXUqa0yOSFcmWHLxbF6blTkOxV2KvJ/&#xA;zu8++YtBitdK8tsiahdxz3l7dVQyWtnbFOUnFzxUOz05tsAG+YvwwB3LjajJIUI80n/Jfz95ovvM&#xA;Y0bVbxtUtry2NzHO7K7wshrs6EqyPXtUVpTbJZYCrDXp8kuKju9wzGc12KuxV5v5+8261H5oj8t6&#xA;Pe/otbTTZde1rUfSjmmFlBIIxFarLyi9V2DVMi0A39sthEVZ9zj5Jni4RttZVPJHmzUpLvTIL7UW&#xA;1XT9eimk0u9nS3jnEtsiNJGfqgEEkbqzsrL04mrNyAVlEVt0TjmbAJu3omVN7sVdiry/zzqev6p5&#xA;2Plywv5tN0zTbSHUL6S0LJcTPK8gWP1AylUVIuVARU5dAARsuNkJMuEGgEP5e82axHBoWtWd5LqP&#xA;l7WLlLNra6kimkUzTi1EqTo0v9243XmaitaNhMQbHVEZEUeYL1jKHKdirsVeG/8AOQPme/j1Sw0K&#xA;0ma3UILiQjcOXJpUb9BGV/2R9sVeQaL+YPmDQ9a0+/i1EzO0ohC80lAHpkdEMsfxc9xyrsdhhIpA&#xA;L6G80flBPqesS6ro2rvos92GN9GIVuI3kZOHqIOcRjYj7e5DeH2q2RyUKItpnhs2DTJPIHkpfKWj&#xA;vYm8k1C4nme5u7yWitJK4C14gtT4VA6k++RnPiLPHj4RTJ8g2OxV2KvOvMf5VXl/r82uaLq50i7u&#xA;wPr8TwLdQysihFcIXi4txWjbkHw61sjkoUQ0zw2bBpOvInkOHytHdyyXcuparqLI+o6jNRTIYlKx&#xA;qka7IicjQbnc1JwTnbLHj4feyvINjsVdiry/z1+Ul9rmpjU9OvTbXIdnT4jGyMTzV0kQEg8iajwP&#xA;iBlsMlbOPkw2bCL/ACy/K0+VmN1fmOe+BPoyqWbiCvE7N9k02ou2+OTJacWHh5vRcqb3Yq7FXlPm&#xA;H8ntY17z6vmiXWXsDbyD6s0AEkwhQ0EIElYlRl5VDKwPLdTU5fHKBGqcWenMp8V0yXyP+WWh+Ubm&#xA;7vLSS4vNQvmJuL+9kWSYqTy4DgsaheQrsuQnkMm3HhEN+rMcrbXYq7FWC/mD+Wj+aLu31HT9Sl0T&#xA;WrVGgTUYEWT1LaTd4Joyyc0r0Bam52Ncsx5OHYiw05cPFuDRd5L/AC51HRtXl1rXdbl1/VmRobWV&#xA;4ltoLeKQq0git42ZFaRkHJh1p86meSxQFBceIg2TZZ1lTc7FXYqwvzT5Q1mTzJB5o8uNbDVUhFnf&#xA;Wl6XW2urXkWozRh2jkj5Nwfg3WhFMsjMVR5NM8ZvijzQC+WPOGveYrCTzDaWel+X9DmS8srGwuJJ&#xA;3ubxDWN5JPTt6RRn4gnAEt1qMPEANuZY8EpSHFsA9DypyHYq7FXjn52flT5k81alb6nobq00cQj9&#xA;NvTXiUJbrIyj4tvkRirAfLv/ADjp+Yl55ggvPM1zHHFDx/fGRbk0iWkY48waKNlUUGKvqHFXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqx7zP5x0Hyvp63+tXYtrd2KITuzMFZyFUbtRUJ2wgWtpV5M/Nzyf5w1R7HQHurqNY2kW+e1m&#xA;ht2MfHkitMqPyHMdVpgVm2KuxV2KvFPzF/PNtF8yJommxNN6TFL4EiPmpA5BJHMZjZRWhFd/xQFZ&#xA;B+UH5jv5jgOm3bNJcwK8lvcyuDLNbgrwLgKoLjnRiPD50Vel4q7FXYq+T/P359+cL38wbvy9p+pn&#xA;RtLtb2S0he3Qeo/ouyGSRmZW+L+Xmq0ptXfEK9K/KD8x/Nl15ok8n+aZYtRllsI9W0bWbdWVbi1l&#xA;o1XB40pzp02YEeGKvZsVdirsVeAfmZ+c/muDzpcaB5XnSzt9M5/Xbt4llLtGKyAiRTxRPs7d++ZW&#xA;PFHhuTg5c8jPhiy/8vvzH1251Cz0LzGIbi7vYlubPVIP3ccsLozAlCB8XJeGwFT26Fq5wFWG7Hkl&#xA;fDLm9QylyHYq7FWA6n+bGmaR5rudD1qxu9NjRZHtNRmT/R7lYow7eiy15bf25aMRIsNBzgSoim3/&#xA;ADZ0q41fTNK0O0uNYub/AIPN9XA428LMRzlJ2Gyk7kYjEasqc4sAbs9ypvdirsVeZ+cvP+sL52by&#xA;lossNsbezW91K+NJJo+TbRxxMCteHxHkDs2wHU3QgOGy42TKeLhCTaf581vRJ9E1vUNbk1XydrVx&#xA;JbPcSwR+qkzeoIyvoqjAB4iCtDtXbpkuASsAbsfEMSCTcS9lzHct2KuxV4Z+eXmjW9P18WlpeXFn&#xA;bC1R6wyMgZ2ZqfZPUU7U6jMrDAEW6zU5iMlX0YT5K/MzzDMIjHqs94rOVo9w0hBKg1Zw0qkDlupO&#xA;AxBFhtE5RNFl+pfkZ5h8zeb5vNHmW+ma7ZDHbW0crJFDCwZfq6BK/uwG+LpyPKteVcxnOem+TPKK&#xA;aCY0hgMEKxsvp1+FSSCAACa/P+PRVluKuxV2KvCvzA/I/wA1655gn17Trq3S7kmqtZJImMTsE4ll&#xA;Hw8E3JG5oaDfFWQ/lL+Tt35OvpNT1K8jub5o2gjSAN6axniftPQ15BtgO+KvVMVdirsVfOXnb/nH&#xA;/wA3Wn5hTeePJaWN+880ssukagSik3CMslGXhtVyRR1YdvHFWaflR+WnmnTfMdx5u84NbxasbKLS&#xA;tL0vT3c2tnYxU/d/HyZiSoIqx7k1J2Ves4q7FXYq8K8+/kn5muPNs/mLys0JmnmeaeG6ccH9YEuv&#xA;T+bl1/mHgcyYZhVFwsmnlxcUUb5H/L78w0802eqa/Hb2sNkkcQAdZVMURBWKGOMhUqw5Ekdd6VwT&#xA;nGqCceOfFcntGY7mOxV2Ksd85+UrDzRo13pd9CHWVSbaY05wzAfu5Y26qyN9/Q1BIyUJGJthkgJC&#xA;ih/IPkqHyto625Am1O5b19Vv6ANNO256AURPsoo2A964Zz4ijFj4R5sqyDY7FXYq8o8//ll5rvfO&#xA;6+b/ACncW0F8tssNzBeM5juONQYyqq1AycR9oficvhkHDwlxcuGRlxR5sdvPIf5veZoNFj1Kz0/Q&#xA;dK0i7S5h0mzfk3qVY+uzF3X4Kmihv2smJwjdbtcseSdXQAe85iuc7FXYq8t/NvyTreu3cU+l2f1l&#xA;wqRyGqD4fi3HNlpx5f2ZmYZxENzu89rsOeWpuMSYcI380p0L8nJdNvQi2EKaf6YEyJFBGsr/AAg/&#xA;BFw4/CNz3O5yMpRA2cnEM8jc4/c9ozFdw7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXjfn3809Xi1R9P0XUI9Ms7dGabUJInnaR1&#xA;5VVFSOchRx6hPpAzPxYYRjxT3cHJmnKXDDZkf5W+edY1qa/0XXEB1bSyRLcoAEcByhDcfhDBh26/&#xA;RkNVgjGpR5Flpc8pXGXMPQcw3MdirsVSnWdf07RbFr/UpmhtUZULqkkpqxoBwiV2P3YgKjrK7hu7&#xA;eG5gfnBOiyxPQiqOOSmhoeh74qiMVdirsVeBat+bWuv5k1bSfr50ySwkcPbzAxSEeoAvpKUklk5I&#xA;wNFU/D8Q23zK8MAW4PjSMjEIryh+cWq6h+YFj5caf6/HcybvARKgjaIyVZk6cf2gQCpFDQ1GCWIc&#xA;NphnPHwvc8xnNdirsVeC/mH+Z3nA+YdQ0TS5/qKadMyu8Kv6hWvwk8Ty+zvttmVDHECy4OTLIy4Q&#xA;mX5bfmTrs+v22k6vdPcW90OMBlUCTkx+Gpbi/U++2RnjFWGWLLLiovaMx3MdirsVeZ/mP+bl35Z1&#xA;qLRNK0s6nqEkZmkZpCkcSKpc1CqxNEUsd1oN98ux4rFkuPlzmJ4QLKUeUvzvudW1g297bi2kb0Lc&#xA;WbMBH6zyBC6SMqvuGJ4tXtTuclLEKsMI5zxUXseY7luxV2Kse84eePLnlKy+va7erawsSIk3aSQg&#xA;VIRFqzUrvkowMuTCcxHmkFv+en5ZS6k+nvrIgnXgOVxFNChLnpydFpTYnlQb/OkhilV0wOeANEvQ&#xA;MrbnYq7FWL+cPOkehX+k6ZFEJ9S1mcQWqM3FEFQpkegJoC67Dr44qmy6/pQht3N5FMtxOLSOWE80&#xA;a4IPwfCX4n4T1O2KvFvOP5UeabrVbloNOj1LT5ZJJYVkELBPUBFCk1a0rse3XbNnDPjlECTrZ4Mk&#xA;ZExZ3+U3kG+8sW15c6nxOo3zAMqnkEjjrQcvFixJp7ZRq9QMhAHIN+k05xgk8y9AzDct2KuxV5n5&#xA;w/L7XPMF+XnMF5ZdBaXimSELUH+6Pw8qioOx98y4ZYCNEOJPFMysFPfJPk270Fy8147p6axJaISI&#xA;FCg0bj05+4yGbKJCgGzFiMTZLL8x292KuxV8/wCoflhrUnm/UdY1TRz5kluZH4LqIeWFIvUHpiPi&#xA;wFFH7NDt2HfK8QcNcnB8KQnxVZVvI/5W6/pX5iWuu2VrJomnl6XNnbepFbtCEI4MjsxILAGjd8Z5&#xA;AY1zXHhkJ8XJ71mK5zsVdirxX80vyq8y3vmGbzF5aggu5L2Mxanp0xWMSgDgrjl8DVjPB1bqPGuZ&#xA;GPIKouJlwy4uKKp+W35Qa7YeY4PMHmEw2ws0C6fptr0RhsGcgBFVVqqqm1PCm7PKKoLiwS4uKT2b&#xA;Mdy3Yq7FXh35oflT5n1bznJrWkMJDfUiAbkVCeisUkc2xUIy8t/DbqQMyceUCNFw82GRlxBIfy//&#xA;ACL80SeY49U1umkwabch47eKKNBJJG3INGkQWLh/lD6MlPNECg149PIy4pPo/MR2DsVdirwb85/y&#xA;w8weZPNcuoWXrXCGOJY4ikrxoiqFYKwBVeTEmi+5PjmTiyACnCz4TKVhI7L8gvNGr3kA1IwWVnAp&#xA;FuEgWNUoS5URIsSqGck7L3J+cvGjEbMTp5TNyfSuYjnuxV2KvJPz4/LnzX5pTS9S8rSIur6SZOET&#xA;kIJElpWjt8IZSu1fffpirG/y9/Lr82rjWdMPm2KHS9C0qZboWUDQVmnTdW423wciwHJ2+Lrvir3/&#xA;ABV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KvC9X/OP8w/MPmXVdH/LjTbO4ttEbhdX93IgSVyWRQju8caq7D4BuWpWtMVT38lvz&#xA;quvPN7qeg61pv6M8xaQCbmKPl6bBGEcmzCqMrkfDU4q9XxV2KuxV5pqn58eWLXzNe+XdOsNR1y80&#xA;xa6lcWCWy2ls3LiY5bi6ntow9dutOR4g8qgKo38v/wA7PJvnXVLzRbRbvS9esXdZ9H1SJbe6pFQO&#xA;yqryoeJ2K8uQpuKb4qz7FXYq7FXmfnL869K0m/Oi6NFJquuCYwSWyIwWNkNHUlgtW8ONRl0MJO55&#xA;ONk1IBoblS/L783JNZ1W38t6hbuusL6n1156QupXkwIiCKKfZQCtfnhyYqF9EYs9nhPN6jlDlOxV&#xA;2KvBJ/NvnO08xeZtS1DzI8Gh2N9dW9lZSpFHAqRzMgPqKFlPDhQ9t/bJMUf5U88+Y9R1zToZtRMt&#xA;pczQlJYH5xuGlAZOTKAQVFOnQ+PRIUF7ZkWTsVdir5s86+dvzGT8yPM1tbeaJNJ8vaTNGqRCOAhV&#xA;NvG7UZ43PV/fLoQBDVKRBSW28+/mtHqug3tv5vl1TQ73UrW1uV9G3U8JJkVlYiNTvyp0GMoAC1Ez&#xA;b6tyltdirsVQWpanb6fEZp2otQqgbks2wAA3O+W4cMshoNWbNHGLKFtvMUEl3FbTIYjOD6Dk/CxH&#xA;VexqMtlpjwmUTdc2qOpHEIyFXyTfMVynYq7FUs1jWV097eFYzPdXj+lbQKQOTUqSSegUbk5kYMHH&#xA;Zuox5lIq919lqNw8ogu440kYHg8MnqRkr9palUIYeFMjPHGribHmzMQRYfL/AJ3/ACk/NTy35q1a&#xA;78mWC6poGsSrOLZlWYxuhLpyjkP2omZlRvA/PKWtnv8Azjj+Ufmnyte6v5q82OU1vWV4fVOZdkVn&#xA;9SR5jupdmA6dN/HFXueKuxV2KvANZ/Jy8gv7mbToZfUuCfVkg5qX+LnxILAddwa0xQn35aflIug+&#xA;aYdfuVI1FFmSVgG4kTLsSzfFy61NcUvYcVdirsVfNHm78o/Plz5+vb2zgF0Lid54pWNYzE7Ejkzj&#xA;ipXoVIp4AjMyGWPC63Jp5mdhkX5R/lPr6a5B5x113sbyOR/TsZEId1oUYurBfTrsV/pkcuUVwhsw&#xA;YDfEXuuYrnOxV2KvC9d0iLX7nWdLktbqxEOpXTGcxmOsi3PrQzRM68JEcmuwbcb5Jis0iwTy7qnl&#xA;rSrGzub9zqMf1q7MDvw9WUs8jyKgjUAljtt07Yq93yLJ2KuxV8l/mRH5lt/zW81odA1K/wBGv5Yq&#xA;T21rNIu1vGCyMq0NCOxy6EqDVONlLbKPzCdU8vaVp2gaoll+lLOa9uJ7O4WgjulcszPGKdBU+2Sl&#xA;MUxjE2+xsx292KuxVI/M2l3Wo2wjtWCXETrJCzV48huNx0ocy9Hnjjl6uRcTWYJZI+nmEr8veUbq&#xA;3nt7nUWiDWpZoLa3REiVmBBYhEjWu/ZRmRn1eMRMMQoHm4+DSZDITymyGYZrHZuxV2KpTremNevA&#xA;8T+jdWjia2n48grUKkMNqqykg75kYM3BYIuMhRZQIB3S3RtI1aK/Et1Ba2ltEXdIrJeIeVyAzvsN&#xA;2AGXZMmKMCIXZ73LnLFGBELJPeyjMFwnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8o1v8z9Xm1CWLR5o7e0hkaMSFBIzemSp5cu&#xA;lW2H+Zy+OMdXElmN7Mg/L3zrqesyzadq8aLfQoZFli2DorBTyX9ltxtkckAOTZiyE7Fm+VN7sVdi&#xA;rzzzb+Y11Yax+j9JpNMoMTxGJpSZfFEjHNio9/o75dDHY3cfJmo0Ef5F8+tr91NbXXppPxDwLGRQ&#xA;qAOQoatWp/A5GcKZYsvEzTK252KuxVj3mjzdDoIs09E3t3e3CwQ2UJrOykEvIkYDMwQLvt9OKq/l&#xA;nzRZ63A3H91exVFzaMCHjINKEEDodsVTrFXYq7FWE+e/zM0/yxE/xRtLFNFHdNIaJAjkMXcVUkcO&#xA;nGu+KqHkf81rDzb5gv7KzjA02JFewvCQDKdg6/aO+9R7Yqz3FXYq7FXnv5g/mvp/li7+pLLGbmL9&#xA;5coftqgXl0fgtGqPj5Gnh4Wwx2LaMubhNDms8lfm7ZeYhbViXlcssa+i6uoZmC9a9vir/tVZY6WG&#xA;a9i9FypvdirsVdirsVdirsVdirsVdir5282eQvNOlX9zHp+ky6vpd1cvdRG3qXVnPIh+LBhvmVGU&#xA;ZDdwJQlE7C3oH5SaD5gia41fWrM6c0yelaWLhfUVCQWZ6U41KbA5XlkOQbsETzOz0nKXJdirsVfP&#xA;P5keVPOOm+ZZb3QLOTU4LxSzRKJGNHbkyvwKEUdA3wkfdXMqBjKNFwckZxlcd2Yfk55W8ywSSav5&#xA;lT0r4c/TiYUkDzfHIz9qnl2yGWQ5Bs08Jc5PVsocp2KuxV4T+Yn5ffmrqX5lHzNo8tneaXHEtlba&#xA;dPI8VIHWsvqFODU9arEo/KlKdKYUM4/L3yTrmj3s+pa3dxT3dwo4wW/qcIzuvHk5+LilBUivX54F&#xA;Z9il2KuxV4Z+cHkbzBqGoTanaRS3UgkSS2MSrI0csLepCyRcX5lOC1DKV2NeuFCR/k15N832/myG&#xA;7u45I7d5Xu9Skni9IyvUOCFUIi1d67D9RwJfR+KuxV2Kvnf80vyz8y+YfO+sXlgskSgxSJJPzMEg&#xA;EMar6TBJEBDr8SsabV6ZlQmBGi4OTHLjsJ9+Wn5Ratpd3FqmuyyNevKs08Suij1VdWDMIl4bBP2e&#xA;vjvXISyCqDZHESeKT2rKHKdirsVdirsVdirsVdirsVdir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:83B262E35182E7119CF3A3112F42A77A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:83B262E35182E7119CF3A3112F42A77A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:82B262E35182E7119CF3A3112F42A77A</stRef:instanceID>
            <stRef:documentID>xmp.did:82B262E35182E7119CF3A3112F42A77A</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0567C9C68DFBE41182D6F8C1726D1623</stEvt:instanceID>
                  <stEvt:when>2015-05-16T11:08:27+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:83B262E35182E7119CF3A3112F42A77A</stEvt:instanceID>
                  <stEvt:when>2017-08-16T12:41:56+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000041</stDim:w>
            <stDim:h>4.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -287.999 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 287.999 li
288.003 287.999 li
288.003 0 li
cp
clp
-.000976563 288 mo
-.000976563 0 li
288.003 0 li
288.003 288 li
-.000976563 288 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
[-460.558 460.558 -460.558 -460.558 296.762 -8.75879 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzz!<<*"!<<*"!<<*"!WW3#!WW3#!W`<%!s&E&!s&E&!s&E&"9JT("9JW)"9JW)"Te`*"T
nf+"p4o,"p4r-#6P&.#6Y,/#Qt81#Qt81#mCG3#mCG3$3^S5$O-b7$O-e8$jQt:%0m(;%1!1=%L<:>%g
`LA&.&XC&IJgE&desG'+5-I'FP6J'atHM((:QN(C^cQ(_-rS)%I)U)@m8W)\<JZ*"WV\*>&e^*YK"a*t
f.c+;5=e+VYOh+r(^j,S^sm,o.0p~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-460.558 460.558 -460.558 -460.558 296.762 -8.75879 ]ct
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiE)!WiH+!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5
"U,)7"pP89"pP;;#6tJ=#6tJ>#RC\A#RC\B#mgnF$47+I$47+J$O[=N$k*OQ$k*OR%1NaV%LrsZ%hB0^
&.fBb&J5Tf&eYfj',)#n'GM5q'bqGu()@Z$(Ddl((`4),)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D+!2RH
+<VdL+X&!P+sJ6V,U=W\~>
<~zzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W
."9\i1"9\i1"9\i2"U,&5"U,&6"pP89"pP8:#6tJ=#6tJ>#RC\A#RC\B#mgnE#mgnF$47+I$47+J$O[=
M$O[=M$k*OQ%1NaU%1NaU%LrsY%hB0]%hB0]&.fBa&J5Te&J5Te&eYfi',)#m'GM5q'GM5q'bqGu~>
<~zzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiH+!s8W-!s8W-!s8
W-!s8W."9\i1"9\i2"U,&5"U,&5"U,&6"pP89"pP8:#6tJ>#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47
+I$O[=M$O[=M$k*OQ$k*OQ%1NaU%LrsY%LrsY%hB0]&.fBa&.fBa&J5Te&J5Te&eYfi',)#m~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
123.536 137.083 mo
123.536 132.586 li
124.41 132.586 li
124.41 136.316 li
126.702 136.316 li
126.702 137.083 li
123.536 137.083 li
cp
.75021 .679683 .670222 .90164 cmyk
f
132.144 134.834 mo
132.144 135.029 132.171 135.217 132.229 135.398 cv
132.286 135.58 132.368 135.74 132.476 135.88 cv
132.583 136.02 132.716 136.131 132.872 136.215 cv
133.027 136.3 133.205 136.342 133.403 136.342 cv
133.606 136.342 133.784 136.299 133.938 136.213 cv
134.093 136.125 134.223 136.011 134.328 135.867 cv
134.434 135.724 134.514 135.563 134.569 135.383 cv
134.624 135.203 134.651 135.021 134.651 134.834 cv
134.651 134.641 134.622 134.453 134.563 134.271 cv
134.503 134.09 134.42 133.93 134.312 133.789 cv
134.204 133.65 134.073 133.539 133.919 133.457 cv
133.766 133.375 133.591 133.334 133.397 133.334 cv
133.194 133.334 133.017 133.377 132.862 133.463 cv
132.708 133.551 132.577 133.664 132.47 133.806 cv
132.361 133.947 132.28 134.107 132.226 134.287 cv
132.171 134.467 132.144 134.648 132.144 134.834 cv
cp
133.391 137.115 mo
133.074 137.115 132.784 137.051 132.522 136.922 cv
132.261 136.793 132.036 136.621 131.849 136.408 cv
131.661 136.195 131.517 135.951 131.415 135.677 cv
131.313 135.402 131.263 135.122 131.263 134.834 cv
131.263 134.535 131.316 134.248 131.425 133.973 cv
131.532 133.699 131.682 133.456 131.874 133.245 cv
132.065 133.033 132.293 132.866 132.555 132.742 cv
132.816 132.617 133.102 132.555 133.409 132.555 cv
133.727 132.555 134.016 132.621 134.277 132.754 cv
134.539 132.887 134.763 133.062 134.948 133.277 cv
135.134 133.492 135.278 133.736 135.38 134.012 cv
135.481 134.285 135.531 134.564 135.531 134.848 cv
135.531 135.146 135.478 135.434 135.37 135.705 cv
135.263 135.979 135.113 136.219 134.923 136.428 cv
134.733 136.637 134.507 136.803 134.245 136.928 cv
133.983 137.053 133.698 137.115 133.391 137.115 cv
cp
f
141.517 134.809 mo
142.612 134.809 li
142.837 134.752 li
143.018 134.598 li
143.138 134.366 li
143.167 134.277 143.183 134.182 143.183 134.081 cv
143.183 133.976 143.165 133.879 143.132 133.789 cv
142.995 133.559 li
142.799 133.406 li
142.574 133.353 li
141.517 133.353 li
141.517 134.809 li
cp
140.643 137.083 mo
140.643 132.586 li
142.632 132.586 li
142.838 132.586 143.029 132.63 143.204 132.717 cv
143.38 132.803 143.53 132.916 143.657 133.059 cv
143.784 133.199 143.883 133.359 143.955 133.539 cv
144.026 133.719 144.063 133.899 144.063 134.081 cv
144.063 134.373 143.989 134.637 143.845 134.876 cv
143.698 135.114 143.501 135.287 143.252 135.393 cv
144.31 137.083 li
143.321 137.083 li
142.378 135.576 li
141.517 135.576 li
141.517 137.083 li
140.643 137.083 li
cp
f
152.466 136.316 mo
152.466 137.083 li
149.345 137.083 li
149.345 132.586 li
152.409 132.586 li
152.409 133.353 li
150.219 133.353 li
150.219 134.436 li
152.112 134.436 li
152.112 135.145 li
150.219 135.145 li
150.219 136.316 li
152.466 136.316 li
cp
f
161.27 137.083 mo
161.27 134.106 li
160.11 136.323 li
159.636 136.323 li
158.477 134.106 li
158.477 137.083 li
157.603 137.083 li
157.603 132.586 li
158.54 132.586 li
159.87 135.145 li
161.212 132.586 li
162.144 132.586 li
162.144 137.083 li
161.27 137.083 li
cp
f
124.515 147.604 mo
124.515 143.113 li
125.389 143.113 li
125.389 147.604 li
124.515 147.604 li
cp
f
131.634 145.329 mo
132.646 145.329 li
132.808 145.329 132.94 145.264 133.049 145.133 cv
133.156 145.002 133.21 144.824 133.21 144.602 cv
133.21 144.486 133.193 144.385 133.159 144.294 cv
133.126 144.203 133.081 144.126 133.026 144.063 cv
132.833 143.92 li
132.608 143.873 li
131.634 143.873 li
131.634 145.329 li
cp
130.759 147.604 mo
130.759 143.106 li
132.665 143.106 li
132.872 143.106 133.063 143.15 133.239 143.236 cv
133.414 143.322 133.565 143.437 133.691 143.578 cv
133.818 143.72 133.917 143.88 133.989 144.06 cv
134.062 144.238 134.097 144.42 134.097 144.602 cv
134.097 144.791 134.063 144.976 133.995 145.155 cv
133.928 145.334 133.833 145.494 133.71 145.633 cv
133.588 145.772 133.44 145.885 133.267 145.969 cv
133.095 146.054 132.903 146.096 132.697 146.096 cv
131.634 146.096 li
131.634 147.604 li
130.759 147.604 li
cp
f
141.811 144.284 mo
141.649 144.164 li
141.571 144.113 141.476 144.064 141.364 144.016 cv
141.253 143.967 141.131 143.926 141 143.892 cv
140.869 143.857 140.736 143.841 140.601 143.841 cv
140.36 143.841 140.181 143.885 140.063 143.975 cv
139.944 144.063 139.886 144.188 139.886 144.348 cv
139.886 144.44 139.907 144.518 139.952 144.578 cv
140.146 144.74 li
140.229 144.787 140.336 144.829 140.465 144.867 cv
140.594 144.904 140.743 144.945 140.911 144.987 cv
141.131 145.047 141.331 145.109 141.51 145.178 cv
141.689 145.245 141.841 145.329 141.966 145.431 cv
142.091 145.532 142.187 145.653 142.254 145.795 cv
142.321 145.937 142.355 146.11 142.355 146.317 cv
142.355 146.559 142.31 146.764 142.22 146.936 cv
142.128 147.105 142.007 147.244 141.854 147.35 cv
141.703 147.455 141.526 147.532 141.323 147.581 cv
141.12 147.629 140.909 147.654 140.69 147.654 cv
140.353 147.654 140.019 147.604 139.688 147.502 cv
139.36 147.4 139.063 147.257 138.802 147.07 cv
139.188 146.317 li
139.227 146.355 139.296 146.404 139.395 146.467 cv
139.493 146.527 139.61 146.589 139.746 146.65 cv
139.882 146.711 140.031 146.763 140.196 146.805 cv
140.36 146.848 140.529 146.868 140.702 146.868 cv
141.184 146.868 141.425 146.715 141.425 146.406 cv
141.425 146.305 141.397 146.221 141.343 146.152 cv
141.287 146.085 141.209 146.025 141.108 145.976 cv
141.007 145.925 140.884 145.879 140.74 145.836 cv
140.597 145.794 140.437 145.75 140.259 145.703 cv
140.044 145.645 139.856 145.58 139.698 145.51 cv
139.54 145.439 139.408 145.359 139.303 145.266 cv
139.197 145.174 139.118 145.063 139.065 144.937 cv
139.013 144.811 138.985 144.66 138.985 144.486 cv
138.985 144.259 139.028 144.057 139.112 143.879 cv
139.197 143.701 139.314 143.554 139.464 143.436 cv
139.614 143.317 139.788 143.228 139.987 143.166 cv
140.185 143.105 140.398 143.074 140.626 143.074 cv
140.942 143.074 141.234 143.125 141.501 143.224 cv
141.767 143.322 141.999 143.439 142.197 143.575 cv
141.811 144.284 li
cp
f
149.348 146.861 mo
149.555 146.861 149.729 146.82 149.87 146.735 cv
150.012 146.65 150.126 146.541 150.212 146.406 cv
150.298 146.271 150.359 146.115 150.396 145.94 cv
150.431 145.766 150.449 145.585 150.449 145.398 cv
150.449 143.106 li
151.317 143.106 li
151.317 145.398 li
151.317 145.707 151.28 145.996 151.206 146.267 cv
151.132 146.537 151.017 146.773 150.858 146.977 cv
150.699 147.179 150.495 147.34 150.247 147.457 cv
149.998 147.576 149.7 147.635 149.354 147.635 cv
148.995 147.635 148.69 147.572 148.438 147.447 cv
148.188 147.323 147.983 147.158 147.827 146.953 cv
147.671 146.749 147.559 146.512 147.489 146.241 cv
147.419 145.971 147.384 145.69 147.384 145.398 cv
147.384 143.106 li
148.259 143.106 li
148.259 145.398 li
148.259 145.589 148.276 145.771 148.312 145.947 cv
148.349 146.122 148.409 146.277 148.496 146.412 cv
148.583 146.547 148.695 146.656 148.835 146.738 cv
148.974 146.82 149.146 146.861 149.348 146.861 cv
cp
f
160.291 147.604 mo
160.291 144.627 li
159.132 146.844 li
158.657 146.844 li
157.498 144.627 li
157.498 147.604 li
156.624 147.604 li
156.624 143.106 li
157.562 143.106 li
158.892 145.665 li
160.233 143.106 li
161.165 143.106 li
161.165 147.604 li
160.291 147.604 li
cp
f
125.356 154.27 mo
125.79 154.27 li
125.099 156.305 li
124.63 156.305 li
123.938 154.27 li
124.374 154.27 li
124.757 155.48 li
124.778 155.553 124.8 155.637 124.823 155.73 cv
124.845 155.826 124.86 155.893 124.864 155.93 cv
124.876 155.844 124.911 155.693 124.972 155.48 cv
125.356 154.27 li
cp
f
128.644 156.305 mo
127.472 156.305 li
127.472 154.27 li
128.644 154.27 li
128.644 154.623 li
127.905 154.623 li
127.905 155.07 li
128.595 155.07 li
128.595 155.423 li
127.905 155.423 li
127.905 155.947 li
128.644 155.947 li
128.644 156.305 li
cp
f
131.358 154.601 mo
131.194 154.601 131.069 154.66 130.981 154.782 cv
130.892 154.904 130.847 155.074 130.847 155.293 cv
130.847 155.746 131.017 155.975 131.358 155.975 cv
131.503 155.975 131.673 155.938 131.878 155.865 cv
131.878 156.227 li
131.712 156.298 131.524 156.332 131.319 156.332 cv
131.022 156.332 130.796 156.242 130.64 156.063 cv
130.481 155.885 130.403 155.627 130.403 155.289 cv
130.403 155.078 130.442 154.894 130.521 154.734 cv
130.595 154.575 130.708 154.453 130.851 154.367 cv
130.995 154.283 131.165 154.24 131.358 154.24 cv
131.554 154.24 131.755 154.287 131.956 154.383 cv
131.815 154.734 li
131.585 154.641 li
131.358 154.601 li
cp
f
134.522 156.305 mo
134.089 156.305 li
134.089 154.63 li
133.536 154.63 li
133.536 154.27 li
135.071 154.27 li
135.071 154.63 li
134.522 154.63 li
134.522 156.305 li
cp
f
137.175 155.285 mo
137.175 155.512 137.218 155.684 137.302 155.797 cv
137.39 155.914 137.519 155.969 137.69 155.969 cv
138.034 155.969 138.204 155.74 138.204 155.285 cv
138.204 154.826 138.036 154.597 137.692 154.597 cv
137.521 154.597 137.394 154.654 137.306 154.77 cv
137.218 154.885 137.175 155.057 137.175 155.285 cv
cp
138.657 155.285 mo
138.657 155.62 138.575 155.881 138.409 156.061 cv
138.243 156.242 138.001 156.332 137.69 156.332 cv
137.378 156.332 137.14 156.242 136.974 156.061 cv
136.804 155.881 136.722 155.62 136.722 155.282 cv
136.722 154.943 136.804 154.684 136.974 154.505 cv
137.14 154.326 137.38 154.237 137.692 154.237 cv
138.007 154.237 138.245 154.327 138.411 154.508 cv
138.577 154.688 138.657 154.947 138.657 155.285 cv
cp
f
140.937 155.174 mo
141.075 155.174 li
141.212 155.174 141.315 155.149 141.378 155.104 cv
141.442 155.06 141.476 154.988 141.476 154.89 cv
141.476 154.795 141.442 154.725 141.376 154.684 cv
141.31 154.643 141.206 154.623 141.069 154.623 cv
140.937 154.623 li
140.937 155.174 li
cp
140.937 155.523 mo
140.937 156.305 li
140.505 156.305 li
140.505 154.27 li
141.099 154.27 li
141.376 154.27 141.581 154.319 141.712 154.42 cv
141.847 154.521 141.911 154.675 141.911 154.879 cv
141.911 154.998 141.878 155.104 141.813 155.199 cv
141.747 155.293 141.651 155.364 141.53 155.418 cv
141.837 155.877 142.036 156.17 142.128 156.305 cv
141.651 156.305 li
141.167 155.523 li
140.937 155.523 li
cp
f
147.218 155.279 mo
147.218 154.842 147.024 154.623 146.64 154.623 cv
146.411 154.623 li
146.411 155.947 li
146.595 155.947 li
147.011 155.947 147.218 155.725 147.218 155.279 cv
cp
147.665 155.268 mo
147.665 155.604 147.569 155.86 147.382 156.037 cv
147.19 156.216 146.913 156.305 146.554 156.305 cv
145.979 156.305 li
145.979 154.27 li
146.616 154.27 li
146.948 154.27 147.208 154.357 147.392 154.531 cv
147.575 154.708 147.665 154.953 147.665 155.268 cv
cp
f
150.685 156.305 mo
149.513 156.305 li
149.513 154.27 li
150.685 154.27 li
150.685 154.623 li
149.946 154.623 li
149.946 155.07 li
150.634 155.07 li
150.634 155.423 li
149.946 155.423 li
149.946 155.947 li
150.685 155.947 li
150.685 156.305 li
cp
f
153.737 155.738 mo
153.737 155.922 153.673 156.067 153.538 156.174 cv
153.405 156.279 153.222 156.332 152.985 156.332 cv
152.769 156.332 152.577 156.293 152.411 156.211 cv
152.411 155.811 li
152.548 155.869 152.663 155.914 152.759 155.938 cv
152.854 155.963 152.94 155.977 153.021 155.977 cv
153.114 155.977 153.187 155.959 153.235 155.922 cv
153.315 155.761 li
153.282 155.653 li
153.181 155.564 li
153.138 155.535 153.05 155.488 152.921 155.428 cv
152.794 155.368 152.702 155.314 152.642 155.258 cv
152.489 155.07 li
152.452 154.998 152.435 154.916 152.435 154.819 cv
152.435 154.641 152.495 154.498 152.618 154.396 cv
152.739 154.293 152.909 154.24 153.122 154.24 cv
153.229 154.24 153.329 154.253 153.425 154.278 cv
153.522 154.303 153.624 154.338 153.726 154.383 cv
153.585 154.72 li
153.478 154.675 153.39 154.643 153.317 154.627 cv
153.108 154.601 li
152.921 154.656 li
152.856 154.805 li
152.884 154.906 li
152.968 154.988 li
153.005 155.014 153.099 155.063 153.241 155.129 cv
153.431 155.221 153.56 155.314 153.63 155.404 cv
153.7 155.494 153.737 155.607 153.737 155.738 cv
cp
f
155.532 156.305 mo
155.532 154.27 li
155.962 154.27 li
155.962 156.305 li
155.532 156.305 li
cp
f
158.673 155.162 mo
159.481 155.162 li
159.481 156.216 li
159.347 156.26 159.226 156.29 159.112 156.306 cv
158.993 156.324 158.878 156.332 158.755 156.332 cv
158.448 156.332 158.214 156.242 158.05 156.063 cv
157.892 155.881 157.81 155.621 157.81 155.285 cv
157.81 154.956 157.903 154.701 158.091 154.516 cv
158.28 154.332 158.542 154.24 158.872 154.24 cv
159.081 154.24 159.282 154.282 159.476 154.364 cv
159.333 154.711 li
159.185 154.637 159.032 154.601 158.87 154.601 cv
158.683 154.601 158.534 154.662 158.421 154.786 cv
158.31 154.91 158.253 155.08 158.253 155.293 cv
158.253 155.513 158.3 155.683 158.39 155.797 cv
158.479 155.914 158.612 155.975 158.784 155.975 cv
158.872 155.975 158.966 155.964 159.06 155.945 cv
159.06 155.521 li
158.673 155.521 li
158.673 155.162 li
cp
f
163.194 156.305 mo
162.647 156.305 li
161.759 154.766 li
161.749 154.766 li
161.767 155.038 161.774 155.229 161.774 155.346 cv
161.774 156.305 li
161.39 156.305 li
161.39 154.27 li
161.933 154.27 li
162.817 155.794 li
162.827 155.794 li
162.815 155.529 162.808 155.344 162.808 155.232 cv
162.808 154.27 li
163.194 154.27 li
163.194 156.305 li
cp
f
122.231 155.137 mo
122.231 155.488 121.944 155.771 121.595 155.771 cv
121.243 155.771 120.958 155.488 120.958 155.137 cv
120.958 154.785 121.243 154.501 121.595 154.501 cv
121.944 154.501 122.231 154.785 122.231 155.137 cv
cp
f
165.905 155.137 mo
165.905 155.488 165.618 155.771 165.269 155.771 cv
164.917 155.771 164.632 155.488 164.632 155.137 cv
164.632 154.785 164.917 154.501 165.269 154.501 cv
165.618 154.501 165.905 154.785 165.905 155.137 cv
cp
f
129.991 177.283 mo
130.013 177.261 li
129.991 177.238 li
129.968 177.261 li
129.991 177.283 li
cp
f
110.458 163.285 mo
110.526 163.218 li
110.458 163.15 li
110.392 163.218 li
110.458 163.285 li
cp
f
201.567 170.703 mo
201.591 170.681 li
201.567 170.658 li
201.544 170.681 li
201.567 170.703 li
cp
f
197.011 174.686 mo
197.032 174.662 li
197.011 174.641 li
196.987 174.662 li
197.011 174.686 li
cp
f
192.114 178.242 mo
192.136 178.221 li
192.114 178.197 li
192.091 178.221 li
192.114 178.242 li
cp
f
186.917 181.347 mo
186.94 181.324 li
186.917 181.301 li
186.896 181.324 li
186.917 181.347 li
cp
f
181.466 184.039 mo
181.556 183.949 li
181.466 183.859 li
181.376 183.949 li
181.466 184.039 li
cp
f
175.8 186.145 mo
175.868 186.076 li
175.8 186.009 li
175.731 186.076 li
175.8 186.145 li
cp
f
169.966 187.754 mo
170.032 187.686 li
169.966 187.619 li
169.897 187.686 li
169.966 187.754 li
cp
f
164.011 188.834 mo
164.079 188.767 li
164.011 188.699 li
163.942 188.767 li
164.011 188.834 li
cp
f
157.983 189.377 mo
158.05 189.311 li
157.983 189.242 li
157.915 189.311 li
157.983 189.377 li
cp
f
151.931 189.377 mo
151.999 189.311 li
151.931 189.242 li
151.864 189.311 li
151.931 189.377 li
cp
f
145.903 188.834 mo
145.972 188.767 li
145.903 188.699 li
145.837 188.767 li
145.903 188.834 li
cp
f
139.948 187.754 mo
140.017 187.686 li
139.948 187.619 li
139.882 187.686 li
139.948 187.754 li
cp
f
134.114 186.145 mo
134.183 186.076 li
134.114 186.009 li
134.048 186.076 li
134.114 186.145 li
cp
f
128.448 184.084 mo
128.583 183.949 li
128.448 183.815 li
128.313 183.949 li
128.448 184.084 li
cp
f
122.997 181.414 mo
123.085 181.324 li
122.997 181.234 li
122.907 181.324 li
122.997 181.414 li
cp
f
117.8 178.354 mo
117.935 178.221 li
117.8 178.085 li
117.665 178.221 li
117.8 178.354 li
cp
f
112.903 174.73 mo
112.972 174.662 li
112.903 174.595 li
112.837 174.662 li
112.903 174.73 li
cp
f
108.347 170.838 mo
108.505 170.681 li
108.347 170.523 li
108.188 170.681 li
108.347 170.838 li
cp
f
104.163 166.463 mo
104.321 166.306 li
104.163 166.148 li
104.007 166.306 li
104.163 166.463 li
cp
f
100.39 161.641 mo
100.458 161.574 li
100.39 161.508 li
100.323 161.574 li
100.39 161.641 li
cp
f
97.0576 156.681 mo
97.2139 156.523 li
97.0576 156.367 li
96.8994 156.523 li
97.0576 156.681 li
cp
f
94.1885 151.262 mo
94.2568 151.193 li
94.1885 151.127 li
94.1221 151.193 li
94.1885 151.262 li
cp
f
91.8115 145.764 mo
91.9443 145.629 li
91.8115 145.494 li
91.6748 145.629 li
91.8115 145.764 li
cp
f
89.9404 139.94 mo
90.0068 139.873 li
89.9404 139.807 li
89.8721 139.873 li
89.9404 139.94 li
cp
f
88.5947 133.996 mo
88.6162 133.973 li
88.5947 133.951 li
88.5713 133.973 li
88.5947 133.996 li
cp
f
91.8115 98.2529 mo
91.833 98.2305 li
91.8115 98.207 li
91.7881 98.2305 li
91.8115 98.2529 li
cp
f
229.149 121.952 mo
229.171 121.93 li
229.149 121.907 li
229.128 121.93 li
229.149 121.952 li
cp
f
228.903 128 mo
228.925 127.977 li
228.903 127.955 li
228.88 127.977 li
228.903 128 li
cp
f
228.163 134.007 mo
228.187 133.984 li
228.163 133.962 li
228.142 133.984 li
228.163 134.007 li
cp
f
226.937 139.934 mo
226.96 139.911 li
226.937 139.889 li
226.915 139.911 li
226.937 139.934 li
cp
f
225.231 145.741 mo
225.255 145.718 li
225.231 145.695 li
225.21 145.718 li
225.231 145.741 li
cp
f
223.06 151.39 mo
223.083 151.367 li
223.06 151.345 li
223.036 151.367 li
223.06 151.39 li
cp
f
220.435 156.843 mo
220.456 156.82 li
220.435 156.799 li
220.411 156.82 li
220.435 156.843 li
cp
f
217.372 162.063 mo
217.394 162.041 li
217.372 162.02 li
217.351 162.041 li
217.372 162.063 li
cp
f
213.896 167.018 mo
213.917 166.995 li
213.896 166.973 li
213.872 166.995 li
213.896 167.018 li
cp
f
210.024 171.783 mo
210.161 171.648 li
210.024 171.515 li
209.89 171.648 li
210.024 171.783 li
cp
f
205.79 175.994 mo
205.812 175.972 li
205.79 175.95 li
205.767 175.972 li
205.79 175.994 li
cp
f
201.216 180.025 mo
201.306 179.936 li
201.216 179.846 li
201.126 179.936 li
201.216 180.025 li
cp
f
196.333 183.647 mo
196.468 183.514 li
196.333 183.379 li
196.198 183.514 li
196.333 183.647 li
cp
f
191.175 186.815 mo
191.312 186.681 li
191.175 186.547 li
191.04 186.681 li
191.175 186.815 li
cp
f
185.778 189.508 mo
185.868 189.418 li
185.778 189.328 li
185.688 189.418 li
185.778 189.508 li
cp
f
180.175 191.929 mo
180.298 191.929 180.399 191.829 180.399 191.705 cv
180.399 191.581 180.298 191.48 180.175 191.48 cv
180.05 191.48 179.95 191.581 179.95 191.705 cv
179.95 191.829 180.05 191.929 180.175 191.929 cv
cp
f
174.403 193.752 mo
174.528 193.752 174.628 193.652 174.628 193.529 cv
174.628 193.404 174.528 193.304 174.403 193.304 cv
174.28 193.304 174.179 193.404 174.179 193.529 cv
174.179 193.652 174.28 193.752 174.403 193.752 cv
cp
f
168.503 195.145 mo
168.651 195.145 168.772 195.023 168.772 194.875 cv
168.772 194.727 168.651 194.605 168.503 194.605 cv
168.353 194.605 168.233 194.727 168.233 194.875 cv
168.233 195.023 168.353 195.145 168.503 195.145 cv
cp
f
162.513 195.938 mo
162.624 195.938 162.714 195.848 162.714 195.736 cv
162.714 195.625 162.624 195.535 162.513 195.535 cv
162.399 195.535 162.31 195.625 162.31 195.736 cv
162.31 195.848 162.399 195.938 162.513 195.938 cv
cp
f
156.472 196.332 mo
156.595 196.332 156.694 196.23 156.694 196.107 cv
156.694 195.982 156.595 195.883 156.472 195.883 cv
156.347 195.883 156.247 195.982 156.247 196.107 cv
156.247 196.23 156.347 196.332 156.472 196.332 cv
cp
f
150.419 196.186 mo
150.53 196.186 150.62 196.095 150.62 195.983 cv
150.62 195.871 150.53 195.781 150.419 195.781 cv
150.308 195.781 150.218 195.871 150.218 195.983 cv
150.218 196.095 150.308 196.186 150.419 196.186 cv
cp
f
144.399 195.592 mo
144.522 195.592 144.622 195.49 144.622 195.367 cv
144.622 195.244 144.522 195.143 144.399 195.143 cv
144.274 195.143 144.175 195.244 144.175 195.367 cv
144.175 195.49 144.274 195.592 144.399 195.592 cv
cp
f
138.448 194.6 mo
138.634 194.6 138.784 194.448 138.784 194.262 cv
138.784 194.076 138.634 193.925 138.448 193.925 cv
138.261 193.925 138.11 194.076 138.11 194.262 cv
138.11 194.448 138.261 194.6 138.448 194.6 cv
cp
f
132.606 193.08 mo
132.829 193.08 133.011 192.898 133.011 192.676 cv
133.011 192.453 132.829 192.271 132.606 192.271 cv
132.384 192.271 132.204 192.453 132.204 192.676 cv
132.204 192.898 132.384 193.08 132.606 193.08 cv
cp
f
126.915 191.022 mo
127.138 191.022 127.319 190.842 127.319 190.618 cv
127.319 190.396 127.138 190.215 126.915 190.215 cv
126.692 190.215 126.511 190.396 126.511 190.618 cv
126.511 190.842 126.692 191.022 126.915 191.022 cv
cp
f
121.409 188.328 mo
121.532 188.328 121.634 188.229 121.634 188.104 cv
121.634 187.98 121.532 187.88 121.409 187.88 cv
121.284 187.88 121.185 187.98 121.185 188.104 cv
121.185 188.229 121.284 188.328 121.409 188.328 cv
cp
f
116.128 185.441 mo
116.288 185.441 116.419 185.311 116.419 185.149 cv
116.419 184.988 116.288 184.857 116.128 184.857 cv
115.966 184.857 115.835 184.988 115.835 185.149 cv
115.835 185.311 115.966 185.441 116.128 185.441 cv
cp
f
111.103 182.044 mo
111.253 182.044 111.372 181.923 111.372 181.773 cv
111.372 181.625 111.253 181.505 111.103 181.505 cv
110.954 181.505 110.833 181.625 110.833 181.773 cv
110.833 181.923 110.954 182.044 111.103 182.044 cv
cp
f
106.372 178.27 mo
106.521 178.27 106.64 178.149 106.64 178 cv
106.64 177.852 106.521 177.731 106.372 177.731 cv
106.222 177.731 106.103 177.852 106.103 178 cv
106.103 178.149 106.222 178.27 106.372 178.27 cv
cp
f
101.962 174.146 mo
102.124 174.146 102.255 174.016 102.255 173.854 cv
102.255 173.693 102.124 173.563 101.962 173.563 cv
101.802 173.563 101.671 173.693 101.671 173.854 cv
101.671 174.016 101.802 174.146 101.962 174.146 cv
cp
f
97.9072 169.563 mo
98.0186 169.563 98.1084 169.473 98.1084 169.361 cv
98.1084 169.25 98.0186 169.16 97.9072 169.16 cv
97.7959 169.16 97.7041 169.25 97.7041 169.361 cv
97.7041 169.473 97.7959 169.563 97.9072 169.563 cv
cp
f
94.2295 164.756 mo
94.3408 164.756 94.4326 164.665 94.4326 164.554 cv
94.4326 164.441 94.3408 164.352 94.2295 164.352 cv
94.1201 164.352 94.0283 164.441 94.0283 164.554 cv
94.0283 164.665 94.1201 164.756 94.2295 164.756 cv
cp
f
90.958 159.731 mo
91.1064 159.731 91.2275 159.61 91.2275 159.463 cv
91.2275 159.313 91.1064 159.193 90.958 159.193 cv
90.8096 159.193 90.6885 159.313 90.6885 159.463 cv
90.6885 159.61 90.8096 159.731 90.958 159.731 cv
cp
f
88.1123 154.345 mo
88.2354 154.345 88.3369 154.244 88.3369 154.121 cv
88.3369 153.996 88.2354 153.896 88.1123 153.896 cv
87.9893 153.896 87.8877 153.996 87.8877 154.121 cv
87.8877 154.244 87.9893 154.345 88.1123 154.345 cv
cp
f
85.71 148.767 mo
85.8213 148.767 85.9131 148.676 85.9131 148.564 cv
85.9131 148.454 85.8213 148.363 85.71 148.363 cv
85.5986 148.363 85.5088 148.454 85.5088 148.564 cv
85.5088 148.676 85.5986 148.767 85.71 148.767 cv
cp
f
83.7705 142.988 mo
83.9268 142.832 li
83.7705 142.676 li
83.6123 142.832 li
83.7705 142.988 li
cp
f
82.3037 137.117 mo
82.4619 136.96 li
82.3037 136.803 li
82.1455 136.96 li
82.3037 137.117 li
cp
f
81.3193 131.123 mo
81.4541 130.988 li
81.3193 130.854 li
81.1846 130.988 li
81.3193 131.123 li
cp
f
80.8271 125.046 mo
80.917 124.955 li
80.8271 124.866 li
80.7354 124.955 li
80.8271 125.046 li
cp
f
80.8271 118.971 mo
80.8936 118.904 li
80.8271 118.836 li
80.7588 118.904 li
80.8271 118.971 li
cp
f
81.3193 112.894 mo
81.3408 112.871 li
81.3193 112.85 li
81.2979 112.871 li
81.3193 112.894 li
cp
f
82.3037 106.922 mo
82.3252 106.899 li
82.3037 106.877 li
82.2803 106.899 li
82.3037 106.922 li
cp
f
83.7705 101.051 mo
83.792 101.027 li
83.7705 101.005 li
83.7471 101.027 li
83.7705 101.051 li
cp
f
85.71 95.3164 mo
85.7334 95.2949 li
85.71 95.2715 li
85.6885 95.2949 li
85.71 95.3164 li
cp
f
97.9072 74.5205 mo
97.9287 74.498 li
97.9072 74.4756 li
97.8857 74.498 li
97.9072 74.5205 li
cp
f
228.163 109.897 mo
228.187 109.875 li
228.163 109.853 li
228.142 109.875 li
228.163 109.897 li
cp
f
228.903 115.904 mo
228.925 115.882 li
228.903 115.859 li
228.88 115.882 li
228.903 115.904 li
cp
f
235.669 128.001 mo
235.69 127.979 li
235.669 127.956 li
235.646 127.979 li
235.669 128.001 li
cp
f
234.991 134.016 mo
235.013 133.992 li
234.991 133.971 li
234.968 133.992 li
234.991 134.016 li
cp
f
233.864 139.963 mo
233.888 139.939 li
233.864 139.917 li
233.843 139.939 li
233.864 139.963 li
cp
f
232.3 145.809 mo
232.321 145.786 li
232.3 145.764 li
232.276 145.786 li
232.3 145.809 li
cp
f
230.3 151.521 mo
230.321 151.498 li
230.3 151.477 li
230.276 151.498 li
230.3 151.521 li
cp
f
227.88 157.068 mo
227.901 157.047 li
227.88 157.024 li
227.856 157.047 li
227.88 157.068 li
cp
f
225.052 162.421 mo
225.073 162.398 li
225.052 162.376 li
225.028 162.398 li
225.052 162.421 li
cp
f
221.831 167.59 mo
221.897 167.523 li
221.831 167.457 li
221.763 167.523 li
221.831 167.59 li
cp
f
218.235 172.482 mo
218.325 172.393 li
218.235 172.303 li
218.147 172.393 li
218.235 172.482 li
cp
f
214.288 177.139 mo
214.446 176.98 li
214.288 176.824 li
214.132 176.98 li
214.288 177.139 li
cp
f
210.009 181.418 mo
210.165 181.261 li
210.009 181.104 li
209.851 181.261 li
210.009 181.418 li
cp
f
205.421 185.344 mo
205.556 185.209 li
205.421 185.074 li
205.286 185.209 li
205.421 185.344 li
cp
f
200.55 188.938 mo
200.685 188.803 li
200.55 188.669 li
200.417 188.803 li
200.55 188.938 li
cp
f
195.425 192.494 mo
195.687 192.494 195.897 192.283 195.897 192.023 cv
195.897 191.764 195.687 191.553 195.425 191.553 cv
195.165 191.553 194.954 191.764 194.954 192.023 cv
194.954 192.283 195.165 192.494 195.425 192.494 cv
cp
f
190.075 195.188 mo
190.261 195.188 190.411 195.037 190.411 194.852 cv
190.411 194.666 190.261 194.516 190.075 194.516 cv
189.888 194.516 189.739 194.666 189.739 194.852 cv
189.739 195.037 189.888 195.188 190.075 195.188 cv
cp
f
184.526 197.475 mo
184.638 197.475 184.729 197.383 184.729 197.271 cv
184.729 197.16 184.638 197.07 184.526 197.07 cv
184.415 197.07 184.325 197.16 184.325 197.271 cv
184.325 197.383 184.415 197.475 184.526 197.475 cv
cp
f
178.813 199.563 mo
178.976 199.563 179.106 199.433 179.106 199.271 cv
179.106 199.109 178.976 198.979 178.813 198.979 cv
178.653 198.979 178.522 199.109 178.522 199.271 cv
178.522 199.433 178.653 199.563 178.813 199.563 cv
cp
f
172.968 201.197 mo
173.167 201.197 173.325 201.036 173.325 200.838 cv
173.325 200.639 173.167 200.479 172.968 200.479 cv
172.769 200.479 172.608 200.639 172.608 200.838 cv
172.608 201.036 172.769 201.197 172.968 201.197 cv
cp
f
167.021 202.322 mo
167.218 202.322 167.38 202.162 167.38 201.963 cv
167.38 201.764 167.218 201.604 167.021 201.604 cv
166.823 201.604 166.661 201.764 166.661 201.963 cv
166.661 202.162 166.823 202.322 167.021 202.322 cv
cp
f
161.005 202.91 mo
161.155 202.91 161.274 202.789 161.274 202.641 cv
161.274 202.492 161.155 202.371 161.005 202.371 cv
160.856 202.371 160.737 202.492 160.737 202.641 cv
160.737 202.789 160.856 202.91 161.005 202.91 cv
cp
f
154.958 203.137 mo
155.104 203.137 155.228 203.016 155.228 202.867 cv
155.228 202.719 155.104 202.598 154.958 202.598 cv
154.808 202.598 154.688 202.719 154.688 202.867 cv
154.688 203.016 154.808 203.137 154.958 203.137 cv
cp
f
148.909 203.044 mo
149.132 203.044 149.313 202.863 149.313 202.641 cv
149.313 202.418 149.132 202.236 148.909 202.236 cv
148.685 202.236 148.505 202.418 148.505 202.641 cv
148.505 202.863 148.685 203.044 148.909 203.044 cv
cp
f
142.894 202.301 mo
143.081 202.301 143.231 202.148 143.231 201.963 cv
143.231 201.777 143.081 201.625 142.894 201.625 cv
142.708 201.625 142.558 201.777 142.558 201.963 cv
142.558 202.148 142.708 202.301 142.894 202.301 cv
cp
f
136.946 201.264 mo
137.183 201.264 137.372 201.073 137.372 200.838 cv
137.372 200.602 137.183 200.411 136.946 200.411 cv
136.712 200.411 136.521 200.602 136.521 200.838 cv
136.521 201.073 136.712 201.264 136.946 201.264 cv
cp
f
131.101 199.854 mo
131.423 199.854 131.685 199.594 131.685 199.271 cv
131.685 198.949 131.423 198.688 131.101 198.688 cv
130.778 198.688 130.517 198.949 130.517 199.271 cv
130.517 199.594 130.778 199.854 131.101 199.854 cv
cp
f
125.388 197.833 mo
125.696 197.833 125.948 197.582 125.948 197.271 cv
125.948 196.963 125.696 196.711 125.388 196.711 cv
125.077 196.711 124.825 196.963 124.825 197.271 cv
124.825 197.582 125.077 197.833 125.388 197.833 cv
cp
f
119.841 195.256 mo
120.063 195.256 120.243 195.074 120.243 194.852 cv
120.243 194.629 120.063 194.447 119.841 194.447 cv
119.616 194.447 119.437 194.629 119.437 194.852 cv
119.437 195.074 119.616 195.256 119.841 195.256 cv
cp
f
114.489 192.607 mo
114.812 192.607 115.073 192.346 115.073 192.023 cv
115.073 191.701 114.812 191.439 114.489 191.439 cv
114.167 191.439 113.905 191.701 113.905 192.023 cv
113.905 192.346 114.167 192.607 114.489 192.607 cv
cp
f
109.364 189.207 mo
109.587 189.207 109.769 189.027 109.769 188.803 cv
109.769 188.58 109.587 188.398 109.364 188.398 cv
109.14 188.398 108.96 188.58 108.96 188.803 cv
108.96 189.027 109.14 189.207 109.364 189.207 cv
cp
f
104.493 185.702 mo
104.767 185.702 104.987 185.482 104.987 185.209 cv
104.987 184.936 104.767 184.715 104.493 184.715 cv
104.22 184.715 104.001 184.936 104.001 185.209 cv
104.001 185.482 104.22 185.702 104.493 185.702 cv
cp
f
99.9053 181.688 mo
100.142 181.688 100.333 181.496 100.333 181.261 cv
100.333 181.025 100.142 180.834 99.9053 180.834 cv
99.6709 180.834 99.4795 181.025 99.4795 181.261 cv
99.4795 181.496 99.6709 181.688 99.9053 181.688 cv
cp
f
95.626 177.34 mo
95.8252 177.34 95.9854 177.18 95.9854 176.98 cv
95.9854 176.783 95.8252 176.622 95.626 176.622 cv
95.4287 176.622 95.2666 176.783 95.2666 176.98 cv
95.2666 177.18 95.4287 177.34 95.626 177.34 cv
cp
f
91.6787 172.618 mo
91.8018 172.618 91.9014 172.518 91.9014 172.393 cv
91.9014 172.27 91.8018 172.169 91.6787 172.169 cv
91.5537 172.169 91.4541 172.27 91.4541 172.393 cv
91.4541 172.518 91.5537 172.618 91.6787 172.618 cv
cp
f
88.083 167.792 mo
88.2334 167.792 88.3525 167.672 88.3525 167.523 cv
88.3525 167.375 88.2334 167.254 88.083 167.254 cv
87.9346 167.254 87.8135 167.375 87.8135 167.523 cv
87.8135 167.672 87.9346 167.792 88.083 167.792 cv
cp
f
84.8623 162.623 mo
84.9873 162.623 85.0869 162.522 85.0869 162.398 cv
85.0869 162.274 84.9873 162.174 84.8623 162.174 cv
84.7393 162.174 84.6396 162.274 84.6396 162.398 cv
84.6396 162.522 84.7393 162.623 84.8623 162.623 cv
cp
f
82.0342 157.271 mo
82.1592 157.271 82.2607 157.172 82.2607 157.047 cv
82.2607 156.924 82.1592 156.822 82.0342 156.822 cv
81.9111 156.822 81.8096 156.924 81.8096 157.047 cv
81.8096 157.172 81.9111 157.271 82.0342 157.271 cv
cp
f
79.6143 151.701 mo
79.7256 151.701 79.8174 151.611 79.8174 151.5 cv
79.8174 151.389 79.7256 151.297 79.6143 151.297 cv
79.5029 151.297 79.4131 151.389 79.4131 151.5 cv
79.4131 151.611 79.5029 151.701 79.6143 151.701 cv
cp
f
77.6162 146.011 mo
77.7393 146.011 77.8389 145.91 77.8389 145.786 cv
77.8389 145.662 77.7393 145.563 77.6162 145.563 cv
77.4912 145.563 77.3916 145.662 77.3916 145.786 cv
77.3916 145.91 77.4912 146.011 77.6162 146.011 cv
cp
f
76.0498 140.164 mo
76.1729 140.164 76.2744 140.064 76.2744 139.94 cv
76.2744 139.816 76.1729 139.715 76.0498 139.715 cv
75.9248 139.715 75.8252 139.816 75.8252 139.94 cv
75.8252 140.064 75.9248 140.164 76.0498 140.164 cv
cp
f
74.9229 134.195 mo
75.0342 134.195 75.126 134.104 75.126 133.992 cv
75.126 133.881 75.0342 133.791 74.9229 133.791 cv
74.8115 133.791 74.7217 133.881 74.7217 133.992 cv
74.7217 134.104 74.8115 134.195 74.9229 134.195 cv
cp
f
74.2451 128.18 mo
74.3584 128.18 74.4482 128.09 74.4482 127.979 cv
74.4482 127.867 74.3584 127.775 74.2451 127.775 cv
74.1338 127.775 74.0439 127.867 74.0439 127.979 cv
74.0439 128.09 74.1338 128.18 74.2451 128.18 cv
cp
f
74.0186 122.064 mo
74.1553 121.93 li
74.0186 121.795 li
73.8857 121.93 li
74.0186 122.064 li
cp
f
74.2451 115.972 mo
74.335 115.881 li
74.2451 115.791 li
74.1572 115.881 li
74.2451 115.972 li
cp
f
74.9229 109.957 mo
75.0146 109.867 li
74.9229 109.777 li
74.833 109.867 li
74.9229 109.957 li
cp
f
76.0498 103.986 mo
76.1162 103.92 li
76.0498 103.852 li
75.9814 103.92 li
76.0498 103.986 li
cp
f
77.6143 98.0957 mo
77.6377 98.0732 li
77.6143 98.0508 li
77.5928 98.0732 li
77.6143 98.0957 li
cp
f
79.6143 92.3828 mo
79.6377 92.3604 li
79.6143 92.3379 li
79.5928 92.3604 li
79.6143 92.3828 li
cp
f
82.0342 86.835 mo
82.0576 86.8125 li
82.0342 86.79 li
82.0127 86.8125 li
82.0342 86.835 li
cp
f
84.8623 81.4844 mo
84.8857 81.4609 li
84.8623 81.4385 li
84.8408 81.4609 li
84.8623 81.4844 li
cp
f
88.083 76.3584 mo
88.1064 76.3359 li
88.083 76.3145 li
88.0615 76.3359 li
88.083 76.3584 li
cp
f
91.6787 71.4883 mo
91.7002 71.4668 li
91.6787 71.4434 li
91.6553 71.4668 li
91.6787 71.4883 li
cp
f
95.626 66.9004 mo
95.6475 66.8789 li
95.626 66.8555 li
95.6025 66.8789 li
95.626 66.9004 li
cp
f
99.9053 62.6211 mo
99.9287 62.5986 li
99.9053 62.5762 li
99.8838 62.5986 li
99.9053 62.6211 li
cp
f
104.493 58.6729 mo
104.517 58.6504 li
104.493 58.6279 li
104.472 58.6504 li
104.493 58.6729 li
cp
f
109.362 55.0781 mo
109.386 55.0566 li
109.362 55.0332 li
109.341 55.0566 li
109.362 55.0781 li
cp
f
114.489 51.8594 mo
114.511 51.8359 li
114.489 51.8145 li
114.466 51.8359 li
114.489 51.8594 li
cp
f
125.388 46.6094 mo
125.409 46.5869 li
125.388 46.5654 li
125.366 46.5869 li
125.388 46.6094 li
cp
f
234.991 109.89 mo
235.013 109.867 li
234.991 109.845 li
234.968 109.867 li
234.991 109.89 li
cp
f
235.669 115.904 mo
235.69 115.881 li
235.669 115.859 li
235.646 115.881 li
235.669 115.904 li
cp
f
242.64 121.952 mo
242.661 121.93 li
242.64 121.907 li
242.616 121.93 li
242.64 121.952 li
cp
f
242.431 128.002 mo
242.452 127.979 li
242.431 127.957 li
242.407 127.979 li
242.431 128.002 li
cp
f
241.806 134.021 mo
241.827 133.999 li
241.806 133.978 li
241.782 133.999 li
241.806 134.021 li
cp
f
240.765 140.029 mo
240.833 139.963 li
240.765 139.896 li
240.696 139.963 li
240.765 140.029 li
cp
f
239.315 145.906 mo
239.384 145.84 li
239.315 145.771 li
239.249 145.84 li
239.315 145.906 li
cp
f
237.466 151.67 mo
237.532 151.602 li
237.466 151.535 li
237.397 151.602 li
237.466 151.67 li
cp
f
235.222 157.291 mo
235.29 157.225 li
235.222 157.156 li
235.155 157.225 li
235.222 157.291 li
cp
f
232.595 162.699 mo
232.618 162.678 li
232.595 162.655 li
232.573 162.678 li
232.595 162.699 li
cp
f
229.599 168.004 mo
229.667 167.938 li
229.599 167.869 li
229.532 167.938 li
229.599 168.004 li
cp
f
226.247 173.111 mo
226.382 172.978 li
226.247 172.842 li
226.112 172.978 li
226.247 173.111 li
cp
f
222.556 177.908 mo
222.69 177.773 li
222.556 177.639 li
222.421 177.773 li
222.556 177.908 li
cp
f
218.542 182.461 mo
218.698 182.305 li
218.542 182.146 li
218.384 182.305 li
218.542 182.461 li
cp
f
214.226 186.682 mo
214.36 186.547 li
214.226 186.413 li
214.091 186.547 li
214.226 186.682 li
cp
f
209.626 190.773 mo
209.786 190.773 209.917 190.645 209.917 190.482 cv
209.917 190.321 209.786 190.19 209.626 190.19 cv
209.466 190.19 209.335 190.321 209.335 190.482 cv
209.335 190.645 209.466 190.773 209.626 190.773 cv
cp
f
204.767 194.517 mo
205.001 194.517 205.192 194.326 205.192 194.091 cv
205.192 193.854 205.001 193.664 204.767 193.664 cv
204.53 193.664 204.339 193.854 204.339 194.091 cv
204.339 194.326 204.53 194.517 204.767 194.517 cv
cp
f
199.669 198.096 mo
200.077 198.096 200.409 197.764 200.409 197.355 cv
200.409 196.946 200.077 196.615 199.669 196.615 cv
199.261 196.615 198.929 196.946 198.929 197.355 cv
198.929 197.764 199.261 198.096 199.669 198.096 cv
cp
f
194.358 201 mo
194.769 201 195.101 200.669 195.101 200.26 cv
195.101 199.852 194.769 199.52 194.358 199.52 cv
193.95 199.52 193.618 199.852 193.618 200.26 cv
193.618 200.669 193.95 201 194.358 201 cv
cp
f
188.86 203.285 mo
189.134 203.285 189.354 203.064 189.354 202.792 cv
189.354 202.52 189.134 202.297 188.86 202.297 cv
188.589 202.297 188.366 202.52 188.366 202.792 cv
188.366 203.064 188.589 203.285 188.86 203.285 cv
cp
f
183.2 205.455 mo
183.485 205.455 183.718 205.224 183.718 204.938 cv
183.718 204.652 183.485 204.422 183.2 204.422 cv
182.917 204.422 182.685 204.652 182.685 204.938 cv
182.685 205.224 182.917 205.455 183.2 205.455 cv
cp
f
177.407 207.115 mo
177.642 207.115 177.833 206.925 177.833 206.688 cv
177.833 206.453 177.642 206.263 177.407 206.263 cv
177.171 206.263 176.979 206.453 176.979 206.688 cv
176.979 206.925 177.171 207.115 177.407 207.115 cv
cp
f
171.507 208.328 mo
171.667 208.328 171.798 208.197 171.798 208.036 cv
171.798 207.875 171.667 207.744 171.507 207.744 cv
171.345 207.744 171.214 207.875 171.214 208.036 cv
171.214 208.197 171.345 208.328 171.507 208.328 cv
cp
f
165.526 209.443 mo
165.786 209.443 165.997 209.232 165.997 208.973 cv
165.997 208.712 165.786 208.502 165.526 208.502 cv
165.265 208.502 165.054 208.712 165.054 208.973 cv
165.054 209.232 165.265 209.443 165.526 209.443 cv
cp
f
159.495 209.854 mo
159.694 209.854 159.854 209.692 159.854 209.494 cv
159.854 209.296 159.694 209.135 159.495 209.135 cv
159.298 209.135 159.136 209.296 159.136 209.494 cv
159.136 209.692 159.298 209.854 159.495 209.854 cv
cp
f
153.444 209.958 mo
153.642 209.958 153.804 209.797 153.804 209.599 cv
153.804 209.4 153.642 209.239 153.444 209.239 cv
153.245 209.239 153.085 209.4 153.085 209.599 cv
153.085 209.797 153.245 209.958 153.444 209.958 cv
cp
f
147.399 209.757 mo
147.659 209.757 147.87 209.545 147.87 209.285 cv
147.87 209.025 147.659 208.814 147.399 208.814 cv
147.138 208.814 146.927 209.025 146.927 209.285 cv
146.927 209.545 147.138 209.757 147.399 209.757 cv
cp
f
141.39 209.139 mo
141.712 209.139 141.974 208.878 141.974 208.556 cv
141.974 208.233 141.712 207.973 141.39 207.973 cv
141.067 207.973 140.808 208.233 140.808 208.556 cv
140.808 208.878 141.067 209.139 141.39 209.139 cv
cp
f
135.446 207.907 mo
135.718 207.907 135.94 207.686 135.94 207.414 cv
135.94 207.141 135.718 206.92 135.446 206.92 cv
135.173 206.92 134.952 207.141 134.952 207.414 cv
134.952 207.686 135.173 207.907 135.446 207.907 cv
cp
f
129.595 206.649 mo
130.028 206.649 130.38 206.297 130.38 205.863 cv
130.38 205.43 130.028 205.078 129.595 205.078 cv
129.161 205.078 128.81 205.43 128.81 205.863 cv
128.81 206.297 129.161 206.649 129.595 206.649 cv
cp
f
123.864 204.879 mo
124.397 204.879 124.829 204.447 124.829 203.914 cv
124.829 203.381 124.397 202.949 123.864 202.949 cv
123.331 202.949 122.899 203.381 122.899 203.914 cv
122.899 204.447 123.331 204.879 123.864 204.879 cv
cp
f
118.282 202.359 mo
118.716 202.359 119.069 202.007 119.069 201.573 cv
119.069 201.14 118.716 200.787 118.282 200.787 cv
117.849 200.787 117.497 201.14 117.497 201.573 cv
117.497 202.007 117.849 202.359 118.282 202.359 cv
cp
f
112.876 199.639 mo
113.31 199.639 113.661 199.287 113.661 198.854 cv
113.661 198.419 113.31 198.068 112.876 198.068 cv
112.44 198.068 112.089 198.419 112.089 198.854 cv
112.089 199.287 112.44 199.639 112.876 199.639 cv
cp
f
107.669 196.643 mo
108.151 196.643 108.544 196.25 108.544 195.768 cv
108.544 195.283 108.151 194.892 107.669 194.892 cv
107.185 194.892 106.792 195.283 106.792 195.768 cv
106.792 196.25 107.185 196.643 107.669 196.643 cv
cp
f
102.687 193.406 mo
103.282 193.406 103.765 192.924 103.765 192.328 cv
103.765 191.733 103.282 191.251 102.687 191.251 cv
102.093 191.251 101.608 191.733 101.608 192.328 cv
101.608 192.924 102.093 193.406 102.687 193.406 cv
cp
f
97.9541 189.137 mo
98.2764 189.137 98.5381 188.877 98.5381 188.555 cv
98.5381 188.232 98.2764 187.971 97.9541 187.971 cv
97.6318 187.971 97.3701 188.232 97.3701 188.555 cv
97.3701 188.877 97.6318 189.137 97.9541 189.137 cv
cp
f
93.4951 185.047 mo
93.8174 185.047 94.0771 184.785 94.0771 184.463 cv
94.0771 184.141 93.8174 183.879 93.4951 183.879 cv
93.1729 183.879 92.9111 184.141 92.9111 184.463 cv
92.9111 184.785 93.1729 185.047 93.4951 185.047 cv
cp
f
89.3252 180.545 mo
89.5869 180.545 89.7979 180.334 89.7979 180.072 cv
89.7979 179.813 89.5869 179.603 89.3252 179.603 cv
89.0654 179.603 88.8545 179.813 88.8545 180.072 cv
88.8545 180.334 89.0654 180.545 89.3252 180.545 cv
cp
f
85.4717 175.834 mo
85.7061 175.834 85.8975 175.643 85.8975 175.406 cv
85.8975 175.172 85.7061 174.98 85.4717 174.98 cv
85.2354 174.98 85.0439 175.172 85.0439 175.406 cv
85.0439 175.643 85.2354 175.834 85.4717 175.834 cv
cp
f
81.9463 170.912 mo
82.1826 170.912 82.374 170.721 82.374 170.485 cv
82.374 170.25 82.1826 170.059 81.9463 170.059 cv
81.7119 170.059 81.5205 170.25 81.5205 170.485 cv
81.5205 170.721 81.7119 170.912 81.9463 170.912 cv
cp
f
78.7705 165.826 mo
79.0439 165.826 79.2646 165.605 79.2646 165.334 cv
79.2646 165.061 79.0439 164.839 78.7705 164.839 cv
78.499 164.839 78.2764 165.061 78.2764 165.334 cv
78.2764 165.605 78.499 165.826 78.7705 165.826 cv
cp
f
75.958 160.311 mo
76.1436 160.311 76.2959 160.16 76.2959 159.973 cv
76.2959 159.787 76.1436 159.637 75.958 159.637 cv
75.7725 159.637 75.6221 159.787 75.6221 159.973 cv
75.6221 160.16 75.7725 160.311 75.958 160.311 cv
cp
f
73.5225 154.657 mo
73.6455 154.657 73.7471 154.557 73.7471 154.433 cv
73.7471 154.309 73.6455 154.209 73.5225 154.209 cv
73.3975 154.209 73.2979 154.309 73.2979 154.433 cv
73.2979 154.557 73.3975 154.657 73.5225 154.657 cv
cp
f
71.4736 149.006 mo
71.6221 149.006 71.7432 148.885 71.7432 148.737 cv
71.7432 148.588 71.6221 148.467 71.4736 148.467 cv
71.3252 148.467 71.2041 148.588 71.2041 148.737 cv
71.2041 148.885 71.3252 149.006 71.4736 149.006 cv
cp
f
69.8232 143.184 mo
69.9717 143.184 70.0928 143.063 70.0928 142.913 cv
70.0928 142.764 69.9717 142.645 69.8232 142.645 cv
69.6748 142.645 69.5537 142.764 69.5537 142.913 cv
69.5537 143.063 69.6748 143.184 69.8232 143.184 cv
cp
f
68.5791 137.259 mo
68.7275 137.259 68.8467 137.139 68.8467 136.99 cv
68.8467 136.842 68.7275 136.721 68.5791 136.721 cv
68.4287 136.721 68.3096 136.842 68.3096 136.99 cv
68.3096 137.139 68.4287 137.259 68.5791 137.259 cv
cp
f
67.7451 131.219 mo
67.8682 131.219 67.9697 131.118 67.9697 130.994 cv
67.9697 130.871 67.8682 130.771 67.7451 130.771 cv
67.6201 130.771 67.5205 130.871 67.5205 130.994 cv
67.5205 131.118 67.6201 131.219 67.7451 131.219 cv
cp
f
67.3271 125.09 mo
67.4619 124.955 li
67.3271 124.822 li
67.1924 124.955 li
67.3271 125.09 li
cp
f
67.3271 119.105 mo
67.4404 119.105 67.5283 119.014 67.5283 118.902 cv
67.5283 118.792 67.4404 118.701 67.3271 118.701 cv
67.2158 118.701 67.126 118.792 67.126 118.902 cv
67.126 119.014 67.2158 119.105 67.3271 119.105 cv
cp
f
67.7451 113.066 mo
67.8564 113.066 67.9463 112.977 67.9463 112.865 cv
67.9463 112.752 67.8564 112.662 67.7451 112.662 cv
67.6338 112.662 67.542 112.752 67.542 112.865 cv
67.542 112.977 67.6338 113.066 67.7451 113.066 cv
cp
f
68.5791 106.959 mo
68.6689 106.87 li
68.5791 106.779 li
68.4893 106.87 li
68.5791 106.959 li
cp
f
69.8232 101.08 mo
69.958 100.946 li
69.8232 100.811 li
69.6885 100.946 li
69.8232 101.08 li
cp
f
71.4736 95.2129 mo
71.5635 95.123 li
71.4736 95.0332 li
71.3838 95.123 li
71.4736 95.2129 li
cp
f
73.5225 89.4492 mo
73.5439 89.4258 li
73.5225 89.4043 li
73.499 89.4258 li
73.5225 89.4492 li
cp
f
75.958 83.9082 mo
75.9814 83.8848 li
75.958 83.8633 li
75.9365 83.8848 li
75.958 83.9082 li
cp
f
78.7725 78.5938 mo
78.8389 78.5254 li
78.7725 78.459 li
78.7041 78.5254 li
78.7725 78.5938 li
cp
f
81.9463 73.4414 mo
82.0146 73.373 li
81.9463 73.3066 li
81.8799 73.373 li
81.9463 73.4414 li
cp
f
85.4717 68.542 mo
85.5596 68.4512 li
85.4717 68.3623 li
85.3818 68.4512 li
85.4717 68.542 li
cp
f
89.3252 63.8535 mo
89.3936 63.7852 li
89.3252 63.7188 li
89.2588 63.7852 li
89.3252 63.8535 li
cp
f
93.4951 59.4629 mo
93.5615 59.3965 li
93.4951 59.3291 li
93.4268 59.3965 li
93.4951 59.4629 li
cp
f
97.9541 55.373 mo
98.0225 55.3047 li
97.9541 55.2383 li
97.8877 55.3047 li
97.9541 55.373 li
cp
f
102.687 51.5537 mo
102.71 51.5313 li
102.687 51.5088 li
102.665 51.5313 li
102.687 51.5537 li
cp
f
107.669 48.1152 mo
107.69 48.0928 li
107.669 48.0703 li
107.646 48.0928 li
107.669 48.1152 li
cp
f
112.876 45.0293 mo
112.897 45.0059 li
112.876 44.9834 li
112.853 45.0059 li
112.876 45.0293 li
cp
f
118.282 42.3086 mo
118.306 42.2861 li
118.282 42.2627 li
118.261 42.2861 li
118.282 42.3086 li
cp
f
239.315 98.043 mo
239.339 98.0205 li
239.315 97.998 li
239.294 98.0205 li
239.315 98.043 li
cp
f
240.765 103.92 mo
240.786 103.897 li
240.765 103.875 li
240.743 103.897 li
240.765 103.92 li
cp
f
241.806 109.883 mo
241.827 109.86 li
241.806 109.838 li
241.782 109.86 li
241.806 109.883 li
cp
f
242.431 115.903 mo
242.452 115.881 li
242.431 115.858 li
242.407 115.881 li
242.431 115.903 li
cp
f
249.384 121.997 mo
249.452 121.93 li
249.384 121.862 li
249.317 121.93 li
249.384 121.997 li
cp
f
249.19 128.047 mo
249.257 127.979 li
249.19 127.912 li
249.122 127.979 li
249.19 128.047 li
cp
f
248.608 134.072 mo
248.675 134.005 li
248.608 133.938 li
248.542 134.005 li
248.608 134.072 li
cp
f
247.642 140.07 mo
247.733 139.98 li
247.642 139.891 li
247.554 139.98 li
247.642 140.07 li
cp
f
246.296 145.972 mo
246.386 145.882 li
246.296 145.791 li
246.206 145.882 li
246.296 145.972 li
cp
f
244.573 151.887 mo
244.685 151.887 244.774 151.796 244.774 151.685 cv
244.774 151.572 244.685 151.482 244.573 151.482 cv
244.462 151.482 244.372 151.572 244.372 151.685 cv
244.372 151.796 244.462 151.887 244.573 151.887 cv
cp
f
242.483 157.635 mo
242.632 157.635 242.753 157.514 242.753 157.365 cv
242.753 157.217 242.632 157.096 242.483 157.096 cv
242.333 157.096 242.214 157.217 242.214 157.365 cv
242.214 157.514 242.333 157.635 242.483 157.635 cv
cp
f
240.032 162.968 mo
240.101 162.9 li
240.032 162.832 li
239.966 162.9 li
240.032 162.968 li
cp
f
237.233 168.334 mo
237.3 168.267 li
237.233 168.199 li
237.165 168.267 li
237.233 168.334 li
cp
f
234.095 173.578 mo
234.229 173.443 li
234.095 173.308 li
233.96 173.443 li
234.095 173.578 li
cp
f
230.632 178.496 mo
230.722 178.407 li
230.632 178.318 li
230.542 178.407 li
230.632 178.496 li
cp
f
226.858 183.274 mo
226.991 183.141 li
226.858 183.005 li
226.724 183.141 li
226.858 183.274 li
cp
f
222.788 187.912 mo
222.95 187.912 223.079 187.781 223.079 187.62 cv
223.079 187.459 222.95 187.328 222.788 187.328 cv
222.628 187.328 222.497 187.459 222.497 187.62 cv
222.497 187.781 222.628 187.912 222.788 187.912 cv
cp
f
218.44 192.235 mo
218.663 192.235 218.845 192.055 218.845 191.832 cv
218.845 191.609 218.663 191.428 218.44 191.428 cv
218.216 191.428 218.036 191.609 218.036 191.832 cv
218.036 192.055 218.216 192.235 218.44 192.235 cv
cp
f
213.831 196.047 mo
213.993 196.047 214.122 195.916 214.122 195.756 cv
214.122 195.595 213.993 195.464 213.831 195.464 cv
213.671 195.464 213.54 195.595 213.54 195.756 cv
213.54 195.916 213.671 196.047 213.831 196.047 cv
cp
f
208.979 199.848 mo
209.241 199.848 209.452 199.637 209.452 199.376 cv
209.452 199.115 209.241 198.904 208.979 198.904 cv
208.72 198.904 208.509 199.115 208.509 199.376 cv
208.509 199.637 208.72 199.848 208.979 199.848 cv
cp
f
203.907 203.328 mo
204.267 203.328 204.558 203.037 204.558 202.678 cv
204.558 202.318 204.267 202.027 203.907 202.027 cv
203.548 202.027 203.257 202.318 203.257 202.678 cv
203.257 203.037 203.548 203.328 203.907 203.328 cv
cp
f
198.634 206.546 mo
199.13 206.546 199.53 206.145 199.53 205.648 cv
199.53 205.152 199.13 204.751 198.634 204.751 cv
198.138 204.751 197.735 205.152 197.735 205.648 cv
197.735 206.145 198.138 206.546 198.634 206.546 cv
cp
f
193.179 208.926 mo
193.538 208.926 193.831 208.635 193.831 208.275 cv
193.831 207.915 193.538 207.624 193.179 207.624 cv
192.819 207.624 192.528 207.915 192.528 208.275 cv
192.528 208.635 192.819 208.926 193.179 208.926 cv
cp
f
187.569 211.512 mo
188.103 211.512 188.534 211.078 188.534 210.547 cv
188.534 210.014 188.103 209.582 187.569 209.582 cv
187.036 209.582 186.604 210.014 186.604 210.547 cv
186.604 211.078 187.036 211.512 187.569 211.512 cv
cp
f
181.823 213.419 mo
182.356 213.419 182.788 212.986 182.788 212.453 cv
182.788 211.92 182.356 211.488 181.823 211.488 cv
181.292 211.488 180.858 211.92 180.858 212.453 cv
180.858 212.986 181.292 213.419 181.823 213.419 cv
cp
f
175.97 214.572 mo
176.292 214.572 176.554 214.311 176.554 213.989 cv
176.554 213.666 176.292 213.404 175.97 213.404 cv
175.647 213.404 175.386 213.666 175.386 213.989 cv
175.386 214.311 175.647 214.572 175.97 214.572 cv
cp
f
170.028 215.774 mo
170.374 215.774 170.657 215.493 170.657 215.146 cv
170.657 214.799 170.374 214.518 170.028 214.518 cv
169.681 214.518 169.399 214.799 169.399 215.146 cv
169.399 215.493 169.681 215.774 170.028 215.774 cv
cp
f
164.024 216.66 mo
164.433 216.66 164.765 216.33 164.765 215.92 cv
164.765 215.512 164.433 215.18 164.024 215.18 cv
163.614 215.18 163.284 215.512 163.284 215.92 cv
163.284 216.33 163.614 216.66 164.024 216.66 cv
cp
f
157.983 216.824 mo
158.269 216.824 158.499 216.593 158.499 216.308 cv
158.499 216.023 158.269 215.792 157.983 215.792 cv
157.698 215.792 157.468 216.023 157.468 216.308 cv
157.468 216.593 157.698 216.824 157.983 216.824 cv
cp
f
151.931 217.025 mo
152.327 217.025 152.649 216.705 152.649 216.308 cv
152.649 215.911 152.327 215.59 151.931 215.59 cv
151.534 215.59 151.212 215.911 151.212 216.308 cv
151.212 216.705 151.534 217.025 151.931 217.025 cv
cp
f
145.89 216.729 mo
146.337 216.729 146.698 216.366 146.698 215.92 cv
146.698 215.474 146.337 215.112 145.89 215.112 cv
145.444 215.112 145.083 215.474 145.083 215.92 cv
145.083 216.366 145.444 216.729 145.89 216.729 cv
cp
f
139.886 215.954 mo
140.333 215.954 140.694 215.592 140.694 215.146 cv
140.694 214.699 140.333 214.338 139.886 214.338 cv
139.44 214.338 139.079 214.699 139.079 215.146 cv
139.079 215.592 139.44 215.954 139.886 215.954 cv
cp
f
133.946 214.842 mo
134.417 214.842 134.798 214.46 134.798 213.989 cv
134.798 213.518 134.417 213.137 133.946 213.137 cv
133.474 213.137 133.093 213.518 133.093 213.989 cv
133.093 214.46 133.474 214.842 133.946 214.842 cv
cp
f
128.091 213.576 mo
128.71 213.576 129.212 213.073 129.212 212.453 cv
129.212 211.834 128.71 211.331 128.091 211.331 cv
127.472 211.331 126.968 211.834 126.968 212.453 cv
126.968 213.073 127.472 213.576 128.091 213.576 cv
cp
f
122.345 211.825 mo
123.052 211.825 123.624 211.253 123.624 210.547 cv
123.624 209.84 123.052 209.268 122.345 209.268 cv
121.64 209.268 121.067 209.84 121.067 210.547 cv
121.067 211.253 121.64 211.825 122.345 211.825 cv
cp
f
116.735 209.33 mo
117.317 209.33 117.788 208.857 117.788 208.275 cv
117.788 207.691 117.317 207.221 116.735 207.221 cv
116.151 207.221 115.681 207.691 115.681 208.275 cv
115.681 208.857 116.151 209.33 116.735 209.33 cv
cp
f
111.282 207.197 mo
112.138 207.197 112.829 206.504 112.829 205.648 cv
112.829 204.793 112.138 204.1 111.282 204.1 cv
110.425 204.1 109.733 204.793 109.733 205.648 cv
109.733 206.504 110.425 207.197 111.282 207.197 cv
cp
f
106.007 204.024 mo
106.751 204.024 107.354 203.422 107.354 202.678 cv
107.354 201.935 106.751 201.332 106.007 201.332 cv
105.263 201.332 104.661 201.935 104.661 202.678 cv
104.661 203.422 105.263 204.024 106.007 204.024 cv
cp
f
100.935 200.79 mo
101.716 200.79 102.349 200.156 102.349 199.376 cv
102.349 198.595 101.716 197.962 100.935 197.962 cv
100.153 197.962 99.5205 198.595 99.5205 199.376 cv
99.5205 200.156 100.153 200.79 100.935 200.79 cv
cp
f
96.083 196.99 mo
96.7646 196.99 97.3174 196.438 97.3174 195.756 cv
97.3174 195.074 96.7646 194.521 96.083 194.521 cv
95.4014 194.521 94.8486 195.074 94.8486 195.756 cv
94.8486 196.438 95.4014 196.99 96.083 196.99 cv
cp
f
91.4736 193.133 mo
92.1924 193.133 92.7764 192.551 92.7764 191.832 cv
92.7764 191.112 92.1924 190.53 91.4736 190.53 cv
90.7549 190.53 90.1729 191.112 90.1729 191.832 cv
90.1729 192.551 90.7549 193.133 91.4736 193.133 cv
cp
f
87.126 188.473 mo
87.5967 188.473 87.9775 188.092 87.9775 187.62 cv
87.9775 187.149 87.5967 186.768 87.126 186.768 cv
86.6553 186.768 86.2725 187.149 86.2725 187.62 cv
86.2725 188.092 86.6553 188.473 87.126 188.473 cv
cp
f
83.0557 183.857 mo
83.4541 183.857 83.7744 183.536 83.7744 183.141 cv
83.7744 182.743 83.4541 182.422 83.0557 182.422 cv
82.6592 182.422 82.3389 182.743 82.3389 183.141 cv
82.3389 183.536 82.6592 183.857 83.0557 183.857 cv
cp
f
79.2822 179.125 mo
79.6787 179.125 79.999 178.804 79.999 178.408 cv
79.999 178.01 79.6787 177.689 79.2822 177.689 cv
78.8857 177.689 78.5654 178.01 78.5654 178.408 cv
78.5654 178.804 78.8857 179.125 79.2822 179.125 cv
cp
f
75.8193 174.071 mo
76.167 174.071 76.4482 173.789 76.4482 173.443 cv
76.4482 173.096 76.167 172.814 75.8193 172.814 cv
75.4717 172.814 75.1904 173.096 75.1904 173.443 cv
75.1904 173.789 75.4717 174.071 75.8193 174.071 cv
cp
f
72.6826 168.761 mo
72.9541 168.761 73.1748 168.539 73.1748 168.267 cv
73.1748 167.994 72.9541 167.772 72.6826 167.772 cv
72.4092 167.772 72.1885 167.994 72.1885 168.267 cv
72.1885 168.539 72.4092 168.761 72.6826 168.761 cv
cp
f
69.8818 163.461 mo
70.1924 163.461 70.4424 163.21 70.4424 162.9 cv
70.4424 162.59 70.1924 162.338 69.8818 162.338 cv
69.5713 162.338 69.3193 162.59 69.3193 162.9 cv
69.3193 163.21 69.5713 163.461 69.8818 163.461 cv
cp
f
67.4307 157.927 mo
67.7412 157.927 67.9932 157.675 67.9932 157.365 cv
67.9932 157.055 67.7412 156.804 67.4307 156.804 cv
67.1221 156.804 66.8701 157.055 66.8701 157.365 cv
66.8701 157.675 67.1221 157.927 67.4307 157.927 cv
cp
f
65.3408 152.268 mo
65.6631 152.268 65.9248 152.007 65.9248 151.685 cv
65.9248 151.361 65.6631 151.1 65.3408 151.1 cv
65.0186 151.1 64.7568 151.361 64.7568 151.685 cv
64.7568 152.007 65.0186 152.268 65.3408 152.268 cv
cp
f
63.6182 146.308 mo
63.8545 146.308 64.0459 146.117 64.0459 145.882 cv
64.0459 145.646 63.8545 145.455 63.6182 145.455 cv
63.3838 145.455 63.1924 145.646 63.1924 145.882 cv
63.1924 146.117 63.3838 146.308 63.6182 146.308 cv
cp
f
62.2725 140.385 mo
62.4951 140.385 62.6768 140.203 62.6768 139.98 cv
62.6768 139.757 62.4951 139.576 62.2725 139.576 cv
62.0479 139.576 61.8682 139.757 61.8682 139.98 cv
61.8682 140.203 62.0479 140.385 62.2725 140.385 cv
cp
f
61.3037 134.477 mo
61.5654 134.477 61.7764 134.265 61.7764 134.005 cv
61.7764 133.744 61.5654 133.533 61.3037 133.533 cv
61.0459 133.533 60.835 133.744 60.835 134.005 cv
60.835 134.265 61.0459 134.477 61.3037 134.477 cv
cp
f
60.7256 128.34 mo
60.9229 128.34 61.083 128.178 61.083 127.98 cv
61.083 127.781 60.9229 127.621 60.7256 127.621 cv
60.5264 127.621 60.3662 127.781 60.3662 127.98 cv
60.3662 128.178 60.5264 128.34 60.7256 128.34 cv
cp
f
60.5303 122.266 mo
60.7158 122.266 60.8662 122.115 60.8662 121.93 cv
60.8662 121.744 60.7158 121.594 60.5303 121.594 cv
60.3447 121.594 60.1943 121.744 60.1943 121.93 cv
60.1943 122.115 60.3447 122.266 60.5303 122.266 cv
cp
f
60.7256 116.172 mo
60.8857 116.172 61.0166 116.041 61.0166 115.88 cv
61.0166 115.719 60.8857 115.588 60.7256 115.588 cv
60.5635 115.588 60.4326 115.719 60.4326 115.88 cv
60.4326 116.041 60.5635 116.172 60.7256 116.172 cv
cp
f
61.3037 110.146 mo
61.4658 110.146 61.5967 110.016 61.5967 109.854 cv
61.5967 109.693 61.4658 109.563 61.3037 109.563 cv
61.1436 109.563 61.0146 109.693 61.0146 109.854 cv
61.0146 110.016 61.1436 110.146 61.3037 110.146 cv
cp
f
62.2725 104.104 mo
62.3955 104.104 62.4951 104.004 62.4951 103.879 cv
62.4951 103.755 62.3955 103.654 62.2725 103.654 cv
62.1475 103.654 62.0479 103.755 62.0479 103.879 cv
62.0479 104.004 62.1475 104.104 62.2725 104.104 cv
cp
f
63.6182 98.1133 mo
63.7529 97.9785 li
63.6182 97.8438 li
63.4834 97.9785 li
63.6182 98.1133 li
cp
f
65.3408 92.4004 mo
65.4639 92.4004 65.5654 92.2988 65.5654 92.1758 cv
65.5654 92.0508 65.4639 91.9512 65.3408 91.9512 cv
65.2158 91.9512 65.1162 92.0508 65.1162 92.1758 cv
65.1162 92.2988 65.2158 92.4004 65.3408 92.4004 cv
cp
f
67.4307 86.584 mo
67.5205 86.4941 li
67.4307 86.4053 li
67.3428 86.4941 li
67.4307 86.584 li
cp
f
69.8818 81.0938 mo
70.0166 80.96 li
69.8818 80.8242 li
69.7471 80.96 li
69.8818 81.0938 li
cp
f
72.6826 75.6602 mo
72.749 75.5928 li
72.6826 75.5254 li
72.6143 75.5928 li
72.6826 75.6602 li
cp
f
75.8193 70.5508 mo
75.9541 70.417 li
75.8193 70.2813 li
75.6846 70.417 li
75.8193 70.5508 li
cp
f
79.2822 65.541 mo
79.3721 65.4521 li
79.2822 65.3633 li
79.1924 65.4521 li
79.2822 65.541 li
cp
f
83.0557 60.7871 mo
83.124 60.7197 li
83.0557 60.6523 li
82.9873 60.7197 li
83.0557 60.7871 li
cp
f
87.126 56.3066 mo
87.1943 56.2393 li
87.126 56.1719 li
87.0576 56.2393 li
87.126 56.3066 li
cp
f
91.4736 52.0498 mo
91.4971 52.0283 li
91.4736 52.0059 li
91.4521 52.0283 li
91.4736 52.0498 li
cp
f
247.642 103.901 mo
247.665 103.879 li
247.642 103.856 li
247.62 103.879 li
247.642 103.901 li
cp
f
248.608 109.877 mo
248.632 109.854 li
248.608 109.832 li
248.587 109.854 li
248.608 109.877 li
cp
f
249.19 115.902 mo
249.212 115.879 li
249.19 115.857 li
249.167 115.879 li
249.19 115.902 li
cp
f
256.128 121.997 mo
256.196 121.93 li
256.128 121.862 li
256.062 121.93 li
256.128 121.997 li
cp
f
255.946 128.182 mo
256.06 128.182 256.149 128.092 256.149 127.98 cv
256.149 127.869 256.06 127.777 255.946 127.777 cv
255.835 127.777 255.745 127.869 255.745 127.98 cv
255.745 128.092 255.835 128.182 255.946 128.182 cv
cp
f
255.405 134.166 mo
255.562 134.01 li
255.405 133.852 li
255.247 134.01 li
255.405 134.166 li
cp
f
254.503 140.152 mo
254.659 139.994 li
254.503 139.838 li
254.347 139.994 li
254.503 140.152 li
cp
f
253.243 146.051 mo
253.38 145.916 li
253.243 145.781 li
253.108 145.916 li
253.243 146.051 li
cp
f
251.634 152.177 mo
251.87 152.177 252.06 151.986 252.06 151.75 cv
252.06 151.515 251.87 151.324 251.634 151.324 cv
251.397 151.324 251.208 151.515 251.208 151.75 cv
251.208 151.986 251.397 152.177 251.634 152.177 cv
cp
f
249.677 158.22 mo
250.087 158.22 250.417 157.889 250.417 157.479 cv
250.417 157.069 250.087 156.738 249.677 156.738 cv
249.269 156.738 248.937 157.069 248.937 157.479 cv
248.937 157.889 249.269 158.22 249.677 158.22 cv
cp
f
247.382 163.35 mo
247.53 163.35 247.651 163.229 247.651 163.079 cv
247.651 162.932 247.53 162.811 247.382 162.811 cv
247.233 162.811 247.112 162.932 247.112 163.079 cv
247.112 163.229 247.233 163.35 247.382 163.35 cv
cp
f
244.755 169.117 mo
245.077 169.117 245.339 168.855 245.339 168.533 cv
245.339 168.212 245.077 167.95 244.755 167.95 cv
244.433 167.95 244.173 168.212 244.173 168.533 cv
244.173 168.855 244.433 169.117 244.755 169.117 cv
cp
f
241.808 174.292 mo
242.067 174.292 242.278 174.08 242.278 173.82 cv
242.278 173.561 242.067 173.35 241.808 173.35 cv
241.548 173.35 241.337 173.561 241.337 173.82 cv
241.337 174.08 241.548 174.292 241.808 174.292 cv
cp
f
238.548 179.123 mo
238.661 179.123 238.751 179.033 238.751 178.922 cv
238.751 178.811 238.661 178.719 238.548 178.719 cv
238.438 178.719 238.347 178.811 238.347 178.922 cv
238.347 179.033 238.438 179.123 238.548 179.123 cv
cp
f
234.991 184.178 mo
235.188 184.178 235.351 184.018 235.351 183.818 cv
235.351 183.62 235.188 183.459 234.991 183.459 cv
234.792 183.459 234.632 183.62 234.632 183.818 cv
234.632 184.018 234.792 184.178 234.991 184.178 cv
cp
f
231.147 188.831 mo
231.333 188.831 231.483 188.68 231.483 188.494 cv
231.483 188.309 231.333 188.158 231.147 188.158 cv
230.96 188.158 230.81 188.309 230.81 188.494 cv
230.81 188.68 230.96 188.831 231.147 188.831 cv
cp
f
227.03 193.269 mo
227.216 193.269 227.366 193.117 227.366 192.932 cv
227.366 192.746 227.216 192.596 227.03 192.596 cv
226.843 192.596 226.692 192.746 226.692 192.932 cv
226.692 193.117 226.843 193.269 227.03 193.269 cv
cp
f
222.653 197.676 mo
222.964 197.676 223.216 197.424 223.216 197.115 cv
223.216 196.805 222.964 196.553 222.653 196.553 cv
222.345 196.553 222.093 196.805 222.093 197.115 cv
222.093 197.424 222.345 197.676 222.653 197.676 cv
cp
f
218.036 201.657 mo
218.384 201.657 218.665 201.375 218.665 201.028 cv
218.665 200.682 218.384 200.4 218.036 200.4 cv
217.69 200.4 217.409 200.682 217.409 201.028 cv
217.409 201.375 217.69 201.657 218.036 201.657 cv
cp
f
213.192 205.513 mo
213.665 205.513 214.046 205.131 214.046 204.66 cv
214.046 204.188 213.665 203.807 213.192 203.807 cv
212.722 203.807 212.341 204.188 212.341 204.66 cv
212.341 205.131 212.722 205.513 213.192 205.513 cv
cp
f
208.142 208.848 mo
208.612 208.848 208.993 208.465 208.993 207.994 cv
208.993 207.523 208.612 207.141 208.142 207.141 cv
207.671 207.141 207.288 207.523 207.288 207.994 cv
207.288 208.465 207.671 208.848 208.142 208.848 cv
cp
f
202.899 212.3 mo
203.604 212.3 204.179 211.728 204.179 211.021 cv
204.179 210.314 203.604 209.742 202.899 209.742 cv
202.192 209.742 201.62 210.314 201.62 211.021 cv
201.62 211.728 202.192 212.3 202.899 212.3 cv
cp
f
197.485 214.873 mo
198.116 214.873 198.63 214.36 198.63 213.729 cv
198.63 213.097 198.116 212.584 197.485 212.584 cv
196.854 212.584 196.341 213.097 196.341 213.729 cv
196.341 214.36 196.854 214.873 197.485 214.873 cv
cp
f
191.919 217.072 mo
192.452 217.072 192.884 216.641 192.884 216.107 cv
192.884 215.574 192.452 215.143 191.919 215.143 cv
191.388 215.143 190.954 215.574 190.954 216.107 cv
190.954 216.641 191.388 217.072 191.919 217.072 cv
cp
f
186.222 219.115 mo
186.755 219.115 187.187 218.683 187.187 218.15 cv
187.187 217.615 186.755 217.186 186.222 217.186 cv
185.687 217.186 185.257 217.615 185.257 218.15 cv
185.257 218.683 185.687 219.115 186.222 219.115 cv
cp
f
180.411 220.812 mo
180.944 220.812 181.376 220.38 181.376 219.847 cv
181.376 219.314 180.944 218.882 180.411 218.882 cv
179.878 218.882 179.446 219.314 179.446 219.847 cv
179.446 220.38 179.878 220.812 180.411 220.812 cv
cp
f
174.509 221.98 mo
174.944 221.98 175.294 221.627 175.294 221.193 cv
175.294 220.76 174.944 220.408 174.509 220.408 cv
174.075 220.408 173.724 220.76 173.724 221.193 cv
173.724 221.627 174.075 221.98 174.509 221.98 cv
cp
f
168.538 222.926 mo
168.948 222.926 169.278 222.595 169.278 222.186 cv
169.278 221.777 168.948 221.445 168.538 221.445 cv
168.13 221.445 167.798 221.777 167.798 222.186 cv
167.798 222.595 168.13 222.926 168.538 222.926 cv
cp
f
162.517 223.627 mo
162.964 223.627 163.325 223.264 163.325 222.818 cv
163.325 222.371 162.964 222.011 162.517 222.011 cv
162.071 222.011 161.71 222.371 161.71 222.818 cv
161.71 223.264 162.071 223.627 162.517 223.627 cv
cp
f
156.472 223.988 mo
156.966 223.988 157.368 223.586 157.368 223.09 cv
157.368 222.594 156.966 222.192 156.472 222.192 cv
155.974 222.192 155.573 222.594 155.573 223.09 cv
155.573 223.586 155.974 223.988 156.472 223.988 cv
cp
f
150.419 224.144 mo
151.05 224.144 151.562 223.631 151.562 223 cv
151.562 222.367 151.05 221.854 150.419 221.854 cv
149.786 221.854 149.274 222.367 149.274 223 cv
149.274 223.631 149.786 224.144 150.419 224.144 cv
cp
f
144.382 223.691 mo
145.015 223.691 145.526 223.18 145.526 222.547 cv
145.526 221.915 145.015 221.402 144.382 221.402 cv
143.749 221.402 143.237 221.915 143.237 222.547 cv
143.237 223.18 143.749 223.691 144.382 223.691 cv
cp
f
138.384 222.99 mo
139.077 222.99 139.64 222.429 139.64 221.734 cv
139.64 221.04 139.077 220.478 138.384 220.478 cv
137.69 220.478 137.126 221.04 137.126 221.734 cv
137.126 222.429 137.69 222.99 138.384 222.99 cv
cp
f
132.444 221.956 mo
133.212 221.956 133.835 221.333 133.835 220.564 cv
133.835 219.797 133.212 219.173 132.444 219.173 cv
131.675 219.173 131.052 219.797 131.052 220.564 cv
131.052 221.333 131.675 221.956 132.444 221.956 cv
cp
f
126.585 220.434 mo
127.354 220.434 127.978 219.811 127.978 219.042 cv
127.978 218.273 127.354 217.65 126.585 217.65 cv
125.817 217.65 125.194 218.273 125.194 219.042 cv
125.194 219.811 125.817 220.434 126.585 220.434 cv
cp
f
120.829 218.742 mo
121.696 218.742 122.399 218.039 122.399 217.172 cv
122.399 216.303 121.696 215.6 120.829 215.6 cv
119.962 215.6 119.259 216.303 119.259 217.172 cv
119.259 218.039 119.962 218.742 120.829 218.742 cv
cp
f
115.194 216.464 mo
116.024 216.464 116.698 215.791 116.698 214.959 cv
116.698 214.13 116.024 213.456 115.194 213.456 cv
114.364 213.456 113.69 214.13 113.69 214.959 cv
113.69 215.791 114.364 216.464 115.194 216.464 cv
cp
f
109.702 214.166 mo
110.669 214.166 111.452 213.382 111.452 212.415 cv
111.452 211.448 110.669 210.665 109.702 210.665 cv
108.735 210.665 107.952 211.448 107.952 212.415 cv
107.952 213.382 108.735 214.166 109.702 214.166 cv
cp
f
104.37 211.118 mo
105.239 211.118 105.942 210.414 105.942 209.547 cv
105.942 208.68 105.239 207.975 104.37 207.975 cv
103.505 207.975 102.8 208.68 102.8 209.547 cv
102.8 210.414 103.505 211.118 104.37 211.118 cv
cp
f
99.2217 208.025 mo
100.14 208.025 100.884 207.281 100.884 206.365 cv
100.884 205.447 100.14 204.704 99.2217 204.704 cv
98.3057 204.704 97.5615 205.447 97.5615 206.365 cv
97.5615 207.281 98.3057 208.025 99.2217 208.025 cv
cp
f
94.2725 204.385 mo
95.1025 204.385 95.7764 203.711 95.7764 202.881 cv
95.7764 202.049 95.1025 201.377 94.2725 201.377 cv
93.4424 201.377 92.7686 202.049 92.7686 202.881 cv
92.7686 203.711 93.4424 204.385 94.2725 204.385 cv
cp
f
89.54 200.924 mo
90.5439 200.924 91.3584 200.11 91.3584 199.106 cv
91.3584 198.102 90.5439 197.289 89.54 197.289 cv
88.5361 197.289 87.7217 198.102 87.7217 199.106 cv
87.7217 200.11 88.5361 200.924 89.54 200.924 cv
cp
f
85.042 196.717 mo
85.958 196.717 86.7021 195.974 86.7021 195.056 cv
86.7021 194.139 85.958 193.395 85.042 193.395 cv
84.124 193.395 83.3799 194.139 83.3799 195.056 cv
83.3799 195.974 84.124 196.717 85.042 196.717 cv
cp
f
80.792 192.404 mo
81.71 192.404 82.4541 191.661 82.4541 190.744 cv
82.4541 189.826 81.71 189.083 80.792 189.083 cv
79.876 189.083 79.1318 189.826 79.1318 190.744 cv
79.1318 191.661 79.876 192.404 80.792 192.404 cv
cp
f
76.8096 187.375 mo
77.4678 187.375 78.001 186.842 78.001 186.186 cv
78.001 185.527 77.4678 184.996 76.8096 184.996 cv
76.1533 184.996 75.6201 185.527 75.6201 186.186 cv
75.6201 186.842 76.1533 187.375 76.8096 187.375 cv
cp
f
73.1064 182.361 mo
73.6396 182.361 74.0732 181.93 74.0732 181.396 cv
74.0732 180.863 73.6396 180.432 73.1064 180.432 cv
72.5752 180.432 72.1416 180.863 72.1416 181.396 cv
72.1416 181.93 72.5752 182.361 73.1064 182.361 cv
cp
f
69.6982 177.428 mo
70.2686 177.428 70.7314 176.965 70.7314 176.396 cv
70.7314 175.826 70.2686 175.363 69.6982 175.363 cv
69.1279 175.363 68.665 175.826 68.665 176.396 cv
68.665 176.965 69.1279 177.428 69.6982 177.428 cv
cp
f
66.5928 172.232 mo
67.1631 172.232 67.624 171.77 67.624 171.199 cv
67.624 170.629 67.1631 170.166 66.5928 170.166 cv
66.0225 170.166 65.5596 170.629 65.5596 171.199 cv
65.5596 171.77 66.0225 172.232 66.5928 172.232 cv
cp
f
63.8057 166.701 mo
64.2881 166.701 64.6807 166.31 64.6807 165.826 cv
64.6807 165.344 64.2881 164.951 63.8057 164.951 cv
63.3213 164.951 62.9287 165.344 62.9287 165.826 cv
62.9287 166.31 63.3213 166.701 63.8057 166.701 cv
cp
f
61.3428 161.015 mo
61.7393 161.015 62.0596 160.693 62.0596 160.297 cv
62.0596 159.899 61.7393 159.578 61.3428 159.578 cv
60.9463 159.578 60.626 159.899 60.626 160.297 cv
60.626 160.693 60.9463 161.015 61.3428 161.015 cv
cp
f
59.2158 155.213 mo
59.5381 155.213 59.7998 154.951 59.7998 154.629 cv
59.7998 154.307 59.5381 154.046 59.2158 154.046 cv
58.8936 154.046 58.6318 154.307 58.6318 154.629 cv
58.6318 154.951 58.8936 155.213 59.2158 155.213 cv
cp
f
57.4307 149.563 mo
57.8291 149.563 58.1494 149.242 58.1494 148.845 cv
58.1494 148.448 57.8291 148.127 57.4307 148.127 cv
57.0342 148.127 56.7139 148.448 56.7139 148.845 cv
56.7139 149.242 57.0342 149.563 57.4307 149.563 cv
cp
f
55.9971 143.436 mo
56.2568 143.436 56.4678 143.225 56.4678 142.964 cv
56.4678 142.704 56.2568 142.493 55.9971 142.493 cv
55.7354 142.493 55.5264 142.704 55.5264 142.964 cv
55.5264 143.225 55.7354 143.436 55.9971 143.436 cv
cp
f
54.915 137.48 mo
55.1768 137.48 55.3877 137.268 55.3877 137.008 cv
55.3877 136.748 55.1768 136.537 54.915 136.537 cv
54.6553 136.537 54.4443 136.748 54.4443 137.008 cv
54.4443 137.268 54.6553 137.48 54.915 137.48 cv
cp
f
54.1924 131.492 mo
54.4658 131.492 54.6865 131.271 54.6865 130.998 cv
54.6865 130.726 54.4658 130.506 54.1924 130.506 cv
53.9209 130.506 53.6982 130.726 53.6982 130.998 cv
53.6982 131.271 53.9209 131.492 54.1924 131.492 cv
cp
f
53.8311 125.428 mo
54.0908 125.428 54.3018 125.217 54.3018 124.955 cv
54.3018 124.695 54.0908 124.484 53.8311 124.484 cv
53.5713 124.484 53.3604 124.695 53.3604 124.955 cv
53.3604 125.217 53.5713 125.428 53.8311 125.428 cv
cp
f
53.8311 119.33 mo
54.0674 119.33 54.2568 119.139 54.2568 118.902 cv
54.2568 118.668 54.0674 118.477 53.8311 118.477 cv
53.5947 118.477 53.4053 118.668 53.4053 118.902 cv
53.4053 119.139 53.5947 119.33 53.8311 119.33 cv
cp
f
54.1924 113.197 mo
54.3799 113.197 54.5283 113.047 54.5283 112.86 cv
54.5283 112.675 54.3799 112.523 54.1924 112.523 cv
54.0068 112.523 53.8564 112.675 53.8564 112.86 cv
53.8564 113.047 54.0068 113.197 54.1924 113.197 cv
cp
f
54.915 107.211 mo
55.1143 107.211 55.2744 107.049 55.2744 106.851 cv
55.2744 106.652 55.1143 106.492 54.915 106.492 cv
54.7178 106.492 54.5576 106.652 54.5576 106.851 cv
54.5576 107.049 54.7178 107.211 54.915 107.211 cv
cp
f
55.9971 101.231 mo
56.1826 101.231 56.333 101.08 56.333 100.895 cv
56.333 100.709 56.1826 100.559 55.9971 100.559 cv
55.8115 100.559 55.6592 100.709 55.6592 100.895 cv
55.6592 101.08 55.8115 101.231 55.9971 101.231 cv
cp
f
57.4326 95.3506 mo
57.6182 95.3506 57.7686 95.2002 57.7686 95.0137 cv
57.7686 94.8281 57.6182 94.6777 57.4326 94.6777 cv
57.2451 94.6777 57.0947 94.8281 57.0947 95.0137 cv
57.0947 95.2002 57.2451 95.3506 57.4326 95.3506 cv
cp
f
59.2158 89.4551 mo
59.3408 89.4551 59.4404 89.3535 59.4404 89.2295 cv
59.4404 89.1055 59.3408 89.0059 59.2158 89.0059 cv
59.0928 89.0059 58.9912 89.1055 58.9912 89.2295 cv
58.9912 89.3535 59.0928 89.4551 59.2158 89.4551 cv
cp
f
61.3428 83.832 mo
61.4912 83.832 61.6123 83.7109 61.6123 83.5625 cv
61.6123 83.4141 61.4912 83.293 61.3428 83.293 cv
61.1943 83.293 61.0732 83.4141 61.0732 83.5625 cv
61.0732 83.7109 61.1943 83.832 61.3428 83.832 cv
cp
f
63.8057 78.4375 mo
64.0264 78.4375 64.208 78.2559 64.208 78.0332 cv
64.208 77.8086 64.0264 77.6289 63.8057 77.6289 cv
63.583 77.6289 63.4014 77.8086 63.4014 78.0332 cv
63.4014 78.2559 63.583 78.4375 63.8057 78.4375 cv
cp
f
66.5928 72.8613 mo
66.7041 72.8613 66.7959 72.7715 66.7959 72.6602 cv
66.7959 72.5488 66.7041 72.459 66.5928 72.459 cv
66.4814 72.459 66.3916 72.5488 66.3916 72.6602 cv
66.3916 72.7715 66.4814 72.8613 66.5928 72.8613 cv
cp
f
69.6982 67.666 mo
69.8096 67.666 69.8994 67.5752 69.8994 67.4639 cv
69.8994 67.3516 69.8096 67.2617 69.6982 67.2617 cv
69.5869 67.2617 69.4951 67.3516 69.4951 67.4639 cv
69.4951 67.5752 69.5869 67.666 69.6982 67.666 cv
cp
f
73.1064 62.5293 mo
73.1748 62.4629 li
73.1064 62.3945 li
73.04 62.4629 li
73.1064 62.5293 li
cp
f
76.8115 57.7637 mo
76.9014 57.6738 li
76.8115 57.584 li
76.7217 57.6738 li
76.8115 57.7637 li
cp
f
262.194 134.147 mo
262.331 134.012 li
262.194 133.878 li
262.06 134.012 li
262.194 134.147 li
cp
f
261.349 140.208 mo
261.46 140.208 261.55 140.119 261.55 140.006 cv
261.55 139.895 261.46 139.805 261.349 139.805 cv
261.237 139.805 261.146 139.895 261.146 140.006 cv
261.146 140.119 261.237 140.208 261.349 140.208 cv
cp
f
260.167 146.1 mo
260.325 145.943 li
260.167 145.786 li
260.011 145.943 li
260.167 146.1 li
cp
f
258.655 152.074 mo
258.804 152.074 258.925 151.953 258.925 151.805 cv
258.925 151.656 258.804 151.535 258.655 151.535 cv
258.507 151.535 258.386 151.656 258.386 151.805 cv
258.386 151.953 258.507 152.074 258.655 152.074 cv
cp
f
256.817 158.088 mo
257.103 158.088 257.335 157.857 257.335 157.572 cv
257.335 157.287 257.103 157.057 256.817 157.057 cv
256.532 157.057 256.302 157.287 256.302 157.572 cv
256.302 157.857 256.532 158.088 256.817 158.088 cv
cp
f
254.659 164.013 mo
255.093 164.013 255.444 163.661 255.444 163.228 cv
255.444 162.793 255.093 162.441 254.659 162.441 cv
254.226 162.441 253.874 162.793 253.874 163.228 cv
253.874 163.661 254.226 164.013 254.659 164.013 cv
cp
f
252.187 169.627 mo
252.669 169.627 253.062 169.236 253.062 168.753 cv
253.062 168.27 252.669 167.878 252.187 167.878 cv
251.702 167.878 251.312 168.27 251.312 168.753 cv
251.312 169.236 251.702 169.627 252.187 169.627 cv
cp
f
249.409 175.365 mo
250.091 175.365 250.642 174.813 250.642 174.131 cv
250.642 173.449 250.091 172.896 249.409 172.896 cv
248.726 172.896 248.175 173.449 248.175 174.131 cv
248.175 174.813 248.726 175.365 249.409 175.365 cv
cp
f
246.333 179.861 mo
246.616 179.861 246.849 179.63 246.849 179.344 cv
246.849 179.06 246.616 178.828 246.333 178.828 cv
246.048 178.828 245.815 179.06 245.815 179.344 cv
245.815 179.63 246.048 179.861 246.333 179.861 cv
cp
f
242.97 184.961 mo
243.292 184.961 243.552 184.701 243.552 184.377 cv
243.552 184.056 243.292 183.795 242.97 183.795 cv
242.647 183.795 242.386 184.056 242.386 184.377 cv
242.386 184.701 242.647 184.961 242.97 184.961 cv
cp
f
239.329 189.574 mo
239.528 189.574 239.688 189.413 239.688 189.215 cv
239.688 189.017 239.528 188.855 239.329 188.855 cv
239.132 188.855 238.97 189.017 238.97 189.215 cv
238.97 189.413 239.132 189.574 239.329 189.574 cv
cp
f
235.425 194.423 mo
235.747 194.423 236.007 194.162 236.007 193.839 cv
236.007 193.518 235.747 193.256 235.425 193.256 cv
235.103 193.256 234.841 193.518 234.841 193.839 cv
234.841 194.162 235.103 194.423 235.425 194.423 cv
cp
f
231.265 198.979 mo
231.675 198.979 232.005 198.647 232.005 198.238 cv
232.005 197.828 231.675 197.497 231.265 197.497 cv
230.856 197.497 230.524 197.828 230.524 198.238 cv
230.524 198.647 230.856 198.979 231.265 198.979 cv
cp
f
226.866 202.957 mo
227.177 202.957 227.429 202.707 227.429 202.396 cv
227.429 202.087 227.177 201.836 226.866 201.836 cv
226.556 201.836 226.306 202.087 226.306 202.396 cv
226.306 202.707 226.556 202.957 226.866 202.957 cv
cp
f
222.241 207.424 mo
222.862 207.424 223.364 206.922 223.364 206.303 cv
223.364 205.682 222.862 205.18 222.241 205.18 cv
221.622 205.18 221.12 205.682 221.12 206.303 cv
221.12 206.922 221.622 207.424 222.241 207.424 cv
cp
f
217.405 211.064 mo
218.024 211.064 218.528 210.563 218.528 209.941 cv
218.528 209.322 218.024 208.82 217.405 208.82 cv
216.786 208.82 216.282 209.322 216.282 209.941 cv
216.282 210.563 216.786 211.064 217.405 211.064 cv
cp
f
212.372 214.449 mo
213.005 214.449 213.517 213.938 213.517 213.305 cv
213.517 212.673 213.005 212.16 212.372 212.16 cv
211.739 212.16 211.228 212.673 211.228 213.305 cv
211.228 213.938 211.739 214.449 212.372 214.449 cv
cp
f
207.157 217.66 mo
207.864 217.66 208.438 217.087 208.438 216.381 cv
208.438 215.674 207.864 215.102 207.157 215.102 cv
206.452 215.102 205.878 215.674 205.878 216.381 cv
205.878 217.087 206.452 217.66 207.157 217.66 cv
cp
f
201.78 220.73 mo
202.647 220.73 203.353 220.027 203.353 219.158 cv
203.353 218.291 202.647 217.588 201.78 217.588 cv
200.913 217.588 200.21 218.291 200.21 219.158 cv
200.21 220.027 200.913 220.73 201.78 220.73 cv
cp
f
196.255 222.933 mo
196.974 222.933 197.558 222.351 197.558 221.631 cv
197.558 220.913 196.974 220.33 196.255 220.33 cv
195.536 220.33 194.952 220.913 194.952 221.631 cv
194.952 222.351 195.536 222.933 196.255 222.933 cv
cp
f
190.601 224.979 mo
191.257 224.979 191.79 224.447 191.79 223.79 cv
191.79 223.133 191.257 222.601 190.601 222.601 cv
189.942 222.601 189.409 223.133 189.409 223.79 cv
189.409 224.447 189.942 224.979 190.601 224.979 cv
cp
f
184.831 226.908 mo
185.54 226.908 186.112 226.335 186.112 225.629 cv
186.112 224.922 185.54 224.349 184.831 224.349 cv
184.126 224.349 183.554 224.922 183.554 225.629 cv
183.554 226.335 184.126 226.908 184.831 226.908 cv
cp
f
178.972 228.531 mo
179.739 228.531 180.362 227.908 180.362 227.141 cv
180.362 226.372 179.739 225.748 178.972 225.748 cv
178.202 225.748 177.579 226.372 177.579 227.141 cv
177.579 227.908 178.202 228.531 178.972 228.531 cv
cp
f
173.034 229.623 mo
173.753 229.623 174.337 229.041 174.337 228.321 cv
174.337 227.603 173.753 227.02 173.034 227.02 cv
172.315 227.02 171.731 227.603 171.731 228.321 cv
171.731 229.041 172.315 229.623 173.034 229.623 cv
cp
f
167.04 230.469 mo
167.759 230.469 168.343 229.886 168.343 229.167 cv
168.343 228.448 167.759 227.865 167.04 227.865 cv
166.321 227.865 165.737 228.448 165.737 229.167 cv
165.737 229.886 166.321 230.469 167.04 230.469 cv
cp
f
161.007 231.18 mo
161.839 231.18 162.513 230.507 162.513 229.676 cv
162.513 228.846 161.839 228.172 161.007 228.172 cv
160.177 228.172 159.505 228.846 159.505 229.676 cv
159.505 230.507 160.177 231.18 161.007 231.18 cv
cp
f
154.958 231.35 mo
155.788 231.35 156.462 230.677 156.462 229.846 cv
156.462 229.016 155.788 228.343 154.958 228.343 cv
154.126 228.343 153.452 229.016 153.452 229.846 cv
153.452 230.677 154.126 231.35 154.958 231.35 cv
cp
f
148.905 231.27 mo
149.786 231.27 150.499 230.557 150.499 229.676 cv
150.499 228.796 149.786 228.082 148.905 228.082 cv
148.026 228.082 147.313 228.796 147.313 229.676 cv
147.313 230.557 148.026 231.27 148.905 231.27 cv
cp
f
142.874 230.716 mo
143.729 230.716 144.423 230.023 144.423 229.167 cv
144.423 228.313 143.729 227.619 142.874 227.619 cv
142.019 227.619 141.325 228.313 141.325 229.167 cv
141.325 230.023 142.019 230.716 142.874 230.716 cv
cp
f
136.88 230.072 mo
137.847 230.072 138.632 229.287 138.632 228.321 cv
138.632 227.355 137.847 226.57 136.88 226.57 cv
135.913 226.57 135.13 227.355 135.13 228.321 cv
135.13 229.287 135.913 230.072 136.88 230.072 cv
cp
f
130.944 228.778 mo
131.849 228.778 132.581 228.045 132.581 227.141 cv
132.581 226.235 131.849 225.502 130.944 225.502 cv
130.038 225.502 129.306 226.235 129.306 227.141 cv
129.306 228.045 130.038 228.778 130.944 228.778 cv
cp
f
125.083 227.312 mo
126.013 227.312 126.765 226.558 126.765 225.629 cv
126.765 224.699 126.013 223.945 125.083 223.945 cv
124.153 223.945 123.399 224.699 123.399 225.629 cv
123.399 226.558 124.153 227.312 125.083 227.312 cv
cp
f
119.313 225.429 mo
120.22 225.429 120.954 224.694 120.954 223.79 cv
120.954 222.885 120.22 222.152 119.313 222.152 cv
118.409 222.152 117.677 222.885 117.677 223.79 cv
117.677 224.694 118.409 225.429 119.313 225.429 cv
cp
f
113.659 223.27 mo
114.563 223.27 115.298 222.536 115.298 221.631 cv
115.298 220.727 114.563 219.993 113.659 219.993 cv
112.755 219.993 112.021 220.727 112.021 221.631 cv
112.021 222.536 112.755 223.27 113.659 223.27 cv
cp
f
108.134 220.909 mo
109.101 220.909 109.884 220.126 109.884 219.158 cv
109.884 218.191 109.101 217.408 108.134 217.408 cv
107.167 217.408 106.384 218.191 106.384 219.158 cv
106.384 220.126 107.167 220.909 108.134 220.909 cv
cp
f
102.757 218.131 mo
103.722 218.131 104.505 217.348 104.505 216.381 cv
104.505 215.414 103.722 214.631 102.757 214.631 cv
101.79 214.631 101.007 215.414 101.007 216.381 cv
101.007 217.348 101.79 218.131 102.757 218.131 cv
cp
f
97.542 215.189 mo
98.585 215.189 99.4268 214.346 99.4268 213.305 cv
99.4268 212.264 98.585 211.42 97.542 211.42 cv
96.501 211.42 95.6572 212.264 95.6572 213.305 cv
95.6572 214.346 96.501 215.189 97.542 215.189 cv
cp
f
92.5088 211.603 mo
93.4268 211.603 94.1689 210.859 94.1689 209.941 cv
94.1689 209.025 93.4268 208.281 92.5088 208.281 cv
91.5928 208.281 90.8486 209.025 90.8486 209.941 cv
90.8486 210.859 91.5928 211.603 92.5088 211.603 cv
cp
f
87.6729 208.053 mo
88.6396 208.053 89.4229 207.269 89.4229 206.303 cv
89.4229 205.335 88.6396 204.552 87.6729 204.552 cv
86.7061 204.552 85.9209 205.335 85.9209 206.303 cv
85.9209 207.269 86.7061 208.053 87.6729 208.053 cv
cp
f
83.0479 204.26 mo
84.0771 204.26 84.9111 203.425 84.9111 202.396 cv
84.9111 201.367 84.0771 200.533 83.0479 200.533 cv
82.0186 200.533 81.1846 201.367 81.1846 202.396 cv
81.1846 203.425 82.0186 204.26 83.0479 204.26 cv
cp
f
78.6494 200.168 mo
79.7139 200.168 80.5791 199.305 80.5791 198.238 cv
80.5791 197.172 79.7139 196.309 78.6494 196.309 cv
77.583 196.309 76.7178 197.172 76.7178 198.238 cv
76.7178 199.305 77.583 200.168 78.6494 200.168 cv
cp
f
74.4893 195.702 mo
75.5205 195.702 76.3525 194.867 76.3525 193.839 cv
76.3525 192.811 75.5205 191.977 74.4893 191.977 cv
73.4619 191.977 72.6279 192.811 72.6279 193.839 cv
72.6279 194.867 73.4619 195.702 74.4893 195.702 cv
cp
f
70.585 190.808 mo
71.4639 190.808 72.1787 190.095 72.1787 189.215 cv
72.1787 188.334 71.4639 187.621 70.585 187.621 cv
69.7041 187.621 68.9912 188.334 68.9912 189.215 cv
68.9912 190.095 69.7041 190.808 70.585 190.808 cv
cp
f
66.9443 185.972 mo
67.8252 185.972 68.5381 185.258 68.5381 184.377 cv
68.5381 183.498 67.8252 182.784 66.9443 182.784 cv
66.0654 182.784 65.3506 183.498 65.3506 184.377 cv
65.3506 185.258 66.0654 185.972 66.9443 185.972 cv
cp
f
63.583 180.916 mo
64.4502 180.916 65.1533 180.213 65.1533 179.344 cv
65.1533 178.477 64.4502 177.773 63.583 177.773 cv
62.7139 177.773 62.0107 178.477 62.0107 179.344 cv
62.0107 180.213 62.7139 180.916 63.583 180.916 cv
cp
f
60.5049 175.275 mo
61.1377 175.275 61.6514 174.764 61.6514 174.131 cv
61.6514 173.498 61.1377 172.986 60.5049 172.986 cv
59.874 172.986 59.3623 173.498 59.3623 174.131 cv
59.3623 174.764 59.874 175.275 60.5049 175.275 cv
cp
f
57.7275 169.986 mo
58.4092 169.986 58.9639 169.435 58.9639 168.753 cv
58.9639 168.071 58.4092 167.519 57.7275 167.519 cv
57.0459 167.519 56.4932 168.071 56.4932 168.753 cv
56.4932 169.435 57.0459 169.986 57.7275 169.986 cv
cp
f
55.2549 164.462 mo
55.9365 164.462 56.4893 163.909 56.4893 163.228 cv
56.4893 162.546 55.9365 161.992 55.2549 161.992 cv
54.5732 161.992 54.0205 162.546 54.0205 163.228 cv
54.0205 163.909 54.5732 164.462 55.2549 164.462 cv
cp
f
53.0967 158.561 mo
53.6416 158.561 54.085 158.117 54.085 157.572 cv
54.085 157.026 53.6416 156.584 53.0967 156.584 cv
52.5518 156.584 52.1104 157.026 52.1104 157.572 cv
52.1104 158.117 52.5518 158.561 53.0967 158.561 cv
cp
f
51.2588 152.883 mo
51.8525 152.883 52.3369 152.4 52.3369 151.805 cv
52.3369 151.21 51.8525 150.727 51.2588 150.727 cv
50.6631 150.727 50.1826 151.21 50.1826 151.805 cv
50.1826 152.4 50.6631 152.883 51.2588 152.883 cv
cp
f
49.7471 146.729 mo
50.1807 146.729 50.5322 146.377 50.5322 145.943 cv
50.5322 145.51 50.1807 145.158 49.7471 145.158 cv
49.3135 145.158 48.96 145.51 48.96 145.943 cv
48.96 146.377 49.3135 146.729 49.7471 146.729 cv
cp
f
48.5654 140.725 mo
48.9619 140.725 49.2842 140.402 49.2842 140.006 cv
49.2842 139.609 48.9619 139.289 48.5654 139.289 cv
48.1689 139.289 47.8467 139.609 47.8467 140.006 cv
47.8467 140.402 48.1689 140.725 48.5654 140.725 cv
cp
f
47.7197 134.754 mo
48.1279 134.754 48.46 134.422 48.46 134.012 cv
48.46 133.604 48.1279 133.271 47.7197 133.271 cv
47.3096 133.271 46.9775 133.604 46.9775 134.012 cv
46.9775 134.422 47.3096 134.754 47.7197 134.754 cv
cp
f
47.2119 128.699 mo
47.6084 128.699 47.9287 128.377 47.9287 127.98 cv
47.9287 127.584 47.6084 127.262 47.2119 127.262 cv
46.8135 127.262 46.4932 127.584 46.4932 127.98 cv
46.4932 128.377 46.8135 128.699 47.2119 128.699 cv
cp
f
47.04 122.67 mo
47.4502 122.67 47.7822 122.339 47.7822 121.93 cv
47.7822 121.521 47.4502 121.189 47.04 121.189 cv
46.6318 121.189 46.2998 121.521 46.2998 121.93 cv
46.2998 122.339 46.6318 122.67 47.04 122.67 cv
cp
f
47.2119 116.439 mo
47.5205 116.439 47.7725 116.189 47.7725 115.879 cv
47.7725 115.568 47.5205 115.316 47.2119 115.316 cv
46.9014 115.316 46.6494 115.568 46.6494 115.879 cv
46.6494 116.189 46.9014 116.439 47.2119 116.439 cv
cp
f
47.7197 110.408 mo
48.0303 110.408 48.2803 110.156 48.2803 109.847 cv
48.2803 109.537 48.0303 109.286 47.7197 109.286 cv
47.4092 109.286 47.1592 109.537 47.1592 109.847 cv
47.1592 110.156 47.4092 110.408 47.7197 110.408 cv
cp
f
48.5654 104.414 mo
48.876 104.414 49.126 104.163 49.126 103.854 cv
49.126 103.543 48.876 103.293 48.5654 103.293 cv
48.2568 103.293 48.0049 103.543 48.0049 103.854 cv
48.0049 104.163 48.2568 104.414 48.5654 104.414 cv
cp
f
49.7471 98.3203 mo
49.9697 98.3203 50.1514 98.1387 50.1514 97.916 cv
50.1514 97.6934 49.9697 97.5117 49.7471 97.5117 cv
49.5225 97.5117 49.3428 97.6934 49.3428 97.916 cv
49.3428 98.1387 49.5225 98.3203 49.7471 98.3203 cv
cp
f
51.2588 92.5488 mo
51.5303 92.5488 51.7529 92.3281 51.7529 92.0547 cv
51.7529 91.7813 51.5303 91.5605 51.2588 91.5605 cv
50.9854 91.5605 50.7646 91.7813 50.7646 92.0547 cv
50.7646 92.3281 50.9854 92.5488 51.2588 92.5488 cv
cp
f
53.0967 86.5781 mo
53.2568 86.5781 53.3877 86.4482 53.3877 86.2871 cv
53.3877 86.126 53.2568 85.9951 53.0967 85.9951 cv
52.9346 85.9951 52.8057 86.126 52.8057 86.2871 cv
52.8057 86.4482 52.9346 86.5781 53.0967 86.5781 cv
cp
f
55.2549 80.8555 mo
55.3799 80.8555 55.4795 80.7559 55.4795 80.6318 cv
55.4795 80.5078 55.3799 80.4082 55.2549 80.4082 cv
55.1318 80.4082 55.0322 80.5078 55.0322 80.6318 cv
55.0322 80.7559 55.1318 80.8555 55.2549 80.8555 cv
cp
f
57.7275 75.3984 mo
57.8896 75.3984 58.0205 75.2676 58.0205 75.1074 cv
58.0205 74.9453 57.8896 74.8145 57.7275 74.8145 cv
57.5674 74.8145 57.4365 74.9453 57.4365 75.1074 cv
57.4365 75.2676 57.5674 75.3984 57.7275 75.3984 cv
cp
f
60.5049 70.0205 mo
60.667 70.0205 60.7979 69.8896 60.7979 69.7285 cv
60.7979 69.5664 60.667 69.4365 60.5049 69.4365 cv
60.3447 69.4365 60.2139 69.5664 60.2139 69.7285 cv
60.2139 69.8896 60.3447 70.0205 60.5049 70.0205 cv
cp
f
63.583 64.6045 mo
63.6729 64.5146 li
63.583 64.4258 li
63.4912 64.5146 li
63.583 64.6045 li
cp
f
66.9443 59.5039 mo
66.9678 59.4824 li
66.9443 59.459 li
66.9229 59.4824 li
66.9443 59.5039 li
cp
f
267.069 146.191 mo
267.194 146.191 267.296 146.09 267.296 145.967 cv
267.296 145.842 267.194 145.742 267.069 145.742 cv
266.946 145.742 266.847 145.842 266.847 145.967 cv
266.847 146.09 266.946 146.191 267.069 146.191 cv
cp
f
265.646 152.052 mo
265.757 152.052 265.847 151.961 265.847 151.85 cv
265.847 151.738 265.757 151.647 265.646 151.647 cv
265.534 151.647 265.444 151.738 265.444 151.85 cv
265.444 151.961 265.534 152.052 265.646 152.052 cv
cp
f
263.913 157.784 mo
264.046 157.65 li
263.913 157.515 li
263.778 157.65 li
263.913 157.784 li
cp
f
261.876 163.484 mo
262.011 163.35 li
261.876 163.216 li
261.739 163.35 li
261.876 163.484 li
cp
f
259.54 169.721 mo
259.974 169.721 260.325 169.369 260.325 168.936 cv
260.325 168.501 259.974 168.148 259.54 168.148 cv
259.106 168.148 258.755 168.501 258.755 168.936 cv
258.755 169.369 259.106 169.721 259.54 169.721 cv
cp
f
256.913 175.646 mo
257.608 175.646 258.171 175.083 258.171 174.389 cv
258.171 173.695 257.608 173.132 256.913 173.132 cv
256.22 173.132 255.657 173.695 255.657 174.389 cv
255.657 175.083 256.22 175.646 256.913 175.646 cv
cp
f
254.003 180.729 mo
254.573 180.729 255.036 180.268 255.036 179.697 cv
255.036 179.126 254.573 178.664 254.003 178.664 cv
253.433 178.664 252.972 179.126 252.972 179.697 cv
252.972 180.268 253.433 180.729 254.003 180.729 cv
cp
f
250.815 185.876 mo
251.388 185.876 251.849 185.414 251.849 184.844 cv
251.849 184.273 251.388 183.812 250.815 183.812 cv
250.247 183.812 249.784 184.273 249.784 184.844 cv
249.784 185.414 250.247 185.876 250.815 185.876 cv
cp
f
247.362 190.398 mo
247.685 190.398 247.946 190.137 247.946 189.814 cv
247.946 189.492 247.685 189.23 247.362 189.23 cv
247.04 189.23 246.78 189.492 246.78 189.814 cv
246.78 190.137 247.04 190.398 247.362 190.398 cv
cp
f
243.651 195.494 mo
244.147 195.494 244.55 195.093 244.55 194.597 cv
244.55 194.101 244.147 193.699 243.651 193.699 cv
243.155 193.699 242.753 194.101 242.753 194.597 cv
242.753 195.093 243.155 195.494 243.651 195.494 cv
cp
f
239.692 200.074 mo
240.188 200.074 240.591 199.672 240.591 199.176 cv
240.591 198.681 240.188 198.279 239.692 198.279 cv
239.196 198.279 238.794 198.681 238.794 199.176 cv
238.794 199.672 239.196 200.074 239.692 200.074 cv
cp
f
235.499 204.438 mo
235.995 204.438 236.396 204.037 236.396 203.541 cv
236.396 203.045 235.995 202.643 235.499 202.643 cv
235.001 202.643 234.601 203.045 234.601 203.541 cv
234.601 204.037 235.001 204.438 235.499 204.438 cv
cp
f
231.077 208.801 mo
231.698 208.801 232.2 208.297 232.2 207.678 cv
232.2 207.058 231.698 206.555 231.077 206.555 cv
230.458 206.555 229.956 207.058 229.956 207.678 cv
229.956 208.297 230.458 208.801 231.077 208.801 cv
cp
f
226.446 213.034 mo
227.253 213.034 227.905 212.381 227.905 211.575 cv
227.905 210.77 227.253 210.116 226.446 210.116 cv
225.642 210.116 224.987 210.77 224.987 211.575 cv
224.987 212.381 225.642 213.034 226.446 213.034 cv
cp
f
221.616 216.682 mo
222.423 216.682 223.075 216.029 223.075 215.223 cv
223.075 214.417 222.423 213.764 221.616 213.764 cv
220.812 213.764 220.157 214.417 220.157 215.223 cv
220.157 216.029 220.812 216.682 221.616 216.682 cv
cp
f
216.601 220.25 mo
217.505 220.25 218.239 219.516 218.239 218.611 cv
218.239 217.706 217.505 216.973 216.601 216.973 cv
215.694 216.973 214.962 217.706 214.962 218.611 cv
214.962 219.516 215.694 220.25 216.601 220.25 cv
cp
f
211.411 223.391 mo
212.329 223.391 213.073 222.647 213.073 221.729 cv
213.073 220.813 212.329 220.068 211.411 220.068 cv
210.493 220.068 209.751 220.813 209.751 221.729 cv
209.751 222.647 210.493 223.391 211.411 223.391 cv
cp
f
206.065 226.344 mo
207.046 226.344 207.839 225.549 207.839 224.57 cv
207.839 223.591 207.046 222.797 206.065 222.797 cv
205.087 222.797 204.294 223.591 204.294 224.57 cv
204.294 225.549 205.087 226.344 206.065 226.344 cv
cp
f
200.577 228.896 mo
201.558 228.896 202.351 228.104 202.351 227.124 cv
202.351 226.145 201.558 225.352 200.577 225.352 cv
199.599 225.352 198.806 226.145 198.806 227.124 cv
198.806 228.104 199.599 228.896 200.577 228.896 cv
cp
f
194.962 231.181 mo
195.954 231.181 196.757 230.377 196.757 229.385 cv
196.757 228.394 195.954 227.59 194.962 227.59 cv
193.972 227.59 193.167 228.394 193.167 229.385 cv
193.167 230.377 193.972 231.181 194.962 231.181 cv
cp
f
189.235 233.367 mo
190.353 233.367 191.257 232.463 191.257 231.348 cv
191.257 230.231 190.353 229.327 189.235 229.327 cv
188.12 229.327 187.216 230.231 187.216 231.348 cv
187.216 232.463 188.12 233.367 189.235 233.367 cv
cp
f
183.413 234.911 mo
184.468 234.911 185.321 234.057 185.321 233.004 cv
185.321 231.949 184.468 231.096 183.413 231.096 cv
182.36 231.096 181.505 231.949 181.505 233.004 cv
181.505 234.057 182.36 234.911 183.413 234.911 cv
cp
f
177.511 236.146 mo
178.503 236.146 179.308 235.342 179.308 234.351 cv
179.308 233.359 178.503 232.555 177.511 232.555 cv
176.521 232.555 175.718 233.359 175.718 234.351 cv
175.718 235.342 176.521 236.146 177.511 236.146 cv
cp
f
171.548 236.955 mo
172.415 236.955 173.118 236.252 173.118 235.384 cv
173.118 234.517 172.415 233.813 171.548 233.813 cv
170.679 233.813 169.976 234.517 169.976 235.384 cv
169.976 236.252 170.679 236.955 171.548 236.955 cv
cp
f
165.538 237.875 mo
166.517 237.875 167.31 237.081 167.31 236.102 cv
167.31 235.123 166.517 234.329 165.538 234.329 cv
164.558 234.329 163.763 235.123 163.763 236.102 cv
163.763 237.081 164.558 237.875 165.538 237.875 cv
cp
f
159.495 238.342 mo
160.513 238.342 161.337 237.518 161.337 236.501 cv
161.337 235.484 160.513 234.66 159.495 234.66 cv
158.479 234.66 157.655 235.484 157.655 236.501 cv
157.655 237.518 158.479 238.342 159.495 238.342 cv
cp
f
153.444 238.422 mo
154.46 238.422 155.284 237.597 155.284 236.581 cv
155.284 235.564 154.46 234.74 153.444 234.74 cv
152.427 234.74 151.603 235.564 151.603 236.581 cv
151.603 237.597 152.427 238.422 153.444 238.422 cv
cp
f
147.396 238.294 mo
148.474 238.294 149.347 237.42 149.347 236.341 cv
149.347 235.263 148.474 234.389 147.396 234.389 cv
146.317 234.389 145.442 235.263 145.442 236.341 cv
145.442 237.42 146.317 238.294 147.396 238.294 cv
cp
f
141.368 237.488 mo
142.31 237.488 143.073 236.725 143.073 235.782 cv
143.073 234.84 142.31 234.076 141.368 234.076 cv
140.427 234.076 139.661 234.84 139.661 235.782 cv
139.661 236.725 140.427 237.488 141.368 237.488 cv
cp
f
135.378 236.59 mo
136.308 236.59 137.062 235.836 137.062 234.906 cv
137.062 233.977 136.308 233.223 135.378 233.223 cv
134.448 233.223 133.694 233.977 133.694 234.906 cv
133.694 235.836 134.448 236.59 135.378 236.59 cv
cp
f
129.442 235.579 mo
130.472 235.579 131.306 234.745 131.306 233.717 cv
131.306 232.688 130.472 231.854 129.442 231.854 cv
128.413 231.854 127.581 232.688 127.581 233.717 cv
127.581 234.745 128.413 235.579 129.442 235.579 cv
cp
f
123.579 234.301 mo
124.731 234.301 125.667 233.367 125.667 232.213 cv
125.667 231.061 124.731 230.127 123.579 230.127 cv
122.425 230.127 121.491 231.061 121.491 232.213 cv
121.491 233.367 122.425 234.301 123.579 234.301 cv
cp
f
117.802 232.356 mo
118.88 232.356 119.755 231.482 119.755 230.404 cv
119.755 229.326 118.88 228.451 117.802 228.451 cv
116.724 228.451 115.851 229.326 115.851 230.404 cv
115.851 231.482 116.724 232.356 117.802 232.356 cv
cp
f
112.128 230.199 mo
113.183 230.199 114.036 229.346 114.036 228.292 cv
114.036 227.238 113.183 226.385 112.128 226.385 cv
111.075 226.385 110.222 227.238 110.222 228.292 cv
110.222 229.346 111.075 230.199 112.128 230.199 cv
cp
f
106.575 227.791 mo
107.63 227.791 108.483 226.938 108.483 225.883 cv
108.483 224.83 107.63 223.976 106.575 223.976 cv
105.522 223.976 104.667 224.83 104.667 225.883 cv
104.667 226.938 105.522 227.791 106.575 227.791 cv
cp
f
101.157 225.049 mo
102.187 225.049 103.021 224.214 103.021 223.186 cv
103.021 222.156 102.187 221.322 101.157 221.322 cv
100.128 221.322 99.2939 222.156 99.2939 223.186 cv
99.2939 224.214 100.128 225.049 101.157 225.049 cv
cp
f
95.8877 222.359 mo
97.0791 222.359 98.042 221.395 98.042 220.205 cv
98.042 219.015 97.0791 218.05 95.8877 218.05 cv
94.6982 218.05 93.7334 219.015 93.7334 220.205 cv
93.7334 221.395 94.6982 222.359 95.8877 222.359 cv
cp
f
90.7842 218.971 mo
91.8994 218.971 92.8037 218.066 92.8037 216.95 cv
92.8037 215.834 91.8994 214.93 90.7842 214.93 cv
89.667 214.93 88.7646 215.834 88.7646 216.95 cv
88.7646 218.066 89.667 218.971 90.7842 218.971 cv
cp
f
85.8584 215.451 mo
86.9736 215.451 87.8779 214.547 87.8779 213.432 cv
87.8779 212.315 86.9736 211.412 85.8584 211.412 cv
84.7432 211.412 83.8389 212.315 83.8389 213.432 cv
83.8389 214.547 84.7432 215.451 85.8584 215.451 cv
cp
f
81.126 211.475 mo
82.1299 211.475 82.9443 210.661 82.9443 209.657 cv
82.9443 208.652 82.1299 207.84 81.126 207.84 cv
80.1221 207.84 79.3076 208.652 79.3076 209.657 cv
79.3076 210.661 80.1221 211.475 81.126 211.475 cv
cp
f
76.5986 207.568 mo
77.665 207.568 78.5283 206.704 78.5283 205.639 cv
78.5283 204.572 77.665 203.708 76.5986 203.708 cv
75.5322 203.708 74.6689 204.572 74.6689 205.639 cv
74.6689 206.704 75.5322 207.568 76.5986 207.568 cv
cp
f
72.29 203.316 mo
73.3564 203.316 74.2197 202.453 74.2197 201.387 cv
74.2197 200.32 73.3564 199.456 72.29 199.456 cv
71.2256 199.456 70.3604 200.32 70.3604 201.387 cv
70.3604 202.453 71.2256 203.316 72.29 203.316 cv
cp
f
68.2119 198.641 mo
69.167 198.641 69.9404 197.867 69.9404 196.913 cv
69.9404 195.958 69.167 195.186 68.2119 195.186 cv
67.2568 195.186 66.4834 195.958 66.4834 196.913 cv
66.4834 197.867 67.2568 198.641 68.2119 198.641 cv
cp
f
64.376 194.138 mo
65.4287 194.138 66.2842 193.284 66.2842 192.23 cv
66.2842 191.177 65.4287 190.322 64.376 190.322 cv
63.3213 190.322 62.4678 191.177 62.4678 192.23 cv
62.4678 193.284 63.3213 194.138 64.376 194.138 cv
cp
f
60.792 189.012 mo
61.71 189.012 62.4521 188.27 62.4521 187.352 cv
62.4521 186.436 61.71 185.691 60.792 185.691 cv
59.874 185.691 59.1318 186.436 59.1318 187.352 cv
59.1318 188.27 59.874 189.012 60.792 189.012 cv
cp
f
57.4697 183.75 mo
58.2764 183.75 58.9287 183.096 58.9287 182.291 cv
58.9287 181.484 58.2764 180.832 57.4697 180.832 cv
56.665 180.832 56.0127 181.484 56.0127 182.291 cv
56.0127 183.096 56.665 183.75 57.4697 183.75 cv
cp
f
54.4209 178.521 mo
55.2256 178.521 55.8799 177.867 55.8799 177.063 cv
55.8799 176.256 55.2256 175.604 54.4209 175.604 cv
53.6143 175.604 52.9619 176.256 52.9619 177.063 cv
52.9619 177.867 53.6143 178.521 54.4209 178.521 cv
cp
f
51.6514 172.711 mo
52.2197 172.711 52.6826 172.25 52.6826 171.68 cv
52.6826 171.109 52.2197 170.646 51.6514 170.646 cv
51.0811 170.646 50.6182 171.109 50.6182 171.68 cv
50.6182 172.25 51.0811 172.711 51.6514 172.711 cv
cp
f
49.1689 167.279 mo
49.79 167.279 50.292 166.777 50.292 166.158 cv
50.292 165.539 49.79 165.035 49.1689 165.035 cv
48.5498 165.035 48.0479 165.539 48.0479 166.158 cv
48.0479 166.777 48.5498 167.279 49.1689 167.279 cv
cp
f
46.9834 161.365 mo
47.4541 161.365 47.835 160.984 47.835 160.514 cv
47.835 160.041 47.4541 159.66 46.9834 159.66 cv
46.5127 159.66 46.1299 160.041 46.1299 160.514 cv
46.1299 160.984 46.5127 161.365 46.9834 161.365 cv
cp
f
45.0967 155.457 mo
45.4814 155.457 45.792 155.146 45.792 154.761 cv
45.792 154.377 45.4814 154.066 45.0967 154.066 cv
44.7119 154.066 44.4014 154.377 44.4014 154.761 cv
44.4014 155.146 44.7119 155.457 45.0967 155.457 cv
cp
f
43.5186 149.479 mo
43.8271 149.479 44.0771 149.228 44.0771 148.918 cv
44.0771 148.607 43.8271 148.355 43.5186 148.355 cv
43.2061 148.355 42.9561 148.607 42.9561 148.918 cv
42.9561 149.228 43.2061 149.479 43.5186 149.479 cv
cp
f
42.2471 143.56 mo
42.5576 143.56 42.8096 143.309 42.8096 142.999 cv
42.8096 142.688 42.5576 142.438 42.2471 142.438 cv
41.9385 142.438 41.6865 142.688 41.6865 142.999 cv
41.6865 143.309 41.9385 143.56 42.2471 143.56 cv
cp
f
41.2939 137.807 mo
41.7275 137.807 42.0791 137.455 42.0791 137.021 cv
42.0791 136.586 41.7275 136.235 41.2939 136.235 cv
40.8604 136.235 40.5068 136.586 40.5068 137.021 cv
40.5068 137.455 40.8604 137.807 41.2939 137.807 cv
cp
f
40.6553 131.63 mo
41.0029 131.63 41.2842 131.348 41.2842 131.001 cv
41.2842 130.654 41.0029 130.373 40.6553 130.373 cv
40.3076 130.373 40.0264 130.654 40.0264 131.001 cv
40.0264 131.348 40.3076 131.63 40.6553 131.63 cv
cp
f
40.335 125.518 mo
40.6455 125.518 40.8975 125.267 40.8975 124.956 cv
40.8975 124.646 40.6455 124.396 40.335 124.396 cv
40.0264 124.396 39.7744 124.646 39.7744 124.956 cv
39.7744 125.267 40.0264 125.518 40.335 125.518 cv
cp
f
40.335 119.486 mo
40.6572 119.486 40.9189 119.226 40.9189 118.902 cv
40.9189 118.58 40.6572 118.32 40.335 118.32 cv
40.0127 118.32 39.7529 118.58 39.7529 118.902 cv
39.7529 119.226 40.0127 119.486 40.335 119.486 cv
cp
f
40.6553 113.352 mo
40.9287 113.352 41.1494 113.131 41.1494 112.858 cv
41.1494 112.586 40.9287 112.363 40.6553 112.363 cv
40.3838 112.363 40.1611 112.586 40.1611 112.858 cv
40.1611 113.131 40.3838 113.352 40.6553 113.352 cv
cp
f
41.2939 107.488 mo
41.6533 107.488 41.9443 107.197 41.9443 106.838 cv
41.9443 106.479 41.6533 106.188 41.2939 106.188 cv
40.9346 106.188 40.6436 106.479 40.6436 106.838 cv
40.6436 107.197 40.9346 107.488 41.2939 107.488 cv
cp
f
42.2471 101.377 mo
42.5342 101.377 42.7646 101.146 42.7646 100.861 cv
42.7646 100.575 42.5342 100.345 42.2471 100.345 cv
41.9639 100.345 41.7314 100.575 41.7314 100.861 cv
41.7314 101.146 41.9639 101.377 42.2471 101.377 cv
cp
f
43.5186 95.2783 mo
43.7021 95.2783 43.8525 95.1279 43.8525 94.9414 cv
43.8525 94.7559 43.7021 94.6055 43.5186 94.6055 cv
43.3311 94.6055 43.1807 94.7559 43.1807 94.9414 cv
43.1807 95.1279 43.3311 95.2783 43.5186 95.2783 cv
cp
f
45.0967 89.4346 mo
45.2842 89.4346 45.4346 89.2842 45.4346 89.0977 cv
45.4346 88.9121 45.2842 88.7617 45.0967 88.7617 cv
44.9111 88.7617 44.7607 88.9121 44.7607 89.0977 cv
44.7607 89.2842 44.9111 89.4346 45.0967 89.4346 cv
cp
f
46.9834 83.6826 mo
47.1689 83.6826 47.3193 83.5313 47.3193 83.3457 cv
47.3193 83.1602 47.1689 83.0098 46.9834 83.0098 cv
46.7979 83.0098 46.6455 83.1602 46.6455 83.3457 cv
46.6455 83.5313 46.7979 83.6826 46.9834 83.6826 cv
cp
f
49.1689 77.8594 mo
49.3271 77.7012 li
49.1689 77.5439 li
49.0127 77.7012 li
49.1689 77.8594 li
cp
f
266.829 169.223 mo
266.966 169.088 li
266.829 168.953 li
266.694 169.088 li
266.829 169.223 li
cp
f
264.341 174.764 mo
264.497 174.605 li
264.341 174.449 li
264.183 174.605 li
264.341 174.764 li
cp
f
261.579 180.082 mo
261.669 179.992 li
261.579 179.902 li
261.489 179.992 li
261.579 180.082 li
cp
f
258.552 185.886 mo
258.911 185.886 259.202 185.594 259.202 185.234 cv
259.202 184.875 258.911 184.584 258.552 184.584 cv
258.192 184.584 257.901 184.875 257.901 185.234 cv
257.901 185.594 258.192 185.886 258.552 185.886 cv
cp
f
255.267 190.59 mo
255.415 190.59 255.538 190.469 255.538 190.32 cv
255.538 190.172 255.415 190.051 255.267 190.051 cv
255.118 190.051 254.997 190.172 254.997 190.32 cv
254.997 190.469 255.118 190.59 255.267 190.59 cv
cp
f
251.733 196.402 mo
252.378 196.402 252.901 195.879 252.901 195.235 cv
252.901 194.59 252.378 194.068 251.733 194.068 cv
251.089 194.068 250.567 194.59 250.567 195.235 cv
250.567 195.879 251.089 196.402 251.733 196.402 cv
cp
f
247.96 200.91 mo
248.481 200.91 248.901 200.488 248.901 199.969 cv
248.901 199.447 248.481 199.025 247.96 199.025 cv
247.438 199.025 247.017 199.447 247.017 199.969 cv
247.017 200.488 247.438 200.91 247.96 200.91 cv
cp
f
243.954 205.741 mo
244.636 205.741 245.188 205.188 245.188 204.506 cv
245.188 203.824 244.636 203.272 243.954 203.272 cv
243.272 203.272 242.72 203.824 242.72 204.506 cv
242.72 205.188 243.272 205.741 243.954 205.741 cv
cp
f
239.728 210.098 mo
240.421 210.098 240.985 209.534 240.985 208.84 cv
240.985 208.146 240.421 207.584 239.728 207.584 cv
239.032 207.584 238.47 208.146 238.47 208.84 cv
238.47 209.534 239.032 210.098 239.728 210.098 cv
cp
f
235.29 214.416 mo
236.095 214.416 236.749 213.763 236.749 212.957 cv
236.749 212.151 236.095 211.499 235.29 211.499 cv
234.483 211.499 233.831 212.151 233.831 212.957 cv
233.831 213.763 234.483 214.416 235.29 214.416 cv
cp
f
230.653 218.105 mo
231.347 218.105 231.909 217.543 231.909 216.849 cv
231.909 216.154 231.347 215.592 230.653 215.592 cv
229.958 215.592 229.396 216.154 229.396 216.849 cv
229.396 217.543 229.958 218.105 230.653 218.105 cv
cp
f
225.827 222.344 mo
226.843 222.344 227.667 221.52 227.667 220.503 cv
227.667 219.487 226.843 218.664 225.827 218.664 cv
224.812 218.664 223.985 219.487 223.985 220.503 cv
223.985 221.52 224.812 222.344 225.827 222.344 cv
cp
f
220.825 225.463 mo
221.681 225.463 222.374 224.77 222.374 223.914 cv
222.374 223.059 221.681 222.365 220.825 222.365 cv
219.97 222.365 219.278 223.059 219.278 223.914 cv
219.278 224.77 219.97 225.463 220.825 225.463 cv
cp
f
215.659 228.865 mo
216.651 228.865 217.456 228.062 217.456 227.07 cv
217.456 226.079 216.651 225.275 215.659 225.275 cv
214.669 225.275 213.864 226.079 213.864 227.07 cv
213.864 228.062 214.669 228.865 215.659 228.865 cv
cp
f
210.343 231.717 mo
211.312 231.717 212.095 230.932 212.095 229.965 cv
212.095 228.998 211.312 228.215 210.343 228.215 cv
209.376 228.215 208.593 228.998 208.593 229.965 cv
208.593 230.932 209.376 231.717 210.343 231.717 cv
cp
f
204.89 234.387 mo
205.882 234.387 206.685 233.584 206.685 232.592 cv
206.685 231.6 205.882 230.796 204.89 230.796 cv
203.897 230.796 203.095 231.6 203.095 232.592 cv
203.095 233.584 203.897 234.387 204.89 234.387 cv
cp
f
199.312 236.873 mo
200.378 236.873 201.241 236.01 201.241 234.943 cv
201.241 233.877 200.378 233.014 199.312 233.014 cv
198.245 233.014 197.382 233.877 197.382 234.943 cv
197.382 236.01 198.245 236.873 199.312 236.873 cv
cp
f
193.624 239.033 mo
194.739 239.033 195.644 238.129 195.644 237.014 cv
195.644 235.898 194.739 234.994 193.624 234.994 cv
192.507 234.994 191.603 235.898 191.603 237.014 cv
191.603 238.129 192.507 239.033 193.624 239.033 cv
cp
f
187.839 240.93 mo
189.017 240.93 189.972 239.976 189.972 238.798 cv
189.972 237.62 189.017 236.666 187.839 236.666 cv
186.661 236.666 185.706 237.62 185.706 238.798 cv
185.706 239.976 186.661 240.93 187.839 240.93 cv
cp
f
181.972 242.446 mo
183.163 242.446 184.128 241.482 184.128 240.292 cv
184.128 239.102 183.163 238.137 181.972 238.137 cv
180.782 238.137 179.817 239.102 179.817 240.292 cv
179.817 241.482 180.782 242.446 181.972 242.446 cv
cp
f
176.04 243.443 mo
177.118 243.443 177.991 242.57 177.991 241.49 cv
177.991 240.412 177.118 239.539 176.04 239.539 cv
174.962 239.539 174.087 240.412 174.087 241.49 cv
174.087 242.57 174.962 243.443 176.04 243.443 cv
cp
f
170.054 244.368 mo
171.144 244.368 172.028 243.484 172.028 242.393 cv
172.028 241.303 171.144 240.418 170.054 240.418 cv
168.962 240.418 168.079 241.303 168.079 242.393 cv
168.079 243.484 168.962 244.368 170.054 244.368 cv
cp
f
164.03 245.016 mo
165.146 245.016 166.05 244.111 166.05 242.996 cv
166.05 241.881 165.146 240.976 164.03 240.976 cv
162.915 240.976 162.011 241.881 162.011 242.996 cv
162.011 244.111 162.915 245.016 164.03 245.016 cv
cp
f
157.983 245.228 mo
159.05 245.228 159.913 244.363 159.913 243.298 cv
159.913 242.232 159.05 241.368 157.983 241.368 cv
156.917 241.368 156.054 242.232 156.054 243.298 cv
156.054 244.363 156.917 245.228 157.983 245.228 cv
cp
f
151.931 245.43 mo
153.108 245.43 154.062 244.476 154.062 243.298 cv
154.062 242.12 153.108 241.166 151.931 241.166 cv
150.753 241.166 149.798 242.12 149.798 243.298 cv
149.798 244.476 150.753 245.43 151.931 245.43 cv
cp
f
145.884 244.971 mo
146.976 244.971 147.858 244.087 147.858 242.996 cv
147.858 241.904 146.976 241.021 145.884 241.021 cv
144.794 241.021 143.909 241.904 143.909 242.996 cv
143.909 244.087 144.794 244.971 145.884 244.971 cv
cp
f
139.862 244.368 mo
140.952 244.368 141.837 243.484 141.837 242.393 cv
141.837 241.303 140.952 240.418 139.862 240.418 cv
138.771 240.418 137.886 241.303 137.886 242.393 cv
137.886 243.484 138.771 244.368 139.862 244.368 cv
cp
f
133.874 243.422 mo
134.94 243.422 135.806 242.557 135.806 241.49 cv
135.806 240.425 134.94 239.561 133.874 239.561 cv
132.81 239.561 131.944 240.425 131.944 241.49 cv
131.944 242.557 132.81 243.422 133.874 243.422 cv
cp
f
127.942 242.379 mo
129.095 242.379 130.028 241.445 130.028 240.292 cv
130.028 239.139 129.095 238.203 127.942 238.203 cv
126.79 238.203 125.854 239.139 125.854 240.292 cv
125.854 241.445 126.79 242.379 127.942 242.379 cv
cp
f
122.075 240.863 mo
123.216 240.863 124.14 239.938 124.14 238.798 cv
124.14 237.657 123.216 236.732 122.075 236.732 cv
120.935 236.732 120.011 237.657 120.011 238.798 cv
120.011 239.938 120.935 240.863 122.075 240.863 cv
cp
f
116.29 239.146 mo
117.468 239.146 118.423 238.191 118.423 237.014 cv
118.423 235.836 117.468 234.881 116.29 234.881 cv
115.114 234.881 114.159 235.836 114.159 237.014 cv
114.159 238.191 115.114 239.146 116.29 239.146 cv
cp
f
110.603 237.075 mo
111.78 237.075 112.733 236.121 112.733 234.943 cv
112.733 233.766 111.78 232.811 110.603 232.811 cv
109.425 232.811 108.47 233.766 108.47 234.943 cv
108.47 236.121 109.425 237.075 110.603 237.075 cv
cp
f
105.024 234.77 mo
106.228 234.77 107.202 233.794 107.202 232.592 cv
107.202 231.39 106.228 230.415 105.024 230.415 cv
103.821 230.415 102.847 231.39 102.847 232.592 cv
102.847 233.794 103.821 234.77 105.024 234.77 cv
cp
f
99.5713 232.03 mo
100.712 232.03 101.636 231.105 101.636 229.965 cv
101.636 228.824 100.712 227.9 99.5713 227.9 cv
98.4287 227.9 97.5068 228.824 97.5068 229.965 cv
97.5068 231.105 98.4287 232.03 99.5713 232.03 cv
cp
f
94.2549 229.248 mo
95.4561 229.248 96.4307 228.272 96.4307 227.07 cv
96.4307 225.867 95.4561 224.893 94.2549 224.893 cv
93.0518 224.893 92.0771 225.867 92.0771 227.07 cv
92.0771 228.272 93.0518 229.248 94.2549 229.248 cv
cp
f
89.0889 226.113 mo
90.3037 226.113 91.2881 225.128 91.2881 223.914 cv
91.2881 222.699 90.3037 221.714 89.0889 221.714 cv
87.874 221.714 86.8877 222.699 86.8877 223.914 cv
86.8877 225.128 87.874 226.113 89.0889 226.113 cv
cp
f
84.0869 222.568 mo
85.2275 222.568 86.1533 221.645 86.1533 220.503 cv
86.1533 219.363 85.2275 218.439 84.0869 218.439 cv
82.9463 218.439 82.0225 219.363 82.0225 220.503 cv
82.0225 221.645 82.9463 222.568 84.0869 222.568 cv
cp
f
79.2607 218.846 mo
80.3643 218.846 81.2588 217.952 81.2588 216.849 cv
81.2588 215.746 80.3643 214.851 79.2607 214.851 cv
78.1592 214.851 77.2646 215.746 77.2646 216.849 cv
77.2646 217.952 78.1592 218.846 79.2607 218.846 cv
cp
f
74.624 215.021 mo
75.7646 215.021 76.6904 214.098 76.6904 212.957 cv
76.6904 211.816 75.7646 210.893 74.624 210.893 cv
73.4834 210.893 72.5596 211.816 72.5596 212.957 cv
72.5596 214.098 73.4834 215.021 74.624 215.021 cv
cp
f
70.1865 210.748 mo
71.2412 210.748 72.0947 209.894 72.0947 208.84 cv
72.0947 207.786 71.2412 206.933 70.1865 206.933 cv
69.1338 206.933 68.2803 207.786 68.2803 208.84 cv
68.2803 209.894 69.1338 210.748 70.1865 210.748 cv
cp
f
65.96 206.414 mo
67.0127 206.414 67.8682 205.561 67.8682 204.506 cv
67.8682 203.453 67.0127 202.6 65.96 202.6 cv
64.9072 202.6 64.0537 203.453 64.0537 204.506 cv
64.0537 205.561 64.9072 206.414 65.96 206.414 cv
cp
f
61.9561 201.988 mo
63.0713 201.988 63.9756 201.084 63.9756 199.969 cv
63.9756 198.852 63.0713 197.948 61.9561 197.948 cv
60.8389 197.948 59.9346 198.852 59.9346 199.969 cv
59.9346 201.084 60.8389 201.988 61.9561 201.988 cv
cp
f
58.1807 197.322 mo
59.333 197.322 60.2686 196.389 60.2686 195.235 cv
60.2686 194.082 59.333 193.147 58.1807 193.147 cv
57.0264 193.147 56.0928 194.082 56.0928 195.235 cv
56.0928 196.389 57.0264 197.322 58.1807 197.322 cv
cp
f
54.6475 192.408 mo
55.7998 192.408 56.7334 191.473 56.7334 190.32 cv
56.7334 189.168 55.7998 188.232 54.6475 188.232 cv
53.4951 188.232 52.5596 189.168 52.5596 190.32 cv
52.5596 191.473 53.4951 192.408 54.6475 192.408 cv
cp
f
51.3623 186.986 mo
52.3291 186.986 53.1143 186.202 53.1143 185.234 cv
53.1143 184.269 52.3291 183.484 51.3623 183.484 cv
50.3955 183.484 49.6123 184.269 49.6123 185.234 cv
49.6123 186.202 50.3955 186.986 51.3623 186.986 cv
cp
f
48.3369 181.676 mo
49.2646 181.676 50.0186 180.922 50.0186 179.993 cv
50.0186 179.063 49.2646 178.309 48.3369 178.309 cv
47.4053 178.309 46.6533 179.063 46.6533 179.993 cv
46.6533 180.922 47.4053 181.676 48.3369 181.676 cv
cp
f
45.5732 175.639 mo
46.1455 175.639 46.6064 175.176 46.6064 174.606 cv
46.6064 174.035 46.1455 173.572 45.5732 173.572 cv
45.0049 173.572 44.542 174.035 44.542 174.606 cv
44.542 175.176 45.0049 175.639 45.5732 175.639 cv
cp
f
43.085 169.964 mo
43.5674 169.964 43.96 169.572 43.96 169.088 cv
43.96 168.604 43.5674 168.213 43.085 168.213 cv
42.6006 168.213 42.21 168.604 42.21 169.088 cv
42.21 169.572 42.6006 169.964 43.085 169.964 cv
cp
f
40.874 164.328 mo
41.3564 164.328 41.749 163.938 41.749 163.453 cv
41.749 162.97 41.3564 162.578 40.874 162.578 cv
40.3896 162.578 39.999 162.97 39.999 163.453 cv
39.999 163.938 40.3896 164.328 40.874 164.328 cv
cp
f
38.9443 158.59 mo
39.4287 158.59 39.8213 158.199 39.8213 157.715 cv
39.8213 157.231 39.4287 156.84 38.9443 156.84 cv
38.4619 156.84 38.0693 157.231 38.0693 157.715 cv
38.0693 158.199 38.4619 158.59 38.9443 158.59 cv
cp
f
37.3057 152.674 mo
37.7393 152.674 38.0908 152.32 38.0908 151.888 cv
38.0908 151.454 37.7393 151.103 37.3057 151.103 cv
36.8721 151.103 36.5205 151.454 36.5205 151.888 cv
36.5205 152.32 36.8721 152.674 37.3057 152.674 cv
cp
f
35.958 146.682 mo
36.3428 146.682 36.6553 146.37 36.6553 145.986 cv
36.6553 145.602 36.3428 145.289 35.958 145.289 cv
35.5752 145.289 35.2627 145.602 35.2627 145.986 cv
35.2627 146.37 35.5752 146.682 35.958 146.682 cv
cp
f
34.9072 140.541 mo
35.1924 140.541 35.4229 140.31 35.4229 140.024 cv
35.4229 139.74 35.1924 139.508 34.9072 139.508 cv
34.624 139.508 34.3916 139.74 34.3916 140.024 cv
34.3916 140.31 34.624 140.541 34.9072 140.541 cv
cp
f
34.1553 134.578 mo
34.4639 134.578 34.7158 134.328 34.7158 134.018 cv
34.7158 133.708 34.4639 133.457 34.1553 133.457 cv
33.8447 133.457 33.5928 133.708 33.5928 134.018 cv
33.5928 134.328 33.8447 134.578 34.1553 134.578 cv
cp
f
33.7021 128.498 mo
33.9873 128.498 34.2178 128.267 34.2178 127.981 cv
34.2178 127.696 33.9873 127.465 33.7021 127.465 cv
33.417 127.465 33.1865 127.696 33.1865 127.981 cv
33.1865 128.267 33.417 128.498 33.7021 128.498 cv
cp
f
33.5518 122.424 mo
33.8232 122.424 34.0459 122.203 34.0459 121.93 cv
34.0459 121.657 33.8232 121.436 33.5518 121.436 cv
33.2803 121.436 33.0576 121.657 33.0576 121.93 cv
33.0576 122.203 33.2803 122.424 33.5518 122.424 cv
cp
f
33.7021 116.35 mo
33.9639 116.35 34.1748 116.139 34.1748 115.879 cv
34.1748 115.617 33.9639 115.407 33.7021 115.407 cv
33.4424 115.407 33.2314 115.617 33.2314 115.879 cv
33.2314 116.139 33.4424 116.35 33.7021 116.35 cv
cp
f
34.1553 110.313 mo
34.415 110.313 34.626 110.102 34.626 109.842 cv
34.626 109.581 34.415 109.371 34.1553 109.371 cv
33.8936 109.371 33.6826 109.581 33.6826 109.842 cv
33.6826 110.102 33.8936 110.313 34.1553 110.313 cv
cp
f
34.9072 104.24 mo
35.1299 104.24 35.3115 104.059 35.3115 103.836 cv
35.3115 103.612 35.1299 103.432 34.9072 103.432 cv
34.6846 103.432 34.5029 103.612 34.5029 103.836 cv
34.5029 104.059 34.6846 104.24 34.9072 104.24 cv
cp
f
35.958 98.0762 mo
36.0693 98.0762 36.1611 97.9854 36.1611 97.874 cv
36.1611 97.7627 36.0693 97.6719 35.958 97.6719 cv
35.8467 97.6719 35.7568 97.7627 35.7568 97.874 cv
35.7568 97.9854 35.8467 98.0762 35.958 98.0762 cv
cp
f
38.9443 86.168 mo
38.9678 86.1445 li
38.9443 86.123 li
38.9229 86.1445 li
38.9443 86.168 li
cp
f
266.19 185.59 mo
266.214 185.567 li
266.19 185.545 li
266.167 185.567 li
266.19 185.59 li
cp
f
259.69 196.047 mo
259.839 196.047 259.96 195.926 259.96 195.777 cv
259.96 195.629 259.839 195.509 259.69 195.509 cv
259.542 195.509 259.421 195.629 259.421 195.777 cv
259.421 195.926 259.542 196.047 259.69 196.047 cv
cp
f
256.087 200.799 mo
256.243 200.641 li
256.087 200.484 li
255.929 200.641 li
256.087 200.799 li
cp
f
252.257 205.732 mo
252.479 205.732 252.661 205.553 252.661 205.329 cv
252.661 205.105 252.479 204.926 252.257 204.926 cv
252.032 204.926 251.853 205.105 251.853 205.329 cv
251.853 205.553 252.032 205.732 252.257 205.732 cv
cp
f
248.208 210.234 mo
248.433 210.234 248.614 210.055 248.614 209.832 cv
248.614 209.607 248.433 209.428 248.208 209.428 cv
247.985 209.428 247.806 209.607 247.806 209.832 cv
247.806 210.055 247.985 210.234 248.208 210.234 cv
cp
f
243.954 214.945 mo
244.399 214.945 244.763 214.583 244.763 214.137 cv
244.763 213.69 244.399 213.329 243.954 213.329 cv
243.507 213.329 243.146 213.69 243.146 214.137 cv
243.146 214.583 243.507 214.945 243.954 214.945 cv
cp
f
239.501 219.291 mo
240.083 219.291 240.556 218.818 240.556 218.236 cv
240.556 217.654 240.083 217.182 239.501 217.182 cv
238.917 217.182 238.444 217.654 238.444 218.236 cv
238.444 218.818 238.917 219.291 239.501 219.291 cv
cp
f
234.858 223.176 mo
235.44 223.176 235.913 222.704 235.913 222.121 cv
235.913 221.539 235.44 221.066 234.858 221.066 cv
234.274 221.066 233.804 221.539 233.804 222.121 cv
233.804 222.704 234.274 223.176 234.858 223.176 cv
cp
f
230.036 227.31 mo
230.88 227.31 231.563 226.627 231.563 225.783 cv
231.563 224.94 230.88 224.257 230.036 224.257 cv
229.194 224.257 228.511 224.94 228.511 225.783 cv
228.511 226.627 229.194 227.31 230.036 227.31 cv
cp
f
225.048 230.762 mo
225.905 230.762 226.597 230.068 226.597 229.213 cv
226.597 228.357 225.905 227.664 225.048 227.664 cv
224.192 227.664 223.501 228.357 223.501 229.213 cv
223.501 230.068 224.192 230.762 225.048 230.762 cv
cp
f
219.903 233.84 mo
220.698 233.84 221.341 233.197 221.341 232.403 cv
221.341 231.609 220.698 230.967 219.903 230.967 cv
219.11 230.967 218.468 231.609 218.468 232.403 cv
218.468 233.197 219.11 233.84 219.903 233.84 cv
cp
f
214.614 236.783 mo
215.407 236.783 216.052 236.141 216.052 235.348 cv
216.052 234.554 215.407 233.91 214.614 233.91 cv
213.821 233.91 213.179 234.554 213.179 235.348 cv
213.179 236.141 213.821 236.783 214.614 236.783 cv
cp
f
209.192 239.631 mo
210.071 239.631 210.786 238.918 210.786 238.038 cv
210.786 237.158 210.071 236.443 209.192 236.443 cv
208.312 236.443 207.599 237.158 207.599 238.038 cv
207.599 238.918 208.312 239.631 209.192 239.631 cv
cp
f
203.649 242.041 mo
204.517 242.041 205.22 241.337 205.22 240.47 cv
205.22 239.602 204.517 238.898 203.649 238.898 cv
202.78 238.898 202.077 239.602 202.077 240.47 cv
202.077 241.337 202.78 242.041 203.649 242.041 cv
cp
f
197.997 244.545 mo
199.05 244.545 199.905 243.69 199.905 242.637 cv
199.905 241.582 199.05 240.729 197.997 240.729 cv
196.942 240.729 196.089 241.582 196.089 242.637 cv
196.089 243.69 196.942 244.545 197.997 244.545 cv
cp
f
192.247 246.397 mo
193.276 246.397 194.11 245.563 194.11 244.535 cv
194.11 243.506 193.276 242.672 192.247 242.672 cv
191.22 242.672 190.386 243.506 190.386 244.535 cv
190.386 245.563 191.22 246.397 192.247 246.397 cv
cp
f
186.417 248.066 mo
187.47 248.066 188.325 247.213 188.325 246.159 cv
188.325 245.105 187.47 244.251 186.417 244.251 cv
185.362 244.251 184.509 245.105 184.509 246.159 cv
184.509 247.213 185.362 248.066 186.417 248.066 cv
cp
f
180.515 249.414 mo
181.569 249.414 182.423 248.56 182.423 247.506 cv
182.423 246.453 181.569 245.599 180.515 245.599 cv
179.46 245.599 178.606 246.453 178.606 247.506 cv
178.606 248.56 179.46 249.414 180.515 249.414 cv
cp
f
174.556 250.548 mo
175.647 250.548 176.53 249.664 176.53 248.572 cv
176.53 247.482 175.647 246.598 174.556 246.598 cv
173.466 246.598 172.581 247.482 172.581 248.572 cv
172.581 249.664 173.466 250.548 174.556 250.548 cv
cp
f
168.554 251.444 mo
169.706 251.444 170.64 250.51 170.64 249.357 cv
170.64 248.204 169.706 247.27 168.554 247.27 cv
167.399 247.27 166.466 248.204 166.466 249.357 cv
166.466 250.51 167.399 251.444 168.554 251.444 cv
cp
f
162.521 252.169 mo
163.798 252.169 164.831 251.134 164.831 249.857 cv
164.831 248.58 163.798 247.545 162.521 247.545 cv
161.243 247.545 160.208 248.58 160.208 249.857 cv
160.208 251.134 161.243 252.169 162.521 252.169 cv
cp
f
156.472 252.361 mo
157.735 252.361 158.759 251.336 158.759 250.07 cv
158.759 248.808 157.735 247.782 156.472 247.782 cv
155.206 247.782 154.183 248.808 154.183 250.07 cv
154.183 251.336 155.206 252.361 156.472 252.361 cv
cp
f
150.417 252.154 mo
151.608 252.154 152.573 251.189 152.573 250 cv
152.573 248.81 151.608 247.846 150.417 247.846 cv
149.228 247.846 148.263 248.81 148.263 250 cv
148.263 251.189 149.228 252.154 150.417 252.154 cv
cp
f
144.374 251.281 mo
145.28 251.281 146.013 250.547 146.013 249.643 cv
146.013 248.738 145.28 248.004 144.374 248.004 cv
143.47 248.004 142.735 248.738 142.735 249.643 cv
142.735 250.547 143.47 251.281 144.374 251.281 cv
cp
f
138.354 250.841 mo
139.372 250.841 140.194 250.018 140.194 249 cv
140.194 247.984 139.372 247.16 138.354 247.16 cv
137.339 247.16 136.515 247.984 136.515 249 cv
136.515 250.018 137.339 250.841 138.354 250.841 cv
cp
f
132.372 250.319 mo
133.612 250.319 134.618 249.314 134.618 248.074 cv
134.618 246.834 133.612 245.83 132.372 245.83 cv
131.134 245.83 130.13 246.834 130.13 248.074 cv
130.13 249.314 131.134 250.319 132.372 250.319 cv
cp
f
126.442 249.111 mo
127.681 249.111 128.685 248.107 128.685 246.867 cv
128.685 245.628 127.681 244.623 126.442 244.623 cv
125.2 244.623 124.196 245.628 124.196 246.867 cv
124.196 248.107 125.2 249.111 126.442 249.111 cv
cp
f
120.571 247.715 mo
121.862 247.715 122.907 246.67 122.907 245.381 cv
122.907 244.093 121.862 243.047 120.571 243.047 cv
119.282 243.047 118.239 244.093 118.239 245.381 cv
118.239 246.67 119.282 247.715 120.571 247.715 cv
cp
f
114.78 245.729 mo
115.946 245.729 116.892 244.785 116.892 243.619 cv
116.892 242.454 115.946 241.51 114.78 241.51 cv
113.616 241.51 112.671 242.454 112.671 243.619 cv
112.671 244.785 113.616 245.729 114.78 245.729 cv
cp
f
109.079 243.764 mo
110.282 243.764 111.255 242.789 111.255 241.586 cv
111.255 240.385 110.282 239.41 109.079 239.41 cv
107.876 239.41 106.901 240.385 106.901 241.586 cv
106.901 242.789 107.876 243.764 109.079 243.764 cv
cp
f
103.479 241.508 mo
104.706 241.508 105.702 240.514 105.702 239.287 cv
105.702 238.059 104.706 237.064 103.479 237.064 cv
102.253 237.064 101.259 238.059 101.259 239.287 cv
101.259 240.514 102.253 241.508 103.479 241.508 cv
cp
f
97.9951 238.901 mo
99.1982 238.901 100.171 237.928 100.171 236.725 cv
100.171 235.521 99.1982 234.547 97.9951 234.547 cv
96.792 234.547 95.8174 235.521 95.8174 236.725 cv
95.8174 237.928 96.792 238.901 97.9951 238.901 cv
cp
f
92.6377 236.084 mo
93.8389 236.084 94.8135 235.109 94.8135 233.906 cv
94.8135 232.704 93.8389 231.729 92.6377 231.729 cv
91.4346 231.729 90.46 232.704 90.46 233.906 cv
90.46 235.109 91.4346 236.084 92.6377 236.084 cv
cp
f
87.4189 232.948 mo
88.583 232.948 89.5283 232.004 89.5283 230.839 cv
89.5283 229.674 88.583 228.729 87.4189 228.729 cv
86.2529 228.729 85.3096 229.674 85.3096 230.839 cv
85.3096 232.004 86.2529 232.948 87.4189 232.948 cv
cp
f
82.3506 229.705 mo
83.5537 229.705 84.5283 228.73 84.5283 227.527 cv
84.5283 226.325 83.5537 225.351 82.3506 225.351 cv
81.1494 225.351 80.1748 226.325 80.1748 227.527 cv
80.1748 228.73 81.1494 229.705 82.3506 229.705 cv
cp
f
77.4443 226.137 mo
78.6338 226.137 79.5986 225.172 79.5986 223.98 cv
79.5986 222.791 78.6338 221.826 77.4443 221.826 cv
76.2549 221.826 75.29 222.791 75.29 223.98 cv
75.29 225.172 76.2549 226.137 77.4443 226.137 cv
cp
f
72.7119 222.338 mo
73.8896 222.338 74.8447 221.385 74.8447 220.207 cv
74.8447 219.029 73.8896 218.074 72.7119 218.074 cv
71.5342 218.074 70.5811 219.029 70.5811 220.207 cv
70.5811 221.385 71.5342 222.338 72.7119 222.338 cv
cp
f
68.1631 218.323 mo
69.3271 218.323 70.2725 217.378 70.2725 216.213 cv
70.2725 215.048 69.3271 214.104 68.1631 214.104 cv
66.9971 214.104 66.0537 215.048 66.0537 216.213 cv
66.0537 217.378 66.9971 218.323 68.1631 218.323 cv
cp
f
63.8076 214.164 mo
64.9971 214.164 65.9619 213.199 65.9619 212.01 cv
65.9619 210.819 64.9971 209.855 63.8076 209.855 cv
62.6162 209.855 61.6533 210.819 61.6533 212.01 cv
61.6533 213.199 62.6162 214.164 63.8076 214.164 cv
cp
f
59.6553 209.691 mo
60.8076 209.691 61.7432 208.757 61.7432 207.604 cv
61.7432 206.451 60.8076 205.518 59.6553 205.518 cv
58.5029 205.518 57.5674 206.451 57.5674 207.604 cv
57.5674 208.757 58.5029 209.691 59.6553 209.691 cv
cp
f
55.7158 205.162 mo
56.9053 205.162 57.8701 204.197 57.8701 203.008 cv
57.8701 201.818 56.9053 200.854 55.7158 200.854 cv
54.5244 200.854 53.5615 201.818 53.5615 203.008 cv
53.5615 204.197 54.5244 205.162 55.7158 205.162 cv
cp
f
51.9971 200.476 mo
53.2373 200.476 54.2412 199.471 54.2412 198.23 cv
54.2412 196.99 53.2373 195.986 51.9971 195.986 cv
50.7568 195.986 49.7529 196.99 49.7529 198.23 cv
49.7529 199.471 50.7568 200.476 51.9971 200.476 cv
cp
f
48.5088 195.371 mo
49.6611 195.371 50.5967 194.436 50.5967 193.284 cv
50.5967 192.131 49.6611 191.196 48.5088 191.196 cv
47.3564 191.196 46.4209 192.131 46.4209 193.284 cv
46.4209 194.436 47.3564 195.371 48.5088 195.371 cv
cp
f
45.2588 189.727 mo
46.1143 189.727 46.8057 189.031 46.8057 188.177 cv
46.8057 187.322 46.1143 186.628 45.2588 186.628 cv
44.4033 186.628 43.71 187.322 43.71 188.177 cv
43.71 189.031 44.4033 189.727 45.2588 189.727 cv
cp
f
42.2529 184.156 mo
42.9346 184.156 43.4854 183.605 43.4854 182.924 cv
43.4854 182.241 42.9346 181.688 42.2529 181.688 cv
41.5713 181.688 41.0166 182.241 41.0166 182.924 cv
41.0166 183.605 41.5713 184.156 42.2529 184.156 cv
cp
f
39.4971 178.767 mo
40.1787 178.767 40.7314 178.214 40.7314 177.531 cv
40.7314 176.85 40.1787 176.298 39.4971 176.298 cv
38.8154 176.298 38.2627 176.85 38.2627 177.531 cv
38.2627 178.214 38.8154 178.767 39.4971 178.767 cv
cp
f
37.001 172.893 mo
37.4834 172.893 37.876 172.5 37.876 172.018 cv
37.876 171.535 37.4834 171.143 37.001 171.143 cv
36.5186 171.143 36.126 171.535 36.126 172.018 cv
36.126 172.5 36.5186 172.893 37.001 172.893 cv
cp
f
34.7666 167.244 mo
35.2373 167.244 35.6201 166.862 35.6201 166.391 cv
35.6201 165.921 35.2373 165.539 34.7666 165.539 cv
34.2959 165.539 33.9131 165.921 33.9131 166.391 cv
33.9131 166.862 34.2959 167.244 34.7666 167.244 cv
cp
f
32.8018 161.451 mo
33.2354 161.451 33.5869 161.1 33.5869 160.666 cv
33.5869 160.231 33.2354 159.881 32.8018 159.881 cv
32.3662 159.881 32.0166 160.231 32.0166 160.666 cv
32.0166 161.1 32.3662 161.451 32.8018 161.451 cv
cp
f
31.1084 155.707 mo
31.5791 155.707 31.9619 155.324 31.9619 154.854 cv
31.9619 154.383 31.5791 154.001 31.1084 154.001 cv
30.6377 154.001 30.2549 154.383 30.2549 154.854 cv
30.2549 155.324 30.6377 155.707 31.1084 155.707 cv
cp
f
29.6904 149.754 mo
30.126 149.754 30.4775 149.402 30.4775 148.969 cv
30.4775 148.535 30.126 148.183 29.6904 148.183 cv
29.2568 148.183 28.9053 148.535 28.9053 148.969 cv
28.9053 149.402 29.2568 149.754 29.6904 149.754 cv
cp
f
28.5537 143.809 mo
28.9893 143.809 29.3389 143.457 29.3389 143.023 cv
29.3389 142.589 28.9893 142.237 28.5537 142.237 cv
28.1201 142.237 27.7686 142.589 27.7686 143.023 cv
27.7686 143.457 28.1201 143.809 28.5537 143.809 cv
cp
f
27.7002 137.748 mo
28.0967 137.748 28.417 137.426 28.417 137.03 cv
28.417 136.633 28.0967 136.312 27.7002 136.312 cv
27.3037 136.312 26.9814 136.633 26.9814 137.03 cv
26.9814 137.426 27.3037 137.748 27.7002 137.748 cv
cp
f
27.1279 131.721 mo
27.5244 131.721 27.8467 131.399 27.8467 131.004 cv
27.8467 130.606 27.5244 130.285 27.1279 130.285 cv
26.7314 130.285 26.4111 130.606 26.4111 131.004 cv
26.4111 131.399 26.7314 131.721 27.1279 131.721 cv
cp
f
26.8428 125.428 mo
27.1025 125.428 27.3135 125.217 27.3135 124.957 cv
27.3135 124.697 27.1025 124.484 26.8428 124.484 cv
26.583 124.484 26.3701 124.697 26.3701 124.957 cv
26.3701 125.217 26.583 125.428 26.8428 125.428 cv
cp
f
26.8428 119.307 mo
27.0654 119.307 27.2471 119.127 27.2471 118.902 cv
27.2471 118.68 27.0654 118.499 26.8428 118.499 cv
26.6201 118.499 26.4385 118.68 26.4385 118.902 cv
26.4385 119.127 26.6201 119.307 26.8428 119.307 cv
cp
f
27.1279 113.059 mo
27.2393 113.059 27.3291 112.968 27.3291 112.855 cv
27.3291 112.745 27.2393 112.654 27.1279 112.654 cv
27.0166 112.654 26.9268 112.745 26.9268 112.855 cv
26.9268 112.968 27.0166 113.059 27.1279 113.059 cv
cp
f
27.7002 106.897 mo
27.7666 106.83 li
27.7002 106.762 li
27.6318 106.83 li
27.7002 106.897 li
cp
f
252.458 215.308 mo
252.616 215.15 li
252.458 214.994 li
252.302 215.15 li
252.458 215.308 li
cp
f
243.71 223.875 mo
243.907 223.875 244.069 223.714 244.069 223.516 cv
244.069 223.316 243.907 223.156 243.71 223.156 cv
243.511 223.156 243.351 223.316 243.351 223.516 cv
243.351 223.714 243.511 223.875 243.71 223.875 cv
cp
f
239.063 227.979 mo
239.386 227.979 239.647 227.717 239.647 227.395 cv
239.647 227.072 239.386 226.811 239.063 226.811 cv
238.741 226.811 238.479 227.072 238.479 227.395 cv
238.479 227.717 238.741 227.979 239.063 227.979 cv
cp
f
234.247 231.287 mo
234.37 231.287 234.47 231.187 234.47 231.063 cv
234.47 230.938 234.37 230.838 234.247 230.838 cv
234.122 230.838 234.022 230.938 234.022 231.063 cv
234.022 231.187 234.122 231.287 234.247 231.287 cv
cp
f
229.271 235.408 mo
229.767 235.408 230.169 235.006 230.169 234.51 cv
230.169 234.014 229.767 233.611 229.271 233.611 cv
228.774 233.611 228.372 234.014 228.372 234.51 cv
228.372 235.006 228.774 235.408 229.271 235.408 cv
cp
f
224.146 238.987 mo
224.839 238.987 225.401 238.425 225.401 237.73 cv
225.401 237.036 224.839 236.474 224.146 236.474 cv
223.45 236.474 222.888 237.036 222.888 237.73 cv
222.888 238.425 223.45 238.987 224.146 238.987 cv
cp
f
218.88 241.885 mo
219.524 241.885 220.046 241.362 220.046 240.718 cv
220.046 240.074 219.524 239.551 218.88 239.551 cv
218.235 239.551 217.712 240.074 217.712 240.718 cv
217.712 241.362 218.235 241.885 218.88 241.885 cv
cp
f
213.485 245.06 mo
214.366 245.06 215.079 244.346 215.079 243.466 cv
215.079 242.586 214.366 241.873 213.485 241.873 cv
212.606 241.873 211.892 242.586 211.892 243.466 cv
211.892 244.346 212.606 245.06 213.485 245.06 cv
cp
f
207.974 247.383 mo
208.757 247.383 209.388 246.751 209.388 245.97 cv
209.388 245.189 208.757 244.557 207.974 244.557 cv
207.192 244.557 206.56 245.189 206.56 245.97 cv
206.56 246.751 207.192 247.383 207.974 247.383 cv
cp
f
202.356 249.84 mo
203.247 249.84 203.972 249.116 203.972 248.223 cv
203.972 247.331 203.247 246.607 202.356 246.607 cv
201.464 246.607 200.739 247.331 200.739 248.223 cv
200.739 249.116 201.464 249.84 202.356 249.84 cv
cp
f
196.642 251.929 mo
197.583 251.929 198.347 251.165 198.347 250.223 cv
198.347 249.281 197.583 248.518 196.642 248.518 cv
195.7 248.518 194.937 249.281 194.937 250.223 cv
194.937 251.165 195.7 251.929 196.642 251.929 cv
cp
f
190.845 253.646 mo
191.774 253.646 192.528 252.894 192.528 251.964 cv
192.528 251.033 191.774 250.281 190.845 250.281 cv
189.915 250.281 189.161 251.033 189.161 251.964 cv
189.161 252.894 189.915 253.646 190.845 253.646 cv
cp
f
184.974 255.262 mo
185.978 255.262 186.792 254.447 186.792 253.443 cv
186.792 252.439 185.978 251.625 184.974 251.625 cv
183.97 251.625 183.157 252.439 183.157 253.443 cv
183.157 254.447 183.97 255.262 184.974 255.262 cv
cp
f
179.044 256.295 mo
179.948 256.295 180.683 255.563 180.683 254.657 cv
180.683 253.752 179.948 253.019 179.044 253.019 cv
178.14 253.019 177.405 253.752 177.405 254.657 cv
177.405 255.563 178.14 256.295 179.044 256.295 cv
cp
f
173.063 257.535 mo
174.132 257.535 174.995 256.67 174.995 255.604 cv
174.995 254.538 174.132 253.674 173.063 253.674 cv
171.999 253.674 171.134 254.538 171.134 255.604 cv
171.134 256.67 171.999 257.535 173.063 257.535 cv
cp
f
167.05 258.212 mo
168.114 258.212 168.978 257.348 168.978 256.282 cv
168.978 255.217 168.114 254.352 167.05 254.352 cv
165.983 254.352 165.12 255.217 165.12 256.282 cv
165.12 257.348 165.983 258.212 167.05 258.212 cv
cp
f
161.009 258.731 mo
162.138 258.731 163.052 257.816 163.052 256.689 cv
163.052 255.561 162.138 254.646 161.009 254.646 cv
159.882 254.646 158.966 255.561 158.966 256.689 cv
158.966 257.816 159.882 258.731 161.009 258.731 cv
cp
f
154.958 258.867 mo
156.085 258.867 156.999 257.953 156.999 256.824 cv
156.999 255.697 156.085 254.782 154.958 254.782 cv
153.829 254.782 152.915 255.697 152.915 256.824 cv
152.915 257.953 153.829 258.867 154.958 258.867 cv
cp
f
148.905 258.529 mo
149.921 258.529 150.745 257.706 150.745 256.689 cv
150.745 255.674 149.921 254.848 148.905 254.848 cv
147.888 254.848 147.065 255.674 147.065 256.689 cv
147.065 257.706 147.888 258.529 148.905 258.529 cv
cp
f
142.866 258.348 mo
144.005 258.348 144.931 257.422 144.931 256.282 cv
144.931 255.142 144.005 254.217 142.866 254.217 cv
141.724 254.217 140.8 255.142 140.8 256.282 cv
140.8 257.422 141.724 258.348 142.866 258.348 cv
cp
f
136.851 257.354 mo
137.817 257.354 138.601 256.57 138.601 255.604 cv
138.601 254.638 137.817 253.854 136.851 253.854 cv
135.884 253.854 135.099 254.638 135.099 255.604 cv
135.099 256.57 135.884 257.354 136.851 257.354 cv
cp
f
130.87 256.879 mo
132.099 256.879 133.093 255.885 133.093 254.657 cv
133.093 253.43 132.099 252.436 130.87 252.436 cv
129.644 252.436 128.649 253.43 128.649 254.657 cv
128.649 255.885 129.644 256.879 130.87 256.879 cv
cp
f
124.94 255.957 mo
126.329 255.957 127.454 254.831 127.454 253.443 cv
127.454 252.055 126.329 250.93 124.94 250.93 cv
123.552 250.93 122.427 252.055 122.427 253.443 cv
122.427 254.831 123.552 255.957 124.94 255.957 cv
cp
f
119.069 254.32 mo
120.372 254.32 121.427 253.266 121.427 251.964 cv
121.427 250.662 120.372 249.607 119.069 249.607 cv
117.769 249.607 116.714 250.662 116.714 251.964 cv
116.714 253.266 117.769 254.32 119.069 254.32 cv
cp
f
113.272 252.602 mo
114.585 252.602 115.651 251.536 115.651 250.223 cv
115.651 248.908 114.585 247.844 113.272 247.844 cv
111.958 247.844 110.894 248.908 110.894 250.223 cv
110.894 251.536 111.958 252.602 113.272 252.602 cv
cp
f
107.558 250.244 mo
108.675 250.244 109.579 249.339 109.579 248.223 cv
109.579 247.107 108.675 246.203 107.558 246.203 cv
106.442 246.203 105.538 247.107 105.538 248.223 cv
105.538 249.339 106.442 250.244 107.558 250.244 cv
cp
f
101.94 248.304 mo
103.229 248.304 104.274 247.259 104.274 245.97 cv
104.274 244.682 103.229 243.636 101.94 243.636 cv
100.651 243.636 99.6064 244.682 99.6064 245.97 cv
99.6064 247.259 100.651 248.304 101.94 248.304 cv
cp
f
96.4287 245.688 mo
97.6553 245.688 98.6494 244.693 98.6494 243.466 cv
98.6494 242.239 97.6553 241.244 96.4287 241.244 cv
95.2002 241.244 94.2061 242.239 94.2061 243.466 cv
94.2061 244.693 95.2002 245.688 96.4287 245.688 cv
cp
f
91.0342 242.67 mo
92.1143 242.67 92.9873 241.797 92.9873 240.718 cv
92.9873 239.64 92.1143 238.766 91.0342 238.766 cv
89.9561 238.766 89.0811 239.64 89.0811 240.718 cv
89.0811 241.797 89.9561 242.67 91.0342 242.67 cv
cp
f
85.7686 239.684 mo
86.8467 239.684 87.7236 238.809 87.7236 237.73 cv
87.7236 236.651 86.8467 235.777 85.7686 235.777 cv
84.6904 235.777 83.8154 236.651 83.8154 237.73 cv
83.8154 238.809 84.6904 239.684 85.7686 239.684 cv
cp
f
80.6436 236.62 mo
81.8076 236.62 82.7529 235.675 82.7529 234.51 cv
82.7529 233.344 81.8076 232.4 80.6436 232.4 cv
79.4795 232.4 78.5342 233.344 78.5342 234.51 cv
78.5342 235.675 79.4795 236.62 80.6436 236.62 cv
cp
f
75.667 233.24 mo
76.8701 233.24 77.8447 232.266 77.8447 231.063 cv
77.8447 229.859 76.8701 228.885 75.667 228.885 cv
74.4658 228.885 73.4893 229.859 73.4893 231.063 cv
73.4893 232.266 74.4658 233.24 75.667 233.24 cv
cp
f
70.8506 229.617 mo
72.0791 229.617 73.0732 228.623 73.0732 227.395 cv
73.0732 226.168 72.0791 225.174 70.8506 225.174 cv
69.624 225.174 68.6299 226.168 68.6299 227.395 cv
68.6299 228.623 69.624 229.617 70.8506 229.617 cv
cp
f
66.2041 225.738 mo
67.4307 225.738 68.4268 224.743 68.4268 223.516 cv
68.4268 222.288 67.4307 221.293 66.2041 221.293 cv
64.9775 221.293 63.9814 222.288 63.9814 223.516 cv
63.9814 224.743 64.9775 225.738 66.2041 225.738 cv
cp
f
61.7354 221.721 mo
63.001 221.721 64.0244 220.695 64.0244 219.432 cv
64.0244 218.168 63.001 217.142 61.7354 217.142 cv
60.4717 217.142 59.4463 218.168 59.4463 219.432 cv
59.4463 220.695 60.4717 221.721 61.7354 221.721 cv
cp
f
57.4561 217.35 mo
58.6689 217.35 59.6553 216.365 59.6553 215.15 cv
59.6553 213.936 58.6689 212.951 57.4561 212.951 cv
56.2412 212.951 55.2568 213.936 55.2568 215.15 cv
55.2568 216.365 56.2412 217.35 57.4561 217.35 cv
cp
f
53.3721 212.882 mo
54.585 212.882 55.5693 211.897 55.5693 210.683 cv
55.5693 209.467 54.585 208.482 53.3721 208.482 cv
52.1572 208.482 51.1709 209.467 51.1709 210.683 cv
51.1709 211.897 52.1572 212.882 53.3721 212.882 cv
cp
f
49.4912 208.213 mo
50.6943 208.213 51.6689 207.237 51.6689 206.035 cv
51.6689 204.833 50.6943 203.858 49.4912 203.858 cv
48.29 203.858 47.3135 204.833 47.3135 206.035 cv
47.3135 207.237 48.29 208.213 49.4912 208.213 cv
cp
f
45.8232 203.464 mo
47.0635 203.464 48.0693 202.459 48.0693 201.219 cv
48.0693 199.979 47.0635 198.975 45.8232 198.975 cv
44.585 198.975 43.5791 199.979 43.5791 201.219 cv
43.5791 202.459 44.585 203.464 45.8232 203.464 cv
cp
f
42.3779 197.836 mo
43.2568 197.836 43.9697 197.123 43.9697 196.243 cv
43.9697 195.363 43.2568 194.649 42.3779 194.649 cv
41.4971 194.649 40.7842 195.363 40.7842 196.243 cv
40.7842 197.123 41.4971 197.836 42.3779 197.836 cv
cp
f
39.1572 192.711 mo
40.0361 192.711 40.749 191.998 40.749 191.117 cv
40.749 190.238 40.0361 189.523 39.1572 189.523 cv
38.2764 189.523 37.5635 190.238 37.5635 191.117 cv
37.5635 191.998 38.2764 192.711 39.1572 192.711 cv
cp
f
36.1689 187.267 mo
36.9502 187.267 37.583 186.633 37.583 185.852 cv
37.583 185.071 36.9502 184.438 36.1689 184.438 cv
35.3877 184.438 34.7549 185.071 34.7549 185.852 cv
34.7549 186.633 35.3877 187.267 36.1689 187.267 cv
cp
f
33.4209 181.761 mo
34.1396 181.761 34.7217 181.178 34.7217 180.459 cv
34.7217 179.739 34.1396 179.156 33.4209 179.156 cv
32.7021 179.156 32.1182 179.739 32.1182 180.459 cv
32.1182 181.178 32.7021 181.761 33.4209 181.761 cv
cp
f
30.917 176.025 mo
31.5127 176.025 31.9951 175.541 31.9951 174.947 cv
31.9951 174.352 31.5127 173.869 30.917 173.869 cv
30.3213 173.869 29.8389 174.352 29.8389 174.947 cv
29.8389 175.541 30.3213 176.025 30.917 176.025 cv
cp
f
28.6631 170.451 mo
29.2822 170.451 29.7861 169.948 29.7861 169.328 cv
29.7861 168.709 29.2822 168.206 28.6631 168.206 cv
28.0439 168.206 27.54 168.709 27.54 169.328 cv
27.54 169.948 28.0439 170.451 28.6631 170.451 cv
cp
f
26.6631 164.737 mo
27.2842 164.737 27.7861 164.234 27.7861 163.615 cv
27.7861 162.994 27.2842 162.492 26.6631 162.492 cv
26.0439 162.492 25.542 162.994 25.542 163.615 cv
25.542 164.234 26.0439 164.737 26.6631 164.737 cv
cp
f
24.9229 158.109 mo
25.083 158.109 25.2139 157.979 25.2139 157.816 cv
25.2139 157.655 25.083 157.524 24.9229 157.524 cv
24.7607 157.524 24.6299 157.655 24.6299 157.816 cv
24.6299 157.979 24.7607 158.109 24.9229 158.109 cv
cp
f
23.4443 152.352 mo
23.667 152.352 23.8486 152.17 23.8486 151.947 cv
23.8486 151.723 23.667 151.543 23.4443 151.543 cv
23.2217 151.543 23.04 151.723 23.04 151.947 cv
23.04 152.17 23.2217 152.352 23.4443 152.352 cv
cp
f
22.2295 146.285 mo
22.3779 146.285 22.499 146.165 22.499 146.016 cv
22.499 145.867 22.3779 145.746 22.2295 145.746 cv
22.0811 145.746 21.96 145.867 21.96 146.016 cv
21.96 146.165 22.0811 146.285 22.2295 146.285 cv
cp
f
21.2822 140.238 mo
21.3936 140.238 21.4834 140.148 21.4834 140.037 cv
21.4834 139.925 21.3936 139.835 21.2822 139.835 cv
21.1709 139.835 21.0811 139.925 21.0811 140.037 cv
21.0811 140.148 21.1709 140.238 21.2822 140.238 cv
cp
f
20.6045 134.156 mo
20.7393 134.021 li
20.6045 133.887 li
20.4697 134.021 li
20.6045 134.156 li
cp
f
20.1982 128.049 mo
20.2646 127.982 li
20.1982 127.914 li
20.1299 127.982 li
20.1982 128.049 li
cp
f
238.456 236.564 mo
238.581 236.564 238.681 236.465 238.681 236.341 cv
238.681 236.217 238.581 236.116 238.456 236.116 cv
238.331 236.116 238.231 236.217 238.231 236.341 cv
238.231 236.465 238.331 236.564 238.456 236.564 cv
cp
f
233.491 240.209 mo
233.714 240.209 233.896 240.027 233.896 239.805 cv
233.896 239.581 233.714 239.4 233.491 239.4 cv
233.269 239.4 233.087 239.581 233.087 239.805 cv
233.087 240.027 233.269 240.209 233.491 240.209 cv
cp
f
228.382 243.456 mo
228.604 243.456 228.786 243.275 228.786 243.053 cv
228.786 242.829 228.604 242.648 228.382 242.648 cv
228.159 242.648 227.978 242.829 227.978 243.053 cv
227.978 243.275 228.159 243.456 228.382 243.456 cv
cp
f
223.14 246.438 mo
223.337 246.438 223.499 246.277 223.499 246.08 cv
223.499 245.881 223.337 245.721 223.14 245.721 cv
222.94 245.721 222.78 245.881 222.78 246.08 cv
222.78 246.277 222.94 246.438 223.14 246.438 cv
cp
f
217.772 249.912 mo
218.343 249.912 218.806 249.449 218.806 248.879 cv
218.806 248.309 218.343 247.847 217.772 247.847 cv
217.202 247.847 216.739 248.309 216.739 248.879 cv
216.739 249.449 217.202 249.912 217.772 249.912 cv
cp
f
212.29 251.783 mo
212.476 251.783 212.628 251.633 212.628 251.447 cv
212.628 251.261 212.476 251.11 212.29 251.11 cv
212.104 251.11 211.954 251.261 211.954 251.447 cv
211.954 251.633 212.104 251.783 212.29 251.783 cv
cp
f
206.704 254.834 mo
207.286 254.834 207.759 254.361 207.759 253.778 cv
207.759 253.196 207.286 252.725 206.704 252.725 cv
206.12 252.725 205.649 253.196 205.649 253.778 cv
205.649 254.361 206.12 254.834 206.704 254.834 cv
cp
f
201.022 256.924 mo
201.606 256.924 202.079 256.452 202.079 255.869 cv
202.079 255.287 201.606 254.814 201.022 254.814 cv
200.44 254.814 199.968 255.287 199.968 255.869 cv
199.968 256.452 200.44 256.924 201.022 256.924 cv
cp
f
195.257 257.85 mo
195.392 257.716 li
195.257 257.58 li
195.122 257.716 li
195.257 257.85 li
cp
f
189.419 259.875 mo
189.729 259.875 189.979 259.623 189.979 259.313 cv
189.979 259.004 189.729 258.752 189.419 258.752 cv
189.108 258.752 188.858 259.004 188.858 259.313 cv
188.858 259.623 189.108 259.875 189.419 259.875 cv
cp
f
183.517 261.783 mo
184.138 261.783 184.64 261.28 184.64 260.66 cv
184.64 260.041 184.138 259.538 183.517 259.538 cv
182.897 259.538 182.394 260.041 182.394 260.66 cv
182.394 261.28 182.897 261.783 183.517 261.783 cv
cp
f
177.563 263.348 mo
178.442 263.348 179.155 262.634 179.155 261.754 cv
179.155 260.874 178.442 260.16 177.563 260.16 cv
176.683 260.16 175.97 260.874 175.97 261.754 cv
175.97 262.634 176.683 263.348 177.563 263.348 cv
cp
f
171.567 264.59 mo
172.671 264.59 173.565 263.695 173.565 262.592 cv
173.565 261.488 172.671 260.595 171.567 260.595 cv
170.464 260.595 169.569 261.488 169.569 262.592 cv
169.569 263.695 170.464 264.59 171.567 264.59 cv
cp
f
165.542 265.216 mo
166.669 265.216 167.585 264.301 167.585 263.174 cv
167.585 262.045 166.669 261.131 165.542 261.131 cv
164.413 261.131 163.501 262.045 163.501 263.174 cv
163.501 264.301 164.413 265.216 165.542 265.216 cv
cp
f
159.497 265.404 mo
160.55 265.404 161.405 264.551 161.405 263.496 cv
161.405 262.443 160.55 261.589 159.497 261.589 cv
158.444 261.589 157.591 262.443 157.591 263.496 cv
157.591 264.551 158.444 265.404 159.497 265.404 cv
cp
f
153.444 265.47 mo
154.497 265.47 155.351 264.615 155.351 263.562 cv
155.351 262.508 154.497 261.654 153.444 261.654 cv
152.39 261.654 151.536 262.508 151.536 263.562 cv
151.536 264.615 152.39 265.47 153.444 265.47 cv
cp
f
147.394 265.455 mo
148.546 265.455 149.479 264.521 149.479 263.367 cv
149.479 262.215 148.546 261.28 147.394 261.28 cv
146.241 261.28 145.306 262.215 145.306 263.367 cv
145.306 264.521 146.241 265.455 147.394 265.455 cv
cp
f
141.356 265.137 mo
142.585 265.137 143.579 264.143 143.579 262.915 cv
143.579 261.688 142.585 260.693 141.356 260.693 cv
140.13 260.693 139.134 261.688 139.134 262.915 cv
139.134 264.143 140.13 265.137 141.356 265.137 cv
cp
f
135.345 264.338 mo
136.522 264.338 137.478 263.383 137.478 262.206 cv
137.478 261.028 136.522 260.073 135.345 260.073 cv
134.167 260.073 133.212 261.028 133.212 262.206 cv
133.212 263.383 134.167 264.338 135.345 264.338 cv
cp
f
129.368 263.305 mo
130.509 263.305 131.433 262.379 131.433 261.239 cv
131.433 260.1 130.509 259.175 129.368 259.175 cv
128.228 259.175 127.304 260.1 127.304 261.239 cv
127.304 262.379 128.228 263.305 129.368 263.305 cv
cp
f
123.44 262.309 mo
124.704 262.309 125.729 261.282 125.729 260.02 cv
125.729 258.754 124.704 257.729 123.44 257.729 cv
122.175 257.729 121.149 258.754 121.149 260.02 cv
121.149 261.282 122.175 262.309 123.44 262.309 cv
cp
f
117.567 260.813 mo
118.819 260.813 119.835 259.797 119.835 258.546 cv
119.835 257.294 118.819 256.279 117.567 256.279 cv
116.315 256.279 115.302 257.294 115.302 258.546 cv
115.302 259.797 116.315 260.813 117.567 260.813 cv
cp
f
111.765 258.955 mo
112.942 258.955 113.897 258.002 113.897 256.823 cv
113.897 255.646 112.942 254.691 111.765 254.691 cv
110.587 254.691 109.632 255.646 109.632 256.823 cv
109.632 258.002 110.587 258.955 111.765 258.955 cv
cp
f
106.04 256.986 mo
107.218 256.986 108.171 256.031 108.171 254.854 cv
108.171 253.678 107.218 252.723 106.04 252.723 cv
104.862 252.723 103.907 253.678 103.907 254.854 cv
103.907 256.031 104.862 256.986 106.04 256.986 cv
cp
f
100.405 254.955 mo
101.681 254.955 102.716 253.92 102.716 252.643 cv
102.716 251.366 101.681 250.331 100.405 250.331 cv
99.1279 250.331 98.0928 251.366 98.0928 252.643 cv
98.0928 253.92 99.1279 254.955 100.405 254.955 cv
cp
f
94.8682 252.369 mo
96.0713 252.369 97.0459 251.395 97.0459 250.193 cv
97.0459 248.99 96.0713 248.016 94.8682 248.016 cv
93.667 248.016 92.6924 248.99 92.6924 250.193 cv
92.6924 251.395 93.667 252.369 94.8682 252.369 cv
cp
f
89.4424 249.752 mo
90.6826 249.752 91.6865 248.747 91.6865 247.508 cv
91.6865 246.269 90.6826 245.264 89.4424 245.264 cv
88.2041 245.264 87.1982 246.269 87.1982 247.508 cv
87.1982 248.747 88.2041 249.752 89.4424 249.752 cv
cp
f
84.1377 246.86 mo
85.3896 246.86 86.4033 245.846 86.4033 244.594 cv
86.4033 243.342 85.3896 242.327 84.1377 242.327 cv
82.8857 242.327 81.8701 243.342 81.8701 244.594 cv
81.8701 245.846 82.8857 246.86 84.1377 246.86 cv
cp
f
78.96 243.789 mo
80.249 243.789 81.2959 242.744 81.2959 241.455 cv
81.2959 240.167 80.249 239.121 78.96 239.121 cv
77.6709 239.121 76.626 240.167 76.626 241.455 cv
76.626 242.744 77.6709 243.789 78.96 243.789 cv
cp
f
73.9229 240.434 mo
75.2119 240.434 76.2568 239.389 76.2568 238.1 cv
76.2568 236.81 75.2119 235.765 73.9229 235.765 cv
72.6338 235.765 71.5889 236.81 71.5889 238.1 cv
71.5889 239.389 72.6338 240.434 73.9229 240.434 cv
cp
f
69.0322 236.887 mo
70.335 236.887 71.3896 235.832 71.3896 234.531 cv
71.3896 233.229 70.335 232.174 69.0322 232.174 cv
67.7314 232.174 66.6748 233.229 66.6748 234.531 cv
66.6748 235.832 67.7314 236.887 69.0322 236.887 cv
cp
f
64.2998 232.776 mo
65.415 232.776 66.3213 231.872 66.3213 230.756 cv
66.3213 229.641 65.415 228.736 64.2998 228.736 cv
63.1846 228.736 62.2803 229.641 62.2803 230.756 cv
62.2803 231.872 63.1846 232.776 64.2998 232.776 cv
cp
f
59.7314 228.959 mo
60.9346 228.959 61.9092 227.985 61.9092 226.783 cv
61.9092 225.58 60.9346 224.605 59.7314 224.605 cv
58.5303 224.605 57.5557 225.58 57.5557 226.783 cv
57.5557 227.985 58.5303 228.959 59.7314 228.959 cv
cp
f
55.3389 224.908 mo
56.6025 224.908 57.6279 223.883 57.6279 222.618 cv
57.6279 221.354 56.6025 220.328 55.3389 220.328 cv
54.0752 220.328 53.0498 221.354 53.0498 222.618 cv
53.0498 223.883 54.0752 224.908 55.3389 224.908 cv
cp
f
51.1279 220.02 mo
52.0947 220.02 52.8779 219.236 52.8779 218.27 cv
52.8779 217.303 52.0947 216.519 51.1279 216.519 cv
50.1611 216.519 49.376 217.303 49.376 218.27 cv
49.376 219.236 50.1611 220.02 51.1279 220.02 cv
cp
f
47.1064 215.922 mo
48.3096 215.922 49.2822 214.947 49.2822 213.745 cv
49.2822 212.542 48.3096 211.568 47.1064 211.568 cv
45.9033 211.568 44.9287 212.542 44.9287 213.745 cv
44.9287 214.947 45.9033 215.922 47.1064 215.922 cv
cp
f
43.2803 210.826 mo
44.2607 210.826 45.0537 210.031 45.0537 209.053 cv
45.0537 208.073 44.2607 207.279 43.2803 207.279 cv
42.3018 207.279 41.5068 208.073 41.5068 209.053 cv
41.5068 210.031 42.3018 210.826 43.2803 210.826 cv
cp
f
39.6611 205.975 mo
40.6396 205.975 41.4326 205.181 41.4326 204.201 cv
41.4326 203.223 40.6396 202.428 39.6611 202.428 cv
38.6807 202.428 37.8877 203.223 37.8877 204.201 cv
37.8877 205.181 38.6807 205.975 39.6611 205.975 cv
cp
f
36.251 200.074 mo
36.7334 200.074 37.126 199.683 37.126 199.199 cv
37.126 198.716 36.7334 198.324 36.251 198.324 cv
35.7666 198.324 35.374 198.716 35.374 199.199 cv
35.374 199.683 35.7666 200.074 36.251 200.074 cv
cp
f
33.0576 195.404 mo
33.8018 195.404 34.4033 194.801 34.4033 194.057 cv
34.4033 193.313 33.8018 192.709 33.0576 192.709 cv
32.3135 192.709 31.71 193.313 31.71 194.057 cv
31.71 194.801 32.3135 195.404 33.0576 195.404 cv
cp
f
30.0869 189.186 mo
30.3096 189.186 30.4912 189.004 30.4912 188.781 cv
30.4912 188.559 30.3096 188.378 30.0869 188.378 cv
29.8623 188.378 29.6826 188.559 29.6826 188.781 cv
29.6826 189.004 29.8623 189.186 30.0869 189.186 cv
cp
f
27.3447 184.238 mo
27.8154 184.238 28.1963 183.855 28.1963 183.385 cv
28.1963 182.914 27.8154 182.531 27.3447 182.531 cv
26.8721 182.531 26.4912 182.914 26.4912 183.385 cv
26.4912 183.855 26.8721 184.238 27.3447 184.238 cv
cp
f
24.835 177.898 mo
24.8564 177.877 li
24.835 177.854 li
24.8115 177.877 li
24.835 177.898 li
cp
f
22.5615 172.332 mo
22.6299 172.265 li
22.5615 172.197 li
22.4951 172.265 li
22.5615 172.332 li
cp
f
20.5322 166.697 mo
20.667 166.562 li
20.5322 166.428 li
20.3975 166.562 li
20.5322 166.697 li
cp
f
18.749 161.068 mo
18.9092 161.068 19.04 160.938 19.04 160.777 cv
19.04 160.616 18.9092 160.485 18.749 160.485 cv
18.5869 160.485 18.4561 160.616 18.4561 160.777 cv
18.4561 160.938 18.5869 161.068 18.749 161.068 cv
cp
f
216.599 256.928 mo
216.62 256.906 li
216.599 256.883 li
216.577 256.906 li
216.599 256.928 li
cp
f
205.392 261.504 mo
205.415 261.48 li
205.392 261.458 li
205.37 261.48 li
205.392 261.504 li
cp
f
199.657 263.557 mo
199.792 263.422 li
199.657 263.287 li
199.522 263.422 li
199.657 263.557 li
cp
f
176.073 268.871 mo
176.142 268.805 li
176.073 268.736 li
176.007 268.805 li
176.073 268.871 li
cp
f
170.065 269.61 mo
170.134 269.543 li
170.065 269.477 li
169.999 269.543 li
170.065 269.61 li
cp
f
164.032 270.262 mo
164.157 270.262 164.257 270.16 164.257 270.037 cv
164.257 269.913 164.157 269.813 164.032 269.813 cv
163.909 269.813 163.808 269.913 163.808 270.037 cv
163.808 270.16 163.909 270.262 164.032 270.262 cv
cp
f
157.985 270.979 mo
158.368 270.979 158.679 270.668 158.679 270.283 cv
158.679 269.898 158.368 269.588 157.985 269.588 cv
157.601 269.588 157.288 269.898 157.288 270.283 cv
157.288 270.668 157.601 270.979 157.985 270.979 cv
cp
f
151.931 270.979 mo
152.315 270.979 152.626 270.668 152.626 270.283 cv
152.626 269.898 152.315 269.588 151.931 269.588 cv
151.546 269.588 151.235 269.898 151.235 270.283 cv
151.235 270.668 151.546 270.979 151.931 270.979 cv
cp
f
145.882 270.598 mo
146.19 270.598 146.442 270.347 146.442 270.037 cv
146.442 269.727 146.19 269.475 145.882 269.475 cv
145.573 269.475 145.321 269.727 145.321 270.037 cv
145.321 270.347 145.573 270.598 145.882 270.598 cv
cp
f
139.849 270.104 mo
140.157 270.104 140.409 269.854 140.409 269.543 cv
140.409 269.234 140.157 268.982 139.849 268.982 cv
139.538 268.982 139.286 269.234 139.286 269.543 cv
139.286 269.854 139.538 270.104 139.849 270.104 cv
cp
f
133.841 269.433 mo
134.187 269.433 134.468 269.151 134.468 268.805 cv
134.468 268.457 134.187 268.176 133.841 268.176 cv
133.493 268.176 133.212 268.457 133.212 268.805 cv
133.212 269.151 133.493 269.433 133.841 269.433 cv
cp
f
127.866 268.629 mo
128.313 268.629 128.675 268.268 128.675 267.82 cv
128.675 267.374 128.313 267.014 127.866 267.014 cv
127.419 267.014 127.058 267.374 127.058 267.82 cv
127.058 268.268 127.419 268.629 127.866 268.629 cv
cp
f
121.938 267.672 mo
122.534 267.672 123.017 267.189 123.017 266.594 cv
123.017 265.999 122.534 265.517 121.938 265.517 cv
121.343 265.517 120.86 265.999 120.86 266.594 cv
120.86 267.189 121.343 267.672 121.938 267.672 cv
cp
f
116.065 265.846 mo
116.462 265.846 116.784 265.523 116.784 265.127 cv
116.784 264.73 116.462 264.409 116.065 264.409 cv
115.669 264.409 115.347 264.73 115.347 265.127 cv
115.347 265.523 115.669 265.846 116.065 265.846 cv
cp
f
110.257 265.756 mo
111.546 265.756 112.591 264.711 112.591 263.422 cv
112.591 262.133 111.546 261.088 110.257 261.088 cv
108.968 261.088 107.923 262.133 107.923 263.422 cv
107.923 264.711 108.968 265.756 110.257 265.756 cv
cp
f
104.522 263.254 mo
105.501 263.254 106.296 262.46 106.296 261.48 cv
106.296 260.501 105.501 259.707 104.522 259.707 cv
103.544 259.707 102.751 260.501 102.751 261.48 cv
102.751 262.46 103.544 263.254 104.522 263.254 cv
cp
f
98.8721 260.16 mo
99.3447 260.16 99.7256 259.778 99.7256 259.308 cv
99.7256 258.836 99.3447 258.455 98.8721 258.455 cv
98.4014 258.455 98.0205 258.836 98.0205 259.308 cv
98.0205 259.778 98.4014 260.16 98.8721 260.16 cv
cp
f
93.3154 259.307 mo
94.6416 259.307 95.7178 258.232 95.7178 256.906 cv
95.7178 255.579 94.6416 254.504 93.3154 254.504 cv
91.9893 254.504 90.915 255.579 90.915 256.906 cv
90.915 258.232 91.9893 259.307 93.3154 259.307 cv
cp
f
87.8623 256.254 mo
88.9541 256.254 89.8369 255.37 89.8369 254.279 cv
89.8369 253.188 88.9541 252.304 87.8623 252.304 cv
86.7705 252.304 85.8877 253.188 85.8877 254.279 cv
85.8877 255.37 86.7705 256.254 87.8623 256.254 cv
cp
f
82.5205 252.083 mo
82.8799 252.083 83.1689 251.791 83.1689 251.432 cv
83.1689 251.072 82.8799 250.781 82.5205 250.781 cv
82.1611 250.781 81.8682 251.072 81.8682 251.432 cv
81.8682 251.791 82.1611 252.083 82.5205 252.083 cv
cp
f
77.2979 249.604 mo
77.9795 249.604 78.5322 249.051 78.5322 248.369 cv
78.5322 247.688 77.9795 247.135 77.2979 247.135 cv
76.6162 247.135 76.0615 247.688 76.0615 248.369 cv
76.0615 249.051 76.6162 249.604 77.2979 249.604 cv
cp
f
72.2061 245.389 mo
72.3662 245.389 72.4971 245.258 72.4971 245.098 cv
72.4971 244.936 72.3662 244.805 72.2061 244.805 cv
72.0439 244.805 71.9131 244.936 71.9131 245.098 cv
71.9131 245.258 72.0439 245.389 72.2061 245.389 cv
cp
f
67.251 243.684 mo
68.3896 243.684 69.3154 242.76 69.3154 241.619 cv
69.3154 240.479 68.3896 239.555 67.251 239.555 cv
66.1084 239.555 65.1846 240.479 65.1846 241.619 cv
65.1846 242.76 66.1084 243.684 67.251 243.684 cv
cp
f
62.4424 239.131 mo
63.0986 239.131 63.6299 238.6 63.6299 237.941 cv
63.6299 237.285 63.0986 236.753 62.4424 236.753 cv
61.7842 236.753 61.251 237.285 61.251 237.941 cv
61.251 238.6 61.7842 239.131 62.4424 239.131 cv
cp
f
57.7861 235.441 mo
58.542 235.441 59.1553 234.828 59.1553 234.072 cv
59.1553 233.316 58.542 232.703 57.7861 232.703 cv
57.0303 232.703 56.417 233.316 56.417 234.072 cv
56.417 234.828 57.0303 235.441 57.7861 235.441 cv
cp
f
53.292 231.99 mo
54.3838 231.99 55.2666 231.105 55.2666 230.015 cv
55.2666 228.925 54.3838 228.039 53.292 228.039 cv
52.2002 228.039 51.3174 228.925 51.3174 230.015 cv
51.3174 231.105 52.2002 231.99 53.292 231.99 cv
cp
f
48.9697 226.295 mo
49.2549 226.295 49.4854 226.063 49.4854 225.778 cv
49.4854 225.492 49.2549 225.262 48.9697 225.262 cv
48.6846 225.262 48.4521 225.492 48.4521 225.778 cv
48.4521 226.063 48.6846 226.295 48.9697 226.295 cv
cp
f
44.8213 221.525 mo
44.9775 221.368 li
44.8213 221.211 li
44.6631 221.368 li
44.8213 221.525 li
cp
f
40.8564 217.578 mo
41.29 217.578 41.6416 217.228 41.6416 216.793 cv
41.6416 216.359 41.29 216.008 40.8564 216.008 cv
40.4229 216.008 40.0713 216.359 40.0713 216.793 cv
40.0713 217.228 40.4229 217.578 40.8564 217.578 cv
cp
f
37.0811 212.084 mo
37.1045 212.061 li
37.0811 212.039 li
37.0596 212.061 li
37.0811 212.084 li
cp
f
33.5029 207.379 mo
33.6143 207.379 33.7061 207.289 33.7061 207.178 cv
33.7061 207.066 33.6143 206.976 33.5029 206.976 cv
33.3916 206.976 33.3018 207.066 33.3018 207.178 cv
33.3018 207.289 33.3916 207.379 33.5029 207.379 cv
cp
f
30.1279 202.22 mo
30.1963 202.152 li
30.1279 202.086 li
30.0596 202.152 li
30.1279 202.22 li
cp
f
26.96 197.063 mo
27.0264 196.994 li
26.96 196.928 li
26.8916 196.994 li
26.96 197.063 li
cp
f
18.7529 180.827 mo
18.7744 180.805 li
18.7529 180.782 li
18.7295 180.805 li
18.7529 180.827 li
cp
f
108.749 270.22 mo
108.862 270.22 108.952 270.129 108.952 270.018 cv
108.952 269.906 108.862 269.815 108.749 269.815 cv
108.638 269.815 108.548 269.906 108.548 270.018 cv
108.548 270.129 108.638 270.22 108.749 270.22 cv
cp
f
103.007 268.17 mo
103.075 268.102 li
103.007 268.035 li
102.94 268.102 li
103.007 268.17 li
cp
f
97.3447 265.986 mo
97.3662 265.964 li
97.3447 265.941 li
97.3213 265.964 li
97.3447 265.986 li
cp
f
91.7666 263.764 mo
91.9248 263.606 li
91.7666 263.449 li
91.6104 263.606 li
91.7666 263.764 li
cp
f
86.2881 261.19 mo
86.4463 261.033 li
86.2881 260.876 li
86.1318 261.033 li
86.2881 261.19 li
cp
f
80.9131 258.27 mo
80.9365 258.248 li
80.9131 258.226 li
80.8916 258.248 li
80.9131 258.27 li
cp
f
75.6514 255.391 mo
75.7861 255.256 li
75.6514 255.121 li
75.5146 255.256 li
75.6514 255.391 li
cp
f
70.5088 252.127 mo
70.5771 252.061 li
70.5088 251.992 li
70.4424 252.061 li
70.5088 252.127 li
cp
f
65.4971 248.733 mo
65.5635 248.666 li
65.4971 248.6 li
65.4287 248.666 li
65.4971 248.733 li
cp
f
60.6201 245.146 mo
60.6865 245.08 li
60.6201 245.012 li
60.5537 245.08 li
60.6201 245.146 li
cp
f
55.8877 241.439 mo
56.0205 241.305 li
55.8877 241.17 li
55.7529 241.305 li
55.8877 241.439 li
cp
f
51.3057 237.371 mo
51.3271 237.348 li
51.3057 237.326 li
51.2822 237.348 li
51.3057 237.371 li
cp
f
46.8799 233.238 mo
46.9033 233.217 li
46.8799 233.193 li
46.8584 233.217 li
46.8799 233.238 li
cp
f
42.6201 228.938 mo
42.6436 228.914 li
42.6201 228.893 li
42.5986 228.914 li
42.6201 228.938 li
cp
f
38.5322 224.473 mo
38.5537 224.451 li
38.5322 224.428 li
38.5107 224.451 li
38.5322 224.473 li
cp
f
30.8936 215.082 mo
30.915 215.061 li
30.8936 215.038 li
30.8701 215.061 li
30.8936 215.082 li
cp
f
84.7217 267.796 mo
84.7451 267.773 li
84.7217 267.75 li
84.7002 267.773 li
84.7217 267.796 li
cp
f
79.3174 265.067 mo
79.3408 265.046 li
79.3174 265.023 li
79.2959 265.046 li
79.3174 265.067 li
cp
f
74.0186 262.141 mo
74.042 262.117 li
74.0186 262.095 li
73.9971 262.117 li
74.0186 262.141 li
cp
f
68.835 259.016 mo
68.8564 258.992 li
68.835 258.971 li
68.8115 258.992 li
68.835 259.016 li
cp
f
63.7705 255.699 mo
63.792 255.677 li
63.7705 255.654 li
63.749 255.677 li
63.7705 255.699 li
cp
f
58.833 252.196 mo
58.8545 252.174 li
58.833 252.15 li
58.8115 252.174 li
58.833 252.196 li
cp
f
54.0303 248.512 mo
54.0518 248.488 li
54.0303 248.467 li
54.0088 248.488 li
54.0303 248.512 li
cp
f
36.2939 232.055 mo
36.3174 232.032 li
36.2939 232.01 li
36.2725 232.032 li
36.2939 232.055 li
cp
f
32.2607 227.541 mo
32.2842 227.518 li
32.2607 227.496 li
32.2373 227.518 li
32.2607 227.541 li
cp
f
28.3994 222.879 mo
28.4209 222.857 li
28.3994 222.834 li
28.376 222.857 li
28.3994 222.879 li
cp
f
77.7314 271.848 mo
77.7549 271.826 li
77.7314 271.803 li
77.71 271.826 li
77.7314 271.848 li
cp
f
47.4756 251.942 mo
47.5635 251.853 li
47.4756 251.764 li
47.3857 251.853 li
47.4756 251.942 li
cp
f
29.9854 235.154 mo
30.0088 235.133 li
29.9854 235.109 li
29.9639 235.133 li
29.9854 235.154 li
cp
f
26.0049 230.596 mo
26.0264 230.573 li
26.0049 230.551 li
25.9814 230.573 li
26.0049 230.596 li
cp
f
50.417 262.749 mo
50.4385 262.727 li
50.417 262.705 li
50.3936 262.727 li
50.417 262.749 li
cp
f
45.6201 259.057 mo
45.6416 259.035 li
45.6201 259.012 li
45.5967 259.035 li
45.6201 259.057 li
cp
f
12.376 224.047 mo
12.3994 224.023 li
12.376 224.002 li
12.3545 224.023 li
12.376 224.047 li
cp
f
8.93652 219.064 mo
8.95996 219.042 li
8.93652 219.02 li
8.91504 219.042 li
8.93652 219.064 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Akash) ()
%%Title: (FP-PPD-17-10790_28.eps)
%%CreationDate: 8/16/2017 12:43 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9<Dqsa3'Y%t`RSSiV5Ama&r#"#Cq[;'K$)^-[G$"`?pkJdJ-5PKT7S3VU,FT?oY<oN,b3VU7!]77R0pR8L9o<]53ZW,:F
%dk!&eDkiscL&iARbP^smqtFIJpS,q5BMhb=S\XP[drn\Q8;BK8UIW1oX5`)e>jYfbc0fI2Y""sW3Gue&c;LA6.r6!0_c,2$(-Y-G
%7f7J(e-N,<E/_8D*X24+'ZBBsYZn>h$5q?SaMDdVE"kurT@s!cZeFWnU0T`BWi]XDrXRUk+-A5R;7?qC_l<j7o(Ii5)4RIS;RB.e
%;rOok]9]4U%uR5unA/+(b:"ohg5A_lSSgOUf&PnZ7lZR=DGcAdUK0p0^e1g:C^[JRi(#/'YL02F((r%jfR6`7.@q5s=uaqR7p-"L
%*"7Y-NIFeH0u17e(&oRfK:hY><mV3Y?"\B5a#,[\?mu8sK\[P.5TNr,7huAnK^nH>FV2(.4-pUE*dSB'Zl3@3U7,T&DUD@)4P3Jq
%U&o;%KD]-(!d^NBfs$!`$WsQ((+AC(/I#3LPug\e0)A_3ra%(eMS`QHB$05C]DM8N6&@G=.4U5;_?[^:\h;aPf5!eA\'948kbYlR
%;FtfI[AZCALs6Si6<#M(qrB\g3!e9:;&9WhDY-cP9*IiEqd0"L[_cBK]>H"<O*4](o,rKP0\-XtcF"\"9$MI9VWh7fi3HZcFk&%Q
%.N#0S(3Dg#W\#Y.?NI(BanRVLlG>/U`(mpn>&Q#FJnh>TeGM`HW(!"[L9oI6f+P[r_)h3)+g1$"s'>Vrd/Y0NG,$B39%AsEgW<-H
%;V^,ACE/l;/rlE0*BC,[jM-<aQGD"=Ib5*<gsL6LK_J99oW(Wd>(Ic$a5<2:^KhY*QcjbUfC?&Ij'H$3]t-u5"p$`S*bJO\Am+oR
%Z4P6c&BqG3J5>IA#iiK%j&59[%g_=/#_nu@2hI=<#Z`S<U#e&t.@1Vn#]O\n=;EnZ#S8*akWonsMDE/,Y"ABITmXVX_r:@q_2p;I
%NF59nVj?a<U@:+Y+Aqp'd*C<1%n=/"2h",gn2F*2R74#CU@:+8*C&I9dY4`"Sl,t.$q\@o#SR>#`hc(bVjsWsUo_GjoMA.C-%M^c
%Z(pUujLM3K#lR%CU_/+:<)esDEk7;<%R2'Qd`<_/=[N]h)Y#b86NX5.i,=?4%cM=/6Q5JR'dcosb$9f)Y/tg;+O;p%MiON&H&l?t
%H(6gXH:e0'St\\UVK6g`;%W_Z0M!><;'_5C:+<*QO[f8.?rYa?7`lNn0`FNY,S1IK>0\^VZB).S24^d(<uS5c"F7"&<%5>>E7n.W
%;uA'4l,o69"F2U::*2nH_>*kKH9))_:Oa5Pe53,V;qY(Rd4#.f6WH.OIX2DBcE0%11X<)?%]H7G)b;fJ*1ggW\,8YJSC`TS&1>au
%Ed5G6N\3hiY=p=@LT7@@Idf"3Pq)[Y1qG4597IA&IS]sk+#r%4ktpr;rn'.-T)>ELN^LQCN`b+G5FtAh-%G/TWC4KKJ*@I`me_)S
%q+H2e(&C)h97IZG_u)X>&:[XSddR)QrJNLI7bKHt5<uCJ%WKm<kg&^JM1G/JB)O$2&+">iha%,49-sG$i$]^&LAoc8oIiT2GGgO(
%:JgaXFrL$1au@PU]RSaJFU?T]T),%??s`<e2m#!P-\!47-TjMDVZ2DBQ_6LZ%_NE[I4/q=BZ:!)[>t:%.d`B19oY,/VNG2uTCr[O
%.;@LagZ#:28r:f]$fR5TgO;'Jft=g1c=a,05(\aq50MddHT4f;--\?+IJ5@to4]6O=#k8-kNc\KS!HDLH28n0OqAnCcScUZ/N,J-
%UR,NI%B@[\YV'?mKpbat\'boC10Ng$32KUuqgHFoX>Ds'KV/s<VZ/!D_,Mk,:1KC.n8k&E;"lP5"7kM2rJYm;Ua!;,]Oa2/QR-lM
%XIE#5a&H<7EAUNccU!VYn9;A\:HgKPA;RMSP&:k\Mcc'=j:&TJkm"LG1BLFa#KaQCOmlZ=5PY[JDbq>HWf\^3,hXa=R$.'(ARbPc
%XRd=@Y?#2*ciD>CA5H+BQLV!`H^BGO+f(&.C0"651Z`"Nh3-l].2V!\\B`jCm"W$m,c3C,rG*rRErA]@)aCUXKe>s@;0d7>Zi?bG
%k?NG&bM]bjaD/st>!D]f93m:2&]hC+r>1&qFHc/A.tP@R=je\-Pf6FLi'sn&gQk2+-B+*O0n-stS7P$iQ$bo_=P(;<';Gup8jUV,
%16<3Be4cA8mF!UoG6ZGgRk71e'o.-rW?kHOr?SE\/bM;7BD^2#1n.6QC7:-32-[BnJ>:f+T7Qq%Un'2A>$\GpXAYuj<BD4NW8N&g
%TL;YbrT#UQN$Ro-KX'rAV&bf4ls0h;(oFYbm,!he(c]/mSdr\=6o_l[XRf];Zi60@b%MM)T$&+#6G#dJ,ZP^664-."DDXo"9"s;(
%2j@)CY,R;SC>fZB4)]eM="<9MA.[@/<$&Z'@l-26AV"i.%C2k(&U%^80ZZf1ljTF\K+(U(neVa>+R]W-:NYL6G(X]U%pU<F!Ti=A
%-WP0DJ%6RbGsbZR-!2IYV)X*Mb`0aCd[l2_Z)$u>TIpZjM>a859f]I<<ofpJG`H:,cJ-'C:r_I$pg0YhGURdr%/DGI8p_Fj6s850
%h1_q?r?SW9\2'V2@6qoSiH1H%\X*GpKP!9=Y<'e8Uc-_5q@qHlWIKdN^/+9PgrF/t_qYodF$-C@X\6$;GkF0.=uUhOU1K!-k,>f0
%dGU61,HOn!_(&?`Qe6Im(_=+jOI6aE\MAsi,[k;_$2r,(*(>Zl,ZlbOop=Eb!7kiCIgn805e>o$4Dr`"ig^43LkQ/<7>YlX1be,l
%/V3"/MU4a0Cj!n5$rCP=P^SClkKIP?%nXpX?:n!YX?VfWO=\98?1Kl`2cKXJBd!F>)#5Jo%Ae59\g1k:W_cjpS$'uA4$n[T(Zb`d
%*[<XU8tY,fG"/Ql(POKX_q3B=K@P^0ag;s`%aa!0kWBHK'*Nse9FdUZ?cdK?c78dbRgg)[#no)'q\2Lg[W9K2SR?gUU]R(]oYeJ'
%oO#aP`c[f;SKUiCj9PX2Z50ilc>anb)=,`D$!5@@RB=iI*'R-e6P*?p#qfWtqaU-I;r^?)ePu[eNJn!RdnR/#V5-"Z(LrpS%sUtj
%E/S?HbQsOa2atjIe>B`No?r[9RY7dq$eDrj%6499i.brOp@jfspOi/GMDJ6Ncg.O+V>t[MY#&;0)f)ELS`8ACKdD)>PkXi=J/3_c
%-c"^a\i-0GqCDD#ghC_E%Tk0s"=8F(:Z"Pt_1NiQ,+&l6oach&?b+;&3@l>o'ptHT+AoY[.>J#J3jsnjB6L/t=W07tO@itPW_TfF
%IWJhnD9hFmW1aJkCl\p_gK(a7$m_\I5Au$Z&Vs@3cCE<X]oSCTF"mhiQ6DW_rgp'MaD&!",bM>4&L&=B]<m2;dk@f0*N0l<S?n,X
%49KP5#E`+Ri:'ODr9#kVOV(s@h%ge@YFQsS,)7P$W\!ZZG+KiPMcS!5%Hk963sPX!0FB8GM/7haEs2&S/>9Z<$1p2(j?)s\E^s8I
%qabU\WNN%8bT!d"kBO's6Bi85VAu6X!d]-l7Qc(?m%rdi83jOWW_1a@aX30Y-GGt<0Gt9gWh-?ml2QT)$5/PrQHaWi2m.]kk0e[@
%os=Qc$56n"Z&Unc/Q.s,Vk]b^h"/TcnC2"H8L;4a)?l8B9^Zq97+Y*^.Jd3H,RI7+1#]&o8!jT!NKY3;S>r>>E=UB:&Ip1$"3-j/
%,@RALLG79<(c14nK?'0D4?V%J6&NO8aZN+UQP`2+P!S2_M'JTI);:Pm`GUe2C0ZGIKoi/b_hkp^UcZVNP1Y/FY#(oS3I"dYV\O4u
%X!Ck>f>d$p@0sC?XAGYUM9Y-<T1%ubhGb#Q745Z9>m(%#'c(6J^Gq`].!8$Jo#p):\Z[8=QAQ:"'ZWairX.Q/SWk[dJ[Wm$e)?jU
%+Roi:-<B;8q6\3E&Y/(-P49m%;GIE/$VO!SoZ:SQ`B%W0c@O'nlnbCFZ]YqWlL?9(23sUAc9'hPGluV2M-<f18l!/;@D_=p_;"]c
%,\E3mGu3L5@Aj/p.Eq*`<*XM]<\WNJ1-,Rr/$@O[isF<,?D5lNEs24N20-4nV7o[pL$:_kFm1L[cN4a._Bhc*UIr(,\lK\,c?V)6
%H#?2Fm[U)K1rnWrTBCObNgZ\K`,.8ROZ"TG[[7]NhSr,^UF1@@[lt%p)A],r'W:";RBS*o-m?H5i3">@UCp:$9]S8GN82`O#+MFJ
%>X><ujCFgO+*#c,_bF`ROQ*fnU2R]5_:;+=SMH-Nha5I\iZ&WDTMCdCJ;&iU-U9u]Gq.ZsiR4SC82)6p;l_+-\h%"<%o5kjaFk9T
%%Z<*!?mrls]D5$qKIAI&l9Z%L>/0Zm<rjV#UX/N`O(EB(JM)'Ud`!$a/O@*-/2S[Q`L.=kY"[)K+d2D_Z7425,iTHQi@\PO`1@UN
%3(t,dSsE+_3:&J&^s".`/'3fE[f$-rYbT("_?<s*CV4V!&Wj#XRk/SCTotkKS?su\F23H/<'ZZYgdUh?KW>h62K`1.Pt%c!GXiqQ
%57jt1B@RMB3i1>J4Ga4/$e\Z+c;2T:[#='DN=mQORdr?VP_.;'J<+bm@YR783'!,T(T.'/P-Dn3U!i,,M\Y/T5[8E:F\utB',,gi
%pj&`>>aJ\j5iUr^4b4U50)_D2+KDeJh?LrMqH"GN*NC4g.=@Ak%+a^>(.K0nFNP_R3\"D"K6Z4q=I8fD&UjM7^PTpdCKcm8P.Zf:
%$+_V\$Gt,!pFT5^CaZLo,K^\"3m"oVl;ibR8Bu=%/=Irg#1^oTr!8K(k*f,'$$k%)WL]-g;8[)q::;Jh:&79b_\+_'nNBJ>KB/P=
%OO+kU>\fjo^ql,:P\!1!hs)Ic1q:]t7Kfg4louZ:e:jg`BjhWQ\P&S<>\R?/+rLrY:3'5]V)EW!%g8lm5;uNDI?[!gqZYbXp%<sm
%;21:A\#Ft!=.(h.XAgnNn'J^Bj(CS-Y4'S:S4#7dX5o)B*Qa]M1RWiM0(/[O%e(jZ[ZL&d)csN2Lb`40\c![HPpG'^9Ak[Q[*CDi
%Nke4VHHPb'<!Fn4d-:C/-W2,aIDi[0g+Z)lB)%'_M5g9/Pm6\5Ufnjr\uCTc4QZ;M!iVn?P7c`K#SQR@f;rsqs-ll?LCrsU`"9=e
%MB^UA5/F+<5cd^B,;c=4]$:i`lY@6l.R6W<.5?`je?0fk,0jJo4tKMkg`'*HU6uaaF"G3ag&V)Z9V9=_s4dZl?I9$kQ#Ia^<2CLn
%%60T-@`iuh+?0.E?&DK>Xu"#e?c`I4BE<#!X%Zk\a$YHW)iZ$+42OkXq4H^:UcBTtYTl)1ZaDj8rgUb"S16$gf-!hRGoPV$j#kl4
%g,]0t4?:O2puR9<%X%%)jU?=j9Y$[`,l1Kc!q#m.3M3F:ingZ)XS]."^N]I_&33qGP/!tPi+)c_NnTOc53.L!Pgo98C#h)LAntZ^
%0;g):B-*5ZlZ'$?[nlr=C3,*H;o8Eq?a=]tTag0Iq[5LS=.2!oH4TmTN\Bln9_drqqIH5SG2.mLg"tctfs`&GH`]Nsdu2;_dH_VZ
%W&O8:6%An(RdP6WFrNTs\^ldfXnCgJr9#.0?7e@$$La^(2f@7ING=0<j6uL!;.5#<"0?Ig%]_8gHl"KUYhj[_B#:2Q[\Eo[$ceF6
%nFm(cjuM:Z:?(t91'&Dt1k.uS\0Xj#7`&c>E#?#fGp_EcK[$`,+?RNs>P4Vm-No_]ZR97nVN'<#(,1Rb6t#kW(]bcH)RED@gZq?+
%_=$&83,H>E<e8rs7K^Ahj$oeMMq\'YG5XB:QZp@8=eX?$R^J/@P()fY!?KB?jo2HAj1%tT>_i^J&b1/=<5JF^6"R6K@%dAH)hl/T
%W,36n!pE&2&@gl)QhN(2.fi/EUqgJJbp3"THhhsiPX"p='`'j&nCqqus"(7jJ*07P6!kuPHdPCeFYdoYnmWaaEh0/ANoFYW*!knR
%0"r)Y,PEP&S1$ou>Uq",,Q-_+DBpY&FWqC(_i#r3q@r]cQ`p>9C;cZ9a<<S%>1!=_f#_bA%/N!s./1;mYF?=/#(<TZeD&MCDFIs[
%f82aADF;@cMZACD:'>\=W;I%Yr["eqI>h.M%`r\._9WJM\/AQQNVunk*TiBI.4",N='5>BDYJ/j6>C4\jQ?\2DYCZ6+'ja&Z`'F!
%(]3F:6a*`f@JDY4qlQ^b80EC8XOY5.Q0?8V5$eDJO&oZee[ql`s6A:L.q*DdGJ3s%qG3-aMX"3r;=4Q=Xa,0P'it%^e_aOHNk64-
%41W7(5GpU!X)Rp0eVNqYhckKCN^joDE0?C_G#9qiPAH$)gbhY=lr@ha;<nbB,ZdHC851i@M8>YAb")rA8Od)BUaEW-.K_QM#TW\V
%Ot/1LUa?t16?Z(DF[QFLP#4aYe0J*b@'CsqZ2R!_EolDhCQ]8XAC`#-7q8bM)25sn9laeJ12;sa#Ro90=%?Z&-5hNQ5YZ91">X_T
%&I8fr,ZdHC=A:OPMuTq,ac"(He0K=+^<rAp5Q02?PN6$G->Sc;ic+9BaX,QRrgG+A&mfoZP$@O\\L,G1mWI,,Qf.N/f-InpIGHc;
%=chh1.mhZGJ$\F]>X=Sl^V<0D?'2Ng?OHi1C\=#)=c;fTrV'A*PsO!noNW4r#C!"E[\I_BJr"P-HmqpBrVe9pKgsWKl,qum9-pE&
%jt`ZSq#)M%@NfLj;'#T6!pO_JCQVTqIt`T>KKjMmOl??>&lM>o[7$1q?X\d:C!U$NAEgkDKTqd8/Wo,Q^V>Hi'5JYt"??D<[<?Q(
%^)OJL4&(%\T%Ns,*+PG!!arX'X!cV,HHaki,(R!8J=Y.NGr][tlDO$RF]P\Xc(D7J/2ZG?>h;tT$.lLa9^`UP%3@5Ml]<W!%X7.P
%/;Nm:aD&C.?F9L:93o;!1pKrZG9Q.l^?B/Sbl6L.[sA8@H/&naok;Pq/uU!BZo$Y.e[n[&o_>/7YBn,XgVRBP$m`o)?Lt,DXN?fA
%/M@%uLKQ#_jib-ag/*,bc0eJ<iGGn-_5LBoAO?W$1LR*HnUaZc$DlIKIsh+aO-Ms0:ko"Klo/f#flXM;YaK=6@'a9_?uocJ?q([8
%P#@%Z=":EX0EJmV:l!;Gc%=2@?.DkHjF:>*eI#!RC7;#8L1^G\a,=rI,rhd,jLFJa1D5XT7ZK4Dg*Krp?qbS6):nSC-]U.b2c]/V
%\0^pl4OaT),M3U`''pUS;p%gl+9&H_Xs/T'9,2D5/.I3#6I6+g58CI!Cb(^O6oL*B/o5d!P7<ubRgGPbRgtnl1TIZ.A<KR(LTOf1
%<BSphMGpcgZRTS+W9=tuU;Ef&poYIk0Dd'Qo3L8DD9f_cs(<0l_spB.#VuO:YRq9MNYR.UGmKEM98+odYfqZ&K&&-K;>a<3KGaq(
%1GGV0/.i;%*'#AQQ39.AE;uld-<@/]<Q!0'Ho%SXfSYTjMH"EH0MVBJ8HT[X`Xe@>KD<:&0edrA0:IW*'L6YW3db/mdIk^al2Y.i
%=0$'>b:2_bXV[e@L-jhg,sUpKgq2\@Ga=NWn6icPhj'SY8enf1Cb)hDq,Asm59AQaZ8lI%EJ#,\ZC,7`J'F-B2P"Y&ftc.'d$.C7
%LfSh0)."1=S=9G3T0NAF>l#R"c\B^89\9bLLJ<C1>c+D1D6(0S=)OG!6k43Bf5YZZK$ABH=,0Lk<>Q>TZkBahnXVEXmQ%H1J.uk@
%E_OMmF@RSU<H'u"4tYA="(@eg!f1\t[d_<??[40rD1YJgo&C'l-p:+`7B(kVOYTOu6lg0(6;D#WV+[aT3]X#`q[F8>q$3hN<JW4N
%c'2s<\&7FlPUCRrP]PQphqP#FfXe3<.Y\A9l\ae.A_9U?#,5L0Q=X6SV-=jSWhk7%=%qL&_c@D_lfSZ=9Z!?R6[">cN*Asd(r'HJ
%at_$p<U_QuR`r5tf-n,,L'V*W>/Kr#eeG,7a>9hHBs+<.7^U/>a"03J1<rbRPm$Oq`]_U3<TYCdSJ56__MW:.L9LKSYCOC^b@NA4
%%g]X16q1<0X'k6W=Ki1aC4\%;Gge;/D@-)U""uOi>6Xf_!V.T."#s*]arR-VG>t6?%$Wb;O^W#jK+GJebY<[Bip*;'JYfehRYIf0
%$:G^QN8HL/__T$<6Lk]O^0V#K\[nnI\tSHJ<>C;q^/bFM\tFeDAjYp\5o-7]qug(,GnK1/J.Ss2K&"6dE?="&)3?Db-Q)ps4NSCU
%P!*1g!?$TUVl1lu0M$@qZ^dc.17`r,&/rl5?nI/qAgB$."$&0d^`G<OY]U!4'&[(#$7]3ZM2\HM5aA%45bAKXiW?M6T\7pIH2n5M
%^]tmi@005@<$^C_#@%<Z"1KaL!/R\k4WSc\JjS*tU+WBl$*;2QI0b?_'f`@KVO6ER[5M]Z$[PbRNUfBA!apQdg85Os1I5J.aNXnQ
%PsC'fBPIMrPtJ][%LAGpdl,;#"_j;gjuu="!,GF&o'UOg_crEQcM]BQ>iGg8Doafoh.?C?P\ZLr^q8Q1)o4?"\iP'MF6\%k3+maX
%\6dJ6JE'Whk?<LpSq0C7OEB`a$2!0]9@HFhL2=c?bd9&[_[i-#)<?FFl1ba7;sDKtY%9YWl4n.L?Z*"\/Vkcb-HjCfhr<D5("G'A
%U.5^A[%cY1L4mTc*.6iN;9_iIeOP^Xl;E5dT0/s5#TaO/.<QPt2UUFf8tfjm%1Z#LBYm$`KbC>V_nq3>MQ)1T%mX.<TX5agY<r?u
%Ql%5/";RkO"&O(\=<(UG=9=-&WJ`"<0+YcRoQ"b1L(>[ZGs--c.pp.$YQ?WHa/[)J!qS6?d*l+L"33hs?\r;I)#e=e!;/Mo"<T'-
%=B6"`Hq&f;P)']A(fCDl&6]>[L.$_KERuIXUo>2'#LEI8AC85-!;E<U3"I^9K4>iAbU]H@3GT@[/r9dag:.%CcgXC.V]jgFrP#$/
%$c@YRL1Jd[fl%1[0-=)r!/O^-NB5!:'*LtbDh;o5L;Lf_@OZie8VJolLU%6p/K8_V(NO7]^.?pX.0X:ZX?o[V6fMa1RO@fJ/XRo1
%!tEk4[uC!PJ&ll$*CsR$87]nT?dNbo'Y$tOVC8qureN_aOF]VAjZtB#!A/^kE2F)<0-Kt`&e!\W`04YF8^*JC=Z/g?%P::Q!\$E)
%X5\<aO_16'lmo=p;qMts1gO3e^P1dV[$1fg.D8D@P1Xi*@$9(hVh''si>Xa.n/q/ZoQYs/Q_[\`b%G[>,k"%IZ%OV#(M:=3s,\Y*
%&lY4=6Y\'`-._9KH7?7d@\*<[](OO1PklinV'X/r[9,4G9rjk#[PB9E8omXE#c4oA3iM$\+k6f\L.]sGMU[6he0.8j#F0&Wa.J52
%&F*5n@j/9G7>nG%JeHdg)V6,a5`[auY]8ok(1C#G!`Gi1L(-Oe,[s-g,TB3?g()('SsKD`*=:lQ)I6pZ-1/lJC<QP6@[3lj-0dI<
%h@TN?6D$R-,8>1pJC9+fbL>*6,uVf4*Mg!5c>f'Yb&@WOK[)E><0"DK,05mC3h4>D3irEDh1SNml$.I`TecrYlO/Xf.M`/AjgqHd
%5F<e[k,Jpe'UAq-p3gr!0Pn_H5-\O*S!^#7VHUpt9$6P)D+[uEBW>e"oO-,oKo$/@VFI$'[\H*RN]h+S90T;SD.0]D\OFE@[=UP<
%HsG9^L`]<C.(d"40Z>5a_cNsGSF!S-cG7Oa;O7f02V\)CgO7uCM"I+Z-m+jnB&@3VjriP<em-a-]21rj%=(W4gj$W'LU;V'[k__E
%o$(Yr7@,kIBkri4"g#E]boWqtFHYa"]\6f%6;fK+`aakU%C?.-Ws>+o&>Y&2SC\mK"Ks+B;j()oFJBS6c`3cRW@qqe6oV2&/5g3/
%=p&Aib)+\EFMlf7X,dUg5g#mg.adZ:G%M3':aD$"='1g9+!'YuY[ab4<"ea';QF35_WqrJ\RKVNon$<_<\Pl"@PIi18M-]G^a.H(
%5dIX%aiJkXhCI&r(Rc^g0%m1RD75jC1Y>/DA_@Um&V3+\Q@m]LVmf<jC;!"TT?fJ!1Cg#!f;5"g@#[U(!J2mU6ZBu_#kW.jP-gLn
%k"AoISF5QEqF?`.E;K3i!8PfBbo4!HI(:f]=#jd^fp4MXVtLa]Kc)Chqte)))0;Td:16D,*5mi-boHMMN;&B0Y5t8'`j@C=fp;W'
%GSc.*D!9bm;B]5F/^-A>,rUs(nn1nl:cd?i[(i>q$>)so(9^!R/H8-o\c+o?&@E&+n5PE4b0PpH9X[RYgY`:d,L#AJ[Sgj5`nf/,
%%,G0U0b7Npg$)52NKi>br9$0%1p$R=f`*$U"!F-:JDaR&c3'07!9s(TadE/)>X3<f+?:OZc3Q\X;!)BoUh1K_g$kjJDqhM9NG..p
%jpc7dO9Q2j?F5R,gGlR&6X)RXR7#^h[%S^'e&pb,DhSl9$IJs8SM<$)MoR#SQQ:,7fjh.U1-)+:@1=<4BTbj=5!$6;_'GG4:"hfA
%\I&E58D6<TG27gIY,;Or6V&B3Wfa.o[^?Ol)T(Wu7C#%2CbD]\4]4d[-!_kjVGCr%g]CB;.BNAFREm):oh"".ZS8$5G:\esfLFN_
%k9$dSUGX%Kb0lUTWMDIm@8R!#8b+/mal]EX[r6>N%;+[f1*rF?\!_Z6dC8B2-8'pCDgaV]WBjHeJ+:T4:4aRd@$@43`mDo0qR9AB
%js:tja?R9SS!1D9R@?W(EcjWn1P]edcqTicQne9IU5djU0cRXAMNVWDK=i.:Fn.+O1ugKfeO-a$D1h[AW)8^a_2RE^9@C&YT+"\M
%GJeN>R(i7X>\X?mK,M";Dj^6XdQsae)*0``)b4WhbW&!P1Uh?B$6.2K?;i/@*P_8_Fai]uZ@Q'UN\:'?Fo"EreKi`t.bM#APM(g$
%3>uc-34<9W:<!OeKlY_<VVA+uRH0XrU)bi06?SP5#0Dq"dBhXtf@<h6]2:2PK%JsPh(1m`DTUL+rm&>]mQOckG5DTcZS*XI9`J2r
%3)J#o$88C@#lLOW`!+I%&tMZ@mQ)V>)T78jbEet4I'4&5V/(rsgD9Jt(!&r]:&9B\d;9>rW#bYpEL"NY-^+=h8q0>dT/L4D)-0c$
%cM_s&6+t[*JF$q.F(#Bh^#.[m*S2M+frpT$-c>Y]0tW_Z$iaHgR]pifluq.Vj'F\04=WGs5d/uRqdHL;ogZ&(2$nq:Gd\*>.!FUR
%mOu5`!d60r0CD%S4PPW_S#9tnT4+M8T[';.kui39*,7S:!t70Ie#=\WDnJ.Y#;lp-;T.W>je!N'r%m.Sr5q=BYK;n<PNOoln?+$%
%YnR`/\4"^N1&&0%HFK)j[M8A0W:\Z%]LM3<4As4`=0L_Y$A"f2_g'm_@^jrQmPU_N2&adKHIQ&7Lrh#2:c$tsf"9I@/l*[h6f8I>
%N@9kMVP#;*S2Qt=B('3,g'rPo,"`'2R+j/Ak'41l_bLoQUE;WqeN?U6%t7EpTm;VFXrVY2NBAWp#L)FKL>f4o_Kif7Nt0/i%124F
%S=bU6n.+N!7)gg+.Ri.<+d<+O;HgLNpY+/2NSYnO,GkpF58DY9dr%&9jtM"HVF-i_]oY=h4658e*9M9/=HLaB49Ek,kbPFF0BK'm
%S9ZPB9dIqU\S3PTN-QjrdLIFeDnM+rSTuqK"3"LTQ(>a#/k8]K?H^T/\TobcYN=oSgq8rjilAQ7[9P>)Au(_se8@Q0Q]HqOYNMS,
%.7HIr#(8&kr6uIBPbe5h"`Z:f2:1U=r9.da4nCa*OX#KSMQYu/Dcig(iN.;VlubA^YZVl>h/qi)3Rk0sa0!r?kh#FQON4ER-Ks%P
%RE*g(YP@1S'6QfI_[P;r%\[_dXh94a0Kq,!)E6[Ldbe]Tl]tM?q:3R8)e<oOd^^?!%<Qp`PHYtm=2TCgV827HiC[Y=X6FhS_sHNC
%ra7LH>n2PjU3hm(?&kDFDV30#e_hSaUJK!-@-+"]gl*jS?uj>I(*&70U?#_0Zrb0+EAo[\%ms3dMi<.,OR_eXF,\qbhX#.AlYo##
%3AgGtWG\uR@4%20>B`[^G9iaUSD]P^S'.<8Qu:$i>0V-!ZQ.HV!HKH#kBV18I"JA`LB]mP%Jo.!a:Y#iLGa'L1`4\9__>5iBM^'H
%6eJPccRtr0SeK7&'cCrEamr(mqPfO8NI#e-X:MEEkJ;-rMr;d#H7rcHP8*5(e38kRP;AWoj>XI#.?>Fe@XaTgr$n=4En&icQ&h>c
%Q>(8Qk0gF^Def9tgpBq=j$p!g7K;L0*I6DC@oA4FDX5;tZLm]YQig)U\@$W-b]Aqm#4'LfEiE1O)J8-%C`[k,Zi@P?Ho#ZLcJh<@
%RNk?t@2UhE@oMj9DM.PlTj+auQ'SuPqN%Y3gMeb/D(tDukIkKJ^*dld`_@?G$ss0b$ZD!MV-28blaQ`YrZ"uecf!XX3E#bm]t=;(
%:\?J!JL:[WZP%LpquHu=Y0iBF>Me*J-@B1;D2:3_/7\N0XuO_#<jUhgEY*:0D`&+Np2ZZh/"_O?B%5Io)GrA!cY2g08^Z__34X3X
%q?@IuE4#0$SQ6u:7Meq.],e=l1?;\n0O9];LGMfl-j@="#!T&dO5gNn+7gc4*,qo@im`b;*'L^_M,=q2^u.r_\2)nL]KOD/9XfMp
%-&ZKHN]]7acK+R\E\osla6I^WF5&?D3QZQ7c:P^saEIec@r_Wfe=0=&j2tr3[&_r$SdS@@cq+i"N_%;RSuT"qX*<koo2(^&:5Z&`
%grr,`[G&7VNAt"3,"_p.'NmGd\kF/Pr&#X-4G@ME8J)gurXODe9=30!TGt=\7KNoW.?\^>Jo7*VRYn"(k;[1r(O<YQ!LoH-Ei<"j
%c\&bVeAOu6*+U&L)trim7A4Z6XXq>$r?@RQIX4p0gk#d;/NWJR;5U'QX59^(;=Y8S/+&8jPpk,2T?X38dr+K\qFZu7O7esX92TTs
%>6Cq8kus<6`6:j;RIP&iEho!WE\5G9LcW'tA,<AtWSXLf;=Y8S^D:C0/]rPTD<BHE9NeJRjoUe%GqDW@O#Zg+p,637P)#E-af&kN
%>*N9tR!.f*Xk0:HDpu*BH&.k'X1urd1p_F$9eKRT_J;hCQF$PZ]NeN_bp>)k&#Yd86/3k(PJlB[4ho?J5OuoP@?.M$6Ss_k.o43(
%rhQ0C5HsKD*fN6Za*P:obfp%>Ac.uSpM2ck0_]@(^Gbh%1Z?q8D&A\=CUYg"Mbp?nY;Z,is4^jsSugbJA8Ubbk$IG)g8i>.KT7Bu
%IXBdNP(Np>4XE0g-NN=AFEo[Jk@Ts2"`lJgRo)dj9Vl.Z\:BVQ]pJ%'4pcC1g"?>KX+b`_s$Vk&7el:_!r"fPRkD1FMg4IW5%a3@
%/bN^-3iP&n^N_PW=][*\]7-o<!(a>X,-B>2-e"#%C]7S-q/^7fL9,CRD#R8"/B9L(LXN,H*[1)=q]qEJLnp[rCJ$lMiO;^8s3'mL
%r[u*K_TgjO1:[bQ1/E:c[aaMa^!lF7.!-hXI;Z2(NR,g;r;"G0?bD>I65@Hk46Mc*^S]hV?2E'uo\Uo9?aSf&Pcd*]@=IL!rbRaX
%TZjC)8M?1#:NW0u_9OF,?[6<%Fr=,6#(;)'5Rn]eSJOrH?q`Kg_do%,6(MDWgobkI/u!5)f/lpYnT%BL7\XG]$>-/Ej:+8"nQ#e7
%=Zd:98_MD5`Ba#VrT<9mkN@>moDJ%[*]uE!\i`4W3ud@4kO0^bTDtISs.,e^]d-2@o=n4Jrg./VGQq8KQ?-Z$o5hWEg+f#drm1M4
%n,/^Er1*5P@qK&tg<]RCoG$qnPjDK$BZ,C]-`p614mN0b@MKutR=i*M""'?!j@FCX-RZT&<0!H0Q8S9DL4LQrQ8R`Bjh:?o<)\(M
%1(?G/^2M^M/^onf'U3W:2"-N_qKUj?Rs2s9*O>37h9ld9Y1.1B-C`"5g&-Q/e(,k@ouci>4,TKMO<mB>&A.5*nab"Pgk`PbmARH5
%\&7@To@ig8fd%WLPG=Tb2;h]aIZjmr1#LpMTIKfJIaRHkHTbo^M0$`E[qYb$WG&apAkhpO'V?-Z>:b$EUtUGW]$6e2H1PIERh)&j
%</&i2I:II29^'u;%]s6*?_X;SGfWjR'uRKN:CCp79+dO212jhL)_^g&bIm@#DnO:50D!3,]^[a8;IQ&K2I9K%L@ej8NL))s5j+,n
%b;<NP(Su#qFZraQ5h]iScV/PEDV]pl0%H2RqA.7k]9Ds.>=OhK9XF]%M*):SR.c;0jIp#]Y_f?h-?B*iM93c%)gVD$P[?.)rUI-i
%n*Yr'U&F\1E1CBm2XS>#rZnB*#`eL(0hlY,bjU([4t^0I&tYND3.D"Ym<Si_-0.+:qU5<+99W9&s-`$am@T*?q!\#OC2Vd3q)P$-
%28:YkC/TYO^R[O.M]urSHt_gAMLQtN>'Xf&n[;F!1u7:Kp"h2_3U&q;["`a'bNY1&c/s3UNW4no_!ahgFqt2/-CNWbZKujjG3^V7
%<EJULf?giPhj$P1E)I9D2=ck#GJ0=.1,K1o.:O&m1C#X[o"bX0KDC>EP7UJC+8fL3A'?%'I*;@'f"@%u6T*-4pG&1Bd)X3p_n;$b
%[?^0]g&/LD1%/UGRq1Z0N-QLT7f!u%3u(pXb]O*BD6M8\g0qB.2I=Gs4I7eOj2UXW9Ks,PWn2VUc\*?DYhuR,X2EY,WIbfB%dK$Y
%G9*TS-Uh:3kM.n@(H\:X5BB[J"&Fe&V3p<%2TK5R$JNmg?IZ(=WI"F!-Y?7:3a"91PbgL\gig.kJ'_"E7@cYVk[p&trh,sQH-fBZ
%Lc'\-:hGr]luRoG@ZGXUFlPUKHp$LneO_j:a:kBUfVBq+rl72sY5*.,`s1@!j6*)e541;D/'V[)nCBc$,Ze/4m:H#$54iBKXkLtS
%j>Ck?k%S8ZXp_saOY\3uI,uM_atNM36c/b1YN\$3O<c#?_k(<+5L`j$N_@Q-m<$4Im_n:u3bJX9n]L7d`1qV6^8lG>[G5lSEr!(Y
%?Hl3a>3=Aj]UG<kF7X-a?Hq;B24#PG]^=8)/\F44<nDCQSf0>9oir!,k2kC2S=>jdo5\_TcHXPC"kC7kj]jEYAu(r$<,Y&gQ]HrJ
%8N.Y9h-h;T:>93KY^Y?m\_HfZL)cJpr.,9?^Z?[&%J2II)Ru2bY/L86R.KK5bi!Og-:lqZEF.8gJ;hT,UDo<9d2-+B*B1k#q/V#r
%`N?@Jn,?M5eLBj,Il6e=W>XKeoIf<R]k>?FEmc`oAe^otc(l*1]'a0:c+8mCF9^TmF/uX"%XHE2q0)SB>Q;E"W\s\(0NTH[JtA4$
%rI(!tp@\];+o(%FV^N51J&%lDb98b:ZH[FF,]@,;;qpse0e)C.>Y3B.[84YSPZK<_i:@$D8n@"3NU+g,V>N!D^#]]A/'"E>U'?"g
%fcHGe-fuoO*:>*M[sl`JFZrVe:5U)*JgTt\Ssr?Er&TZm>PZPs5J9WVL_JEM+atcE\_E_MbVOmNc3u>u,28O-%WWiLSFB0^gOk8T
%N4p8tT4;+$V\M.c9+dO21/Eei8^Rto7J!&5g(E"N2E]G[dB.3C?h/X8;k>i$i-!2k0:c7X=(/P,h)PQ4GoloFT:gMlTjcT+<Dk[;
%dnR`aCD0T&(fO]TS.C6Dd@a6pL9OtPSm=ap*pl0j&b<A9\=:6!4oOoU;=Eq-oq<\m4?-*@6_!f-R"pEAE1@CVk.u'&*UqS!`Cj7K
%o@Q&"Z#LO@aRb`-:2A:!1VRgOjDgqsbbR_`_IrZ!Y.';Gl6d5#b'1PTjsSB5I<a'HkA2sR@%rPjVT\LsL7.PiC-c94egE1-Sm(\>
%O6>GOZX?p7+10VWkg"uWdUq-)OP>&h8(lU<]8>:-*So::I,+W?EKdc'R=@]Gib`p2`aXrbFm>T^EH>E_M3,(8+5IGh8aE#-LJ6L7
%C[3U8W81)#R=UPIGU``N3k1GN".nn<#VIKoWOF!-chhfs17sj9Q/cc!=gOij:T/21*(!qXIhK/AH@(8BO(jes2a#A1h3mJ%C5!Yj
%/I92]o!TW=ckH+"6*FGIRn5PZS!:!f(R2dR=0o<FRS?u1eD'H98e\ltKTnH@9CP5/Cj&SE]LcN=FoKt"4t`2!9mtT<l$G[-U@COK
%RVX<6Dgc.fLKsE42&c&nkBHTAIYm12>[htG(gQVX8GBf?<B7'9CZ8nrAB_ucUXsL,(M4i:(g:J1V<G;CPkY+Oa6V;p+61dt?G!h1
%O/hVuU22aJ^RO:'C<M4\,lP@,J3))QrVAs`&W-HY@0_5r29!"'US&<$9=7c`I'@]ea6RZ$[c;&4RIT6aL_K7cG2E89D]A314,j,D
%:mJn@iR8U>;#:oLmSV@*28FcJS;c5rhBeG<F[<Dedhn.XAK.M$=IG1b.N3c?>gi].Mn5r>#**B*A*>CkE%K7'@*M\Nf=GZ/1elA^
%nKbW)A""/g(3$Pj:BT[NfRsB/f3BL)%<a32N[_-+)#jd-l<)i\<Em!3#8h/2Wm$po(j6C+FrXdXeMRfd6<W'3Y,M-3Z;npl,cH`t
%];X8[iI\f$1ubZ4Y&p3Y2#rT:*1Sj-c#edK.>CQ!W%#<1Au9:RCT)o=.X2i<2uJTfT\GoL\2R-6V8I=6>aqGA3_J+F9NNUKBW?dO
%TpW![+MJ'F!W`>BAe6or?YG.'C?(TT5>mA70HNPQq;lf3g*:ugD;ZHi1/jqiFN5YH_U`"VBT\1@6(Ee/6@^4$Lo,E`U.ZM%(Q%=:
%"%^geHs3`n2PP(JU;ZF?,;hAI6'W#A>)l?AJDWa8JXC'f%+Bo+HZ4A1gEu+MJ9Q\,rus\V49#.f\!k:JKgYE97^i2/4:K=h5%4-^
%qPGc-#M-fm&+G)?\Z.("e@G`G+"bGg<>&,&%3gL#ncVm6OE\9E6BEK8>`r%LVWE?iAPDJ:1Rl0dRi%n1^=e`8.(3jB34"He8(NHS
%W@^=,DCNs:+n<b;L0GeKPd(WH*!Q/_<#!bgZ?-&t`Gs\KWW&N[*qtX(>Cdsba49$8eEm$?(V"MckSYI->K3kG@Li[=8hacLn@AsW
%7:l.!9lj%0$nHkr+,qgZmiO,DBQfDbL@*:Wf]j3%EQ?^LYe[-"r]9YPJljtG`Ws"C>Wn.f5)>8-_Ejeh"bF_e-GK=tr&keq$TbU9
%F^GesEY'^Q?`-e,SLGe1"S[uJZ(d8V5B9mr*_B.4&MEMdQ@@t?$OAg7$BK:0H_#&%0a7"67TFQ0'4MH10bit.^S^uHG-aF4dbt-D
%TA*r"SWggd5egsIPBRr<lKrTO)O*lk`E61"fj5@N7aTE;BV.Z_*-<YM\F/'gd<,n./;<FBpGiLiOAeI&U2Dr&d5?pR+rksq&Og25
%#ZGTl-ot2CO!SW/m77A>?W09.pn1M)O.tesmR"Xm'qKGjg@`qbB*8MrK*P+FC-d4o4UG;LHd18dj;&<tV?2g:W#O;1l+.(0gaaUj
%\&LHV\TCSuI[XtE]'r=oYf;T'Kc@frfK&CZMG>\ip;;TD3`fJ7<#CV&<kZQY%5q1F)smbgDnY*%\oD.3lu]"GrSOQ'>&R\H$_2gc
%GnUPP\CW=&[c:\01i0i=2o9H3J4u&h_h6<RTbY#1G+hjLkV\OX*"qFb+C2YPWti)5koI!E]a!Ep7X^/JJ76':*/Eob+aNb)r?G5s
%1hS455m-J,>fX^Q[NhJ7@tEC/+(:S7D@QnOAK8_,auG=`:2j#]h9cBSn,/Hgk0L9<TAlaob2%6jM:t1h_Emfi[ns'S]A[bC;=FKV
%6qR'[e;0h;HI[5&RAbjB&*=ML7]6Z?Xhn,k4RIj#;.2D$#t8%mZlR]^]o0a6"M3&l4`k+A=n;ch2r1D=8jnd.(8TLe0a!:UEb@K!
%S-_>+g*Wr>'-SZEaA/qn!bEHp:mqguED,F\HKQ=rII_9>mp9eJa'iI2C@rL9AEq!9\:7mP.I+M+WeOtsVBTB..VTV!fnQK+GeVXk
%JRim)-s*mC%&cRT^h)`5?bc=$2k'VMJ$%I\H`ug"F4ZU\9!]CZ$*-,a]3FR^.+)>@cscGVPW4Po\umrG&kCJWa3ihk[8=0B^3;S0
%(_t1A8dr\gC^)ni'#d^B6Z]AFP0(=arDJ=,BcP"U&VMQeBrHo(>1tBe.$!7iMVCqpV$Pa+mq^uE,.mO5H.9QO1JnV)[5D_.-'3&W
%)>*p28.PC%b7ToZa#"s:@d't'lKUo,>h(SEh,UV7OE\SK&Wqd[5j`EpIM0+C#,4kp[MN5f5GPLu_?]g%m[g4QK=d=KZt8W9[l4gZ
%(=1\,mj/Wn-RVd!g[V%N-]*A>>I5qK'OSH`Ja:iUF9%*`Kb2Bf6PiA@_\4):!a5sc!%2Q=h'bB]jA9Uc3bPZ9!['n3cK-l4O5EqX
%a0<UPL9#*ik$4ZNEORI((J%UhiQjQ(B=Am'^$]1=")8E+M7?]=V6G:&CLMN#JEDPjIAHKZ$[sV/L?VO\jHp.#gPO(Ks%SR6lrXZ0
%Yf1+\.r.GZg4&MOV#J\r[>q]5o-h#$3CrPbHE@5EeHgX6BV,D1./1VjXpF;rDq9*#%5D(M,"Z1SO<DNM;%$Eno\Q5+p=Qrj)`/KN
%R1>UeC0rQKQFD6YDlr*j%Y<i['Fht.'*IWnTlH[U]1:@J*I7\74%K0RYhYuagn#O,'o"I2-p4:)rc/D*+ab0N;2_<N3r+ka59R[_
%eLp4_=tRgt3sBYA8n$mqe8D\[_Z-'bcj.nuI*QoEr\I`16L>%/K$$=6`)ik#i=]kEUpAt<F-4[,245Uf5-,/XRD.p>=J?M<U7Y:-
%K-7"0,&.=\A/k2R<9SGYnTctHAYrZsqbcBRfS)WpQB0bcIY[:8DANU]F<h=f4t1._iW.4*Qf_JP)F[2c,],^=eq7;(_+Pp5pL%o/
%+`9k^L<XVL!*fgl)1YlfkX)sA:gpEYd=*V6d\jUo[@rm;R/M>.9ur"Jh81)5Jj"[o^pV$SZf&7'KlT8<?0j7J[<ODEEs:XSfLZOB
%3hf?k[`+l378OF\FVQg8=bX#+9XR`962?K&q#5j8q,E5%bG^l[\6Y#-)3br/]oK_hrSu((Xl-=B/7I!?`F]R:dR-kY*>OtX11M2Y
%-o3(@;FCr/mP'dlVbB>n#'Q)AL<OfB6d+P'mjPqDrVTF,mdplA:[MNBh7j*%&:,>.kaX[/7=iK8/.FOk@h^==bLhdP4B(?B=u/o)
%UJPkA-"cmBjjI2Dgp<dYrp4uZ>U0u;N<X;Rn\l0p$lfkNJsA8jq[",uo,+^WH+e>/N&a[9SI*mPLYqMf85adCBJj[8CN:sPS7\1X
%A^MJb7W65clckX'+SkDEN6XbieL?)&UDmr7UeM[m@ppHi+.1QalC[Vu"C=IuISpCIVc?E;7P\6b=M*DHpe(D,IA!J?TL/^[E>+#V
%c%n=3J2C)`!<m6[]dh%>0^TR/5fTp@4:\)!NJ"2&ni=7p".Lac2D@"eAZ$B-Uq/Gom%i77Nm]Ba`*@(j[##IK&50D#@.^1d&b;r.
%'JGVS@c;0D^K<ISNklZeIF\at(\SA`G!A2@r7$Jj#ps>nj-.'Q/@=bD^f[@XF-MuQR:qUX^%aJ-gIREGpM?q?3NdQZ_H)soA6A6`
%`HgtjZfCiAUe"9_nm$Vlr'f7%mgR!Ed?pN>f81W:,e8.4L8>:X1\hK_1Eufmm^-UXe`euL2*)OnoR]fjo--/HPOs;,Co`;JdqIma
%U/`-o/(N5S1=K=6g>hiEJ_7P=I$",6#nR*u9-nCu-s5bt&^;-s<kj1[>AQRlPnUMDMe7Q&#.,sj@,#1A;qe_]H3NP0X`43=i4#D[
%CCa8r4?i0.#1ogIF)<m9MJ4:^MqOj_a%b.r2s;4mN1@6pitcB,Vgd@D3pi?'-loXP!_1I,+D#IN&hrZKf/,Ar)A@t-NOJ2mLOnq3
%%RoG,3Y58$ZH)#1Q4^q"=tq@`N,VJ!JWM7@)P"e6J,=P)rEpmh*oj3`_PbB#)T[I(Kt;#BWeOpB&T2'dZ%,'Z:thnW)V&1>*#&RV
%2EN.+)1]<k7Oh+N66uo=&[l_aK)puVJ4-C,R102_8.GG>%L'\I_j1^@">"56\)'hQW2Q+O6SJ4ZXRc48d>5:o%]J*A7qJk,"q.Ln
%<#t#Wg<r,sA(S].c>hM)N"TMZI?6ch%d:&hf/R.ucK*&n,YW5D-^`rpQ8-LeUQ]<!=DNlcIMAa25)GaR>p$q+HH3lLodjg"JD=+>
%1CN9RNqMQ`Tm)C=kVU6Wl=_U4,@LCmN".!RKV%=nfbu?c-dKH%MeURAQcj*RZXP8JJ*bbdM&O!')c+UrC%<dd[_bekA#9(6cP^li
%b>D0hO3k>c>!&foYUP7M)S;YQj<Z)DW%I?<@B1'&,1k6O*0jigp3SF*(d0FrC7M3bdB@tEnPt75AZsXA_R@r&i)8q1`d?e,DBfkd
%ITEK?Neb)N?=.nM5H<]HUq#$$\b"b.PEj&K&!t3.:H.nN4,]rcp=dL=dV8<u7W@PT_S^CW/9^GaDdQMG]1]2Cf3W840:0+25MTR^
%pSrC5dC,VCWaX[_P`Ge"5CKQe>@%53I([&][+/=HChh:(RFUE$4)GJ8d4Lp'HF(#j@RU+TqXYM'^K>l.3j@19m/nnQqn`4Wqr:l3
%s8Jj*HsD'a?,TqfDgfBIp>gpM[hnhZ]u/:m`kt/G`]m<YN\b=[B=fPb]/Q?GHO&Zl]A]g5E(aP==3cFOX%T#C`=r:9rEc_4<]bkD
%#ett07lrm6jNF6&C90>M0:e?Q]&baFURL2`[g.@^h>4Cfo((`_SHt>FPeWf=NT&?=+9$S'rD%(Sq0pZE?bG-h8A#IK4]o`&^@7q%
%WL@`@b%J`AnqqWuJ+09+qWYI:X6#+TK6#Igr8QPPh6Z3X2*AoTod?#gXY[PqW]U[VG5^:,V>Af'>,cNAjho(2PKuC1C]D3],iI)8
%o#@(-b?2sV^8uY*lGJN-caT75fb^9Qf5:Cfk=#'ueTLQ,q3!5)XSNm,GJH69@:UJF8o:P6IMRNsea;N-Mbg*G_qr)"1jmre^KOrN
%\U.G(lC)s9\%hpa])0>sa'YI?]W6HadZ3dF+nNE]h?T3M=HDpF=?]lCese"ll:'t8OgW7EoNc<,;8:oBp7I$h%tZl=5.5GK$[6tE
%ZOd[M7QLH`h&p'r]EhQjVj50B-A=*;XaHnMBcj^)d,=Z@P8>l%:Gr16l#Sc1iU`>rg@s3+M)5CU0],XIjN@O&Bg\Q_,sah&GeSr0
%O[7"24!jo_YhP4"0+I6BotBW2ptq_=-dO]#<5S.`]omO9p5Q\2s8?/?Vd.sK:\O*=<e#L"3e_-;`eT0kb0Z2Mm:56KIIaOO]_?RN
%s81bP\c1E2[X<+8s"l-r4B@#g0>?-5?7enfFS:2hCjJ0IO#I1@;/MM;L\$t'!3/;n<IFE!jh(!e-0^-FKWE9$h7pUTNG`Zr\3B%I
%SD_8/hnI"+g'8#>.H@P]Q&i?MVqSVFQbF)[?IalRXF+4YI*e"r:S3k\pM7OVd`du1bCr74kN,jE8,.beaK4+J>4[b4<2)<%:Kks!
%Jq]E5U8P(4I+04nqmo*K8TVi8mC?)un=]HQHtMc:=.X4CK1'(_%R.hLg$DdTW2Qb)>o+$%\@[gEVe;9T]j,utkLgrb_gXW4^1t;R
%:&`aJAb##iRjAjE4PD@(1>]ijm0PbA(Tq-!qJ`$[0*.?reiq_6?p#/udFO9D61sL1#*3pHbCOS\e=O<Tqh@&)-_pcKeWZZcRs)nW
%gj)D;:JlQ5mO;;hJ+g#;\FdI=]-oP*mpbbDm/9)7A+PPETN-7U^XduAMtSN:n)WgY*;8J[aa178`a%[Os5`,h$h0/%W(X5)HiJtM
%FBDuCbCL_9Sj%Xbrr/C:Cn)MlDspahBt+E)hSH+Eo=_E=6G-M8(N>cF+Popq9'6SaHEa]P/kE/Ej5/fmAdcNma`XZ,ENc\;r5W4Y
%H2@6/68*HJ;a<%j*rp8o4]u+[S:LXBhDIr@YOT`hs0bd:HX6*plH6/J&O=(D"+RQJTVR&'*I7Oq"!cJlJC1:2aMho+](CN19K(C5
%+')_9Paf+p);\@O\t<#gc%V&_r2Q$H9ss-2:E(CI]C>(`$Q'7QjY?G87#o&oAC-DY\[cZ_k!slU:QO::H4W0.Y<XJ0ZaBjbHasBR
%^AAUt!Op]:!^VL&-R-`=q#,8)k_gZDc>,U2LZ4!>O]_YjZ4*Ro9SmFG.db\>2B/?J/;&`PF%IM1^ZsAWiss:'WVQ0a3dd^7ZN<sA
%?c'!BT$0p7rkd8ecH)80&ecZd5<aJ>BDLg=bf+/Ad`RmEAVJMZM.@Lkc5Pj^TZZ1W^#5taEJ21T?`DHbotdI0OVgP^*jH7pkU/P?
%gRJ%s\j9j_6p4$'`lC/F10oaN%.]>C+Nn<cMip`#_)W]:NPLs0,mkhnc$5U0Xe0PlLb1%;8>@D4.jau>Mq"ad+'nR<$YhVWaO6fZ
%m)(8$4>8#'A=-rf@;#nOWfjd(1YEndA_B4IBaE>J;rT&s'@KYdU@rh8r[h\,@UTC<V@f<;eK7pUr"C4[$)+^ir1)%=++"7]2OhPJ
%_rq*cJ.kY;+0O4Kk]s`SI,"Y)'\mt=`3?+,a%Hog!#G#h53&9=*o;<l>-<?<d\J'[FeS<W/6NK,Z[275b!6FpH;B:3]nLRX4N>Sl
%X"ojeQKK@gNV;CNI?bD-oRt]u==?@e@dN,I.V:2T=5Q/G./C9jee_GC"LGgRm,a:4JS2,LHgAFMB\rD?5O:=-Hc+01qou2?eWiT#
%07W$(>r,Ik6LBWKCD,2i%c%qi9?3rZoXM1qaQ9es"i8T]4(je4ohPfW]\W6NT<i$Sl'RdW:L;g^53,io.CRGqF0@uQaI>`"@@=j2
%qF4@t=JdaP-H*/m6@JO[&"@?i:igHC#8J!=`-ohZ'K(?4fOoCQ@#JSZ(8^U1mm%7&-*0_9_W5lQb:3ZGQ-VlrHPK'&??lo3SBA:t
%IYfsSWrAm%s/`s3$1,.lUJ)!G[D+nb/gk_jP)%rf,Yrc6s.&2/\I/q9<W;7BUR+qQhWR15DtEJs4YWWY58)8X1/&0b9A:ir7o;4+
%CI,LSnU]mfdnpF8BZCWG58&.Ra!<uRHMDkBZ%Jj65k>to3@%SU8e(+Y;c6(1NI[i7D/l7f?:].tPB+?8\,;H/:V5>U]BcX3j;E/"
%m^]6CWmmR(=,7aQ/+)*^j';daQ>.3F7G1dA2i&+dAR>]9lLO(m^XcS<S_Xl-Y_9F#%Vj_s>4"Cbg@Mb]qY#qB%HZifB:kbKoX(Rh
%lJTJbh'$msBb]=*e>E[c2dK5aX6oW6>@VCEn0OK6=a@RU%>uC2es$iW]ZqE(]apdnXjX85d46[2e$g>p&q;?^'E.RRF-eg%`Jt&\
%8$VKe,6$M?Uhm^?CDdsqI'S.4FClmnA(rVGp$5p&gNGn>qg1'Oa7Hq)Zd3i]T_:H.8kiXI/=g]DJYI,X`(8)1C[#)NIOEf7![0'$
%2*\\Dk&mX8Q.0jQcDQHU?qYEcjkcD,WLj-75U>?<DnA=)oq_.4nD:7!^L)>o5h0/H]EcY^^Y^H%Rek_2hId@3ek&r)CYGH<GU`r0
%QCONuV]!6Q,U!bf2VsVQ7M)3Q0k2(70]TS4q[qJsRhZ?INR`cdY*CpbrDR0l6+4:9V0_t(;]..CgAWuiDn6nWiQG^8o&@[nD*OQI
%=oIlr)KAnDm!6lrl]eg\5T('I4AJ-9-cJ.oAa/fGG"5^8['h145aA1*n@6QO*3U)ZleomckFW3PZ\\=-p?M6:n"@>"mhb_5MlTLS
%cg+..9=0cR?QZr7HgfWpC7ctOj6`H$5&38U1)ne!,XqW+o71oq:^+_unQVBn.cjhBZkR"?8,q^iDT9l]Ds&DKEXZa(?`uY="(MQc
%b7E8%:WoYK_'0T[$\(26bH6hjj(HL`r;'NNAX6Yp0%VVo#7l9Zdi/p-4uiiYmd16LG9?/T8%W(DqqK0Ekb$]r#8t+&@Ir^ubZ?Ml
%%K"B`P4G8^8Cg/gPI7^#g0SlJhODRb8SN/nCA"^?UcN^+#EM(8Fs3h_CLY?8PNSF=COYZfI@;\r'J:q%e9HLLFYMtn,IR"!fsA$K
%lSh!t,jbaQY2'-MXF4CQ;,Was1[0*6Mg(%Z5B/,3/3K4n]Zn]`;!Z\nB?T!/87V[KE-)RZ\bg+$F/Aa(Ja%*Uhq<3tmsbjK3u_D]
%$!cJ+#'HnMs6H8qluB!+8<d:Rq\=dTh0=+OqX3E]#pnDjdmc7GPI3(;,7J@Zq<H.L3dkSfGNu$/nhneNH>f)[mn3sB';W7uDfg/l
%@-:R1mJbi&,HnZO2GA=ukYrfD+M(XUXh&/;]`sk1^[:D/XT"=1Ee`=)aD87+HhQXao'4Z^O1Kb<l]HDL`<2!qRHHe,js02ef6m8d
%#Nc(<6+%r:b_tYMcK7Q?SpHR'T2Vc\E]mW"XLir_'%,sD(#O@FH?2<Z@%#!rdfY_E4kHAiH?m69ntPg2Hi%W#V/lL\["a.EK=LEL
%KCR>&SdDt'l>BGl^7<'D`M:6+h:=?Jkr`72(Csi'nLU=*S&\?/`OQ+sQ;@Kma>1ukoSghKZUA!TTf3M)B4c@SpJ<O.o&PSP%1!et
%S][/:eqop-_lq&1;<dE3]6i@Ob&4tVdmUee+2:?'UJ'2,="gY.h)(U6*-nZ2qqY%js5_"sL1@ZY&':60jll$u=bb@,(s^^;f6Mc5
%pd%_/\W8J#HOU:Rf<0ea4tXiRXfhBqe%;5:5]*f'X]2Dm/"Z<@j.]=fQ_V#ne_f#.q]6aCX$okP:M[n-\9X6r!DMk/4dp[shnM>U
%bh'FfFh[n<D`lXZb1E3E0E0'ZZ^AtKo#a1C8IA:M$VMH*e/8r5;N8cDhn62-\_^(dD7QjpUC@c-Et=G\b(43;H`(SQr(aRCpiIkR
%/nF&!F&26gp:\0%[U2$Y3I7:-$pY[<mLI/Nj\;Rt\E`]*S'lTYOYigV]m9B:.puJ/"ksPa%V:.McA=;m)=q?VBD<H"hAR-TI!N"4
%/8VK";JA#*A7b/kZ5I6SO!).3VGsSSa/E6mrmCh;2N./%Y/NKc!r+LG'qIdCI3#YgB;L>)XaL)jgO8Z*m08`Md^C,"?1.hML;SA>
%dU;5o5C34IXcpP=W$OlZ*gJ!SV-\lOr1ipoBufS@o4:X[69.a=o[Gr^\:5nuRRBr_j6_&l9HX#5TEK[GrOs!dFmknI#ulM".c-7u
%5[-I&K>V'(5ja&c"u;9mrGuA3E=]_/kO[VIr7\7m07(OB!p`:Up)`F$a4bTFU9Xa`mbS<VP/,e(O`1P=O"*%'RVVZrW7\R9.<51K
%m`qO**Yg^I$$tKFT8"7,Z"5b["pm!A0\9[0_AZG7#JF/+.Mu_!.TNDKQ+H$O0,C(fe0n?9V=3;c=8hgGS$'N2YRmHD=C6K#YT=!T
%,:&`L\C,f0IYTSid3Im%8_%0t5>Rcc!>o%Ibg)A!m^IVR[^u%XGRC`:WWqSMKdo1DNF%qt]]9?<nrlqW<3'"0Q<o&(mKML^C)<!"
%^XR>'1$LDi:>Apr5@G#+!+*9[fBR6sT*IlGij884<(Ho4@sdJ+PC8TDp+)R1W2YCs0ga32pb6mA_p)hcZe"Bh9+^e,_WK!EUBt0i
%YLTog,FQf33-=MRj]ABWIfVneJ$#lddD(;(XSaBi==5`s"dF24Vg*+F*@QQ'm9NjNjget$:u),;+e[DE+-/AYC,nEN+4m,bQaWOM
%T>3Q2L]X4G.cI7XHhs8D\7#'+IIQWA)p:2pW3=?&l\Ep)<5&3X[4&Rr7GE7[jLJ?k=V1&76iY[2EXlj>?'Y89'P-CcQcc%66QB)I
%s$_jDk8PL%BXo>or(HL;j8ua^LKLj1L=#SODX#r+pq?7'HMfL-b*YXeDspGj?'^VA(J;<aKAc9p[1/;I-[WD$/OrGEQ6l5F^Q8*(
%7UE`24#hQ!.GC;Fe*eH5\"7hkNHiQo$VJ;UWJ"W6C8nJ:*isd3%c2MYn^]Xh&!p^*.rrL8g_U%W0J_N:FG#;?E5d.8>C-QTq"AF5
%okHe;(#6b<mn;*;Hhd.4qT:UMSlWAT/AKm3^O.]#qV[p8[I9]+2BVn5H1<V9Ebk9JoZ"LUQ&JJeZL*9FN>:f.D/><JZLY4tmJR2K
%7]G,EOMt=&JN'4i66%R;hTk9D6bH6n%Qa6dgUEiCjbVDFV=m80p.cB6F\=(X\lf@;A'tt8SE"j:H#okklLsjuIi@gnH3=!+G46'/
%=h>cg>'"l<.jen[gg<j)"KbOn`ZNaL9r=8#+ktIgf'+O[:E7:G$c\[d/[Z?nS@quqIqIeVcT_mT%dkn#L\691`$c`H/:L,$KWt$W
%NY=!KLW,U[VmgH+)Nd,<UJla$fYFSpC0$=W[9>0)jP#`-?[TP26.:S5_fBHO#k,6nSW@t9.47WDgX!;ms"H/ThCpu[r&uNYH2JB'
%H*[dPJ*V[2T0BfhReeE,jcU`lfm_pIia)Bjk1T%%rcn8&h>b/ZY(P6nG/D*kM`gg0i024;V6AM:^CG1s.B_O:D;14lZB_>NT('/G
%e`,VfYj2P\#$S[p3Mpco2^cdIADHR)GFeG58(e6=il]d.\IZ"&4E#>Q`G41Dp0T#ThE3IL]+0R#)nI-jN4+(mDS=SV]Y7TMa5<i/
%hIuQ&Q-sZaE*YCf+U`kG8+[s6poK!XGF.0dL.C[ONOlVd5Pq<NU`3t!Ngk%]X;tY9If+DR5(Pc\Ra.TTm!$?Z%2^kc!c5T<Ga@+J
%Gn#GgGE7`nk*Mi^cjj9^EKC;(npl9hE[CPn":/iD_^J!j;Sq]Dmj$u!6.kEC7`Xu_dGN_s%aMjn$=Q"GFO-Z_]=4g@#)$pKkS4"[
%Mjafse-Y>3fIW[^4X.pd[6hD?_@H!-9TVIiYul8*+VVc^%QuF%nZTH(BJn_p\64W&Fkf@2TTbt%ok'oSUrO2q?%,t-KuF0hTYJj5
%EM@2IW0=j3_a5TDa8Nlq3eE;U/*V-C3kaer,.rq1UAAR[R>e;mecS)#!S6d4Jl'-ZkV^]VKgNa%7`;\9B!/T.X`6;SUdV^Ok)0()
%O6D;`i!j]tHnRP:`bYQpUJ[3CDAs+80_2X^%_<UN7dHi<m,4NAmJ;NqYr0h&b/oA8S+UAf^@6O6JSXZBfB%EUc3J*C<Xn=PbAjjX
%m_rA5JXP"`lJa_Mb^2:%?QaRW"lM.%qL?QQoDD4EjqN02%)5)(bIV79Rp#'%&#=ChMu,#`>TS?MPXamG]+s#"[c?DP]+t<;T)Njm
%-7(]6RS^ks&X;Dilp*\W6"s@>bcT$98<:?I,(4^ma+02e**$LI<aAHkV/c6SkBb.1ArcO##9]E4_+3m)M3Nj:]ig'9"8&F1Rit*9
%oA$%@>G#HP%RN]LMfp*7ZSc?*g9og"7b5W)mN.6J([#b:5/rT)MBM2J>FuE%DR(7RQr'@p8.S/7_Z9DcV1Z,2`Gm]82t@*25+Rtk
%2?^j9O.7-I_8q')(sNOgO+8=p2s."-Ic:BV]::lQRI4at`EqKslh.cc'1fYCjD!R!.L#'m'Le>qP[j,bm8"f6jnn(tOWG4mmg-*]
%2QRC4g=^@&cNBXinO/X+'8$1i!6uI0GaOcElO(nTb@-;m(V;m-;*1+h4;g?Iedj0XAPmF?G6<S!]j@J=+5n@Fjd*A^:_!92/%edl
%C'"<e,I-ZEFY(3pZgSW\p[KP_=SMhE]uZ;r+7u+o.XQjsrjLX7W]:7RDTRKeUKbcgrin_]$gOM(<g-MJ5Xa2h?f%s_:q9Ng,ClXc
%!TaU&hhjKX&^_hNX!W+=kki-pr1f$lGV/HcdN!0><QQ1K!DTo!Wk)M=KTCEkTD)R"8<7PP8]S;JgbEmf\$Zh.@\0\Fo>>h;(bo?A
%gVbHle-`,O%T!nt%(iGP'jWOnUgd3Oc%9+U>urm0/h;Y(l(<GV)A^&C'3Hl8dTiX4k_`Q*5.Gc5_d/"k'fFf$$L`Pc7E7=1U165R
%62iig4OAf3)6h`@iKL)UKi7RnbEjif]OpG0dFL21ku_+$T:CMVT:g!n,pId4pUE^mU6Ya1Y4O$K6k(^%.9`TX0I/5CUM:p2l`O/c
%/X&^?jt3$j0k/d3e=tulCtsRp\F-;8[VB:X2Htjma)<E#E2\DMIcanC>XPCp_mntkVE>?@2D"-Lq*6-Gd*aM8%@Y)s.[e()l8Ck5
%[p`u+VC)(OMPB(&<HKf>=1.6Q[a$3"C#K_$l*tR45KKLo.id3k'qGi'R]Eb\%:;fPB.u03@YQO\=4n"n(parWlQ7o^>ntC-_l@IU
%[1$?GM8\2DUY.+a5R34CKB*'5HihKq9K'',%\(:X9pZ;=]#gAu3''t@7l*!<7FcQu2K#K4'8)ti++]'!@Br2BEa1N$CT9"!E&kcX
%;qE5/:/OqaLC`[]6O-=>.s\AA<5C;RIUKX`UAX6u(St==2HUq(SYP+p)X<hP?jN7;Ym"Qj@_inK.R(P4F28!E-542)AiQ;j[]38.
%h:4&7W2ld]#7Z']3"ptG3+;s<220O2K?[dAVTIq8kgmPB!I0J>Ui@?[H8_nj0Z=-"Z5F.40OF84R[AYA'0]sYAeShrZP(W)f6/#J
%FB`<WU*pubjHs@s6R2/s][]skX?.mNeFD3cga&^6'N`Ldkpd?.^@e/FdKeS0Fd6^XB3M."[Nh9c`Se8&3!NAWbqV*$4&g[o+7POD
%bW*GgKtbD(B:iqM)Uiq$j+Fr.16"6/*O.mt=M9\IY3+TVF<-9b/dqf?dEEK=pc<-7HefG%Xr9]bM3G=fQh#d1b++]nYX&q0>qZZX
%)/N$P#CqNs`+b(,;';`J$QLuHVrW(A69(1.D@+XEKTe^>&:>WsHfc!/L<Y9lKd\9F'er6mUk=\FEA:Rq.qZ#.8*;XK1hPY?5^,*l
%ab2N*.!a.g\>HhG#@"\4[#3/,[;:cU[fcJqp^NMa3L>%N8fB)f2fZgqI*bPNK5N[U,=0E\mXR1HA?O+\\Q;g3LZ+oi3hKI#/N%Ns
%[d\@@8S%o(<_Sbh,0<Lt<*LF)1['^+%03FcNmVPmY*&M55_an*"+^>2a#AjdXsthUFH'K-+4D7J8PI8bq7NS:0r)Z'5&fXFQH9>R
%=%EBJ"u1a@_2?&\=L*)/a"eZ&23i21e:G+VA65'QO=2F8WJh*\5MNElN+(>fjC&mHW%[=rae`K6%q*WC^&l1aNu&<#Sg5?p4:2t/
%WR=)e<r&DBSt+-BbZZA:,fHHK?!HNJmL[#rUmA()C.Doe0,X\U,ZtP+_8IT-S'N2d>*^AWOGjj-cp:2TK__$p1n&_%iBX-#&A^^6
%G\pM@(`QEtF.s&,Onac[D:KCM(n.$/k8%^7DOQ4<TTZIT#qlf<$lr.*GM2"sL7=l+>B66sO+[4c)92p4-dAsXEK6B\UrV_mUN2pF
%<ur*DlD^9e\umBmKVCd%*Q&4)FBFdI>Xi;;<-9oIOW^7sP_8"hWX=po<$".><R:ir6'M0sI!^d=5]]o-BdA\4K<E2B:>8\5JO)l&
%;WB+B&dE.["ZEkWC"t=Pa,AuXasYOUKpdWEgmb2)bcXpajZZ>&m>=>%Re)Z[(O>H$*!=&i3f%[.)4P.,U_,u.b<:\tOpi)e%Onrm
%9G.G9d%[q.(p'U"7uTB].+M@QO0]RCa!0ajjk<0'\7?9bkXcOGFBE^7A.g=qcQ4DmdrCT4j$STY<iLg"B$h7_(cDjjadOPtR*je.
%_O&!Be5i:8EqFqP+H=jK`@>9bb^c'(;DCVhfsjlnl*W@Je(S2;(,;DHJ>toX38eB/nWXGi)Tsu0JRJYfP8+9WQ]NQ=dK[KU,TSY1
%nq:-cl`]tu9E7Y@#]Z:/R#A[u"e<:7#pjF=i+o$nOlLh\`fU!$g'qYV)K6UIA/H,'6sg%teTNah7I&1<BhDsCiW^'8QOW4,Mh2f,
%\8re#Y/=mk("sRFYgYsP!;E4N)@mKH`T2ZOBkq/^=(bhX_`#h._6)s<OJPNH+9i%$]+DNPC7>\PG?!=i^m`DN$bg*'9ol7b%icm`
%5T49DM9JT&TIS`<',5+C#_P%Dc9sfd;J@+G1/le4,(c97VMQVb8^Kc_fgVa4OSfL,F]2ik,O<cDW(D47jY14F>+G("1bih2)QQCD
%<`e7QD)eVK;e]LuK;)(.H37W$X)D*@d6[_(V$k^Kf].Tt`iE8U0Vrc_LRRMNitQi853,EB-V:^fPtOAS+M(,s0$FnUY;@C="6u&#
%5tMG^j,.D':"C&K/#OmcJ?KLE$7G[d(r@#I%J*1&>=Bl?A5_cub#mW/=pC%O8?lZFV'Wfh3lpn8=*3_DTj27QDGmc%af&c,H/!"3
%gm!$cdH4RC)sgK)52=3pB3(PBGj]>+E,[A0#7BK:33dIl'uQE4E`eg-GH_RA"FLc=0p+^\@KPOSae3<O+;\bHaeD?jita=?bb//u
%(QM'M$4L[(WU`@AduZlDU1?Bj\UHeuloIJuYStWO9Nl&76'_3_bb`jCM^k&'N#T2[#ctRk.qGN`6/dDMD:B4='[oW&%M!N.=]Xh"
%Rl&s2@48/!d,mBCK<Adl6-J95/TK-nN2lAeepeeZ$C/tSND6IA/fu?e*^53ok[L&^5emh-8W;,,K1,+[T]j999,0XA_))FCDf`Q^
%T:\YMd7c9.M9]`XC)FE:Xt'^a9cS4fD.o('.EoPoJqK`!MCtE]7`u"_G>h2Xg_M0O$;8OgmjkOcdV)?0q7*H)/.pJKKmR*"Vi#??
%!e:FV43>Bc$&G1F7TCG8>TP+4&=EWQNbb')%")<T2$+e/'djFTeBK0E<7bR&`3`Ok@*iX%`\#5=.&a4g$A4A9F4OG'T@MJ^`"#@l
%VLaAd?P[K`ZY73XK-pq<cA@0F8S-:j<chSF*%lA>N9NYn'G`pcTJ/aVEX%%o>t`-s(c5V)NR'is:HF+O$lOo..FX8%@/r4LeALK=
%g;bT=10d1?T_"#.J@>6_+k4?Y%>G%b(KUj..DJ/QG'%=b1i6Y@!\B\.W`T\^ec`^SBN*V9K`dKu*hU5j/M9bWHR%+I-Q5=@4(-O;
%+pK(D)/sUM:AXs#d%[Wf15M'Nb(lO(j+B\6/o@da^uEQL7>lp/0rW50CMMXEFJ^:aXb_V<l`rgo'P"_C9OK9K_6(j(bt8BfRa1!p
%]OUA][hI+:9e"p)UO[?<]62`edUdPc3\c7+[@s%G^JdQ^VfR<TVGIb.,M<*T5pVj:jrD6NS&0kmRa)Vh[2"]P4!T9%^fje&XrKr0
%,[,PWEReJRR$u%T#4KU+IO8cthuMuH.Un?R;H5KNP@H5si+C!Sbn6S-NfDAXC4'-->R%6:]:?h\SXdJd&!GG%:Vb"BhI/2S<(#.S
%Q>YCb04'^gQ:sLP9%&+gHI8A46'\>$a;NakWJ$FZ9Jen&e4m*b3(@Xr2Q3ja%Hbf.QU!E9Ln:>4MkWX@UDXKmAA#`E;eHGHo)t9e
%Ea;X<bN]3/s-14/Xt<;-V<8654)@hNre$/gaP/cjd$C?uQcrY%mj`T#j</N9#21NUs..eP1:ZJj9*AborALi@5&S8>4I.I8]Cs3D
%gL!#4/PiPHA'UJ4m5G-ifJlpOclW_o;M?[JS0NOXn&=PC\SoOn=*XVFQX#!2`uu3&"MP[(rGYn')*=ub[Ws#):[<$qguYA.f3)nn
%Tj1EI^SBe?,#<RjY8M7[]&+n)f]"i=N$gtPeqtQVr(7Bh'>M5SQ^Inh5E@h>_dAng-f]RF<t:c3QV5>t+*qB06c6WK04!PNi=^+Q
%L%<8!I'$:F2bkI])_mfYA+q65f8b4;EJ/pKqBp/%QRp$&4RmIjhGo?t;X%QL*-fkim3MXoN]g]6AUW=I'P$*a@3>+:j'SkaB)(Cn
%X*BuW_3:K/`\Edqj2f8krPZ0S^3B)ZcT(KR<f!kdR@7HnhcK^LF`#(geF^qknB8:n,\d-=D".>!JkU'fNb36gYKAGH(+:.YDG%rq
%I.3$^TK`;j<k_Rbl^)8D[dl)]I\eCIK_4e$dBhe92Z4FJZ+HsNE[$iOY/kH^CIpAKGbuFopb)'S]?'jOIE!<8fW3S1o816D'0lA>
%\A8!M'cA+FMJpCUa$W@':Z?eWY<;b=p!X^_h^cTfHrfD;IrAZJ3FY:<ISfJ8p(Qba^/rn\DA=]E*TFUZoC<K?d/V,/T369?U/q&Y
%V!YtTl$_O-kK<[-X;KC\',qtlb'?kKDgBNq`;_(*%,7ESq>^Dcs2Xrus8'M1r6PDP<gruJs1L`T?%$"'*0Q2@)f)B-fUmP]A$pJ%
%p+>,!W=hX3f@%@Y%nB>\d<YQ!n#u^:CInUhDk;eiJWB5.`?m6c7XV0'8db2lVHp2:*e+G-INWUSYVCW&(FU5a%W;X:$UtCaG-dFL
%]0=EOq7s&>KO@FQ!q5n8S]&jh,l=pD4mc!0H*k?,H\kD;bV/M_G=nEUj1G5(Y_Dpo>o*6CF+&<A*P9_t)j]+Tr@@HB=KdCM(nL^$
%^Z=O@5$@]eYM6eE"8/j=0:N6ME-Se5*fn]%goS"YT\ajs.#=Mo*igsgHYYi%%JEV$iI/\N,&qmN6)bos(hBeTaAlk-B]Vl:!3LpN
%%_h?=56<D[;Y^$I\9qB0b#o;-XU$Ishu:j/CH[eokl-1=B+-Fg>]ZJF+[!DTP6ScX*q>0!pYkAIhA9+G[-i:6W_PqT<TYN`U?(LF
%SYJKM-&DDf_G==H1[*0`noq^IGj0Y!RL?l^.8OAKaD\IM\(`+A(!HqOOcfPn(Of[dQ:d_D4=*eu]76[:8hYNIpn$G_$lFKSoDX]^
%:OeXZ:cr`)s(p9k<N<HiQ]1+e\](2n2m;;sT&l`]MD&q>r\m"_HT]r/XYW;%7#V?SYfAdLAb!\'^VZWB6[b]S[pJ6F0E6*a,JNCh
%c[Yb&!G[et"dc:I,C:HFM"<:4aA@tQs8-/4n(46\+'S:eMF)"=mqqEreV@jSQMBS]_K2@I81*aI0;#u6S%kmlQ4"6$bl"sEm-tWo
%I]1R6[5)=_T"dk<mdW,9@uu1`QY;.+p!m1WPSE%B>.Lf3'[8SaVj5!EkK=<W`<6aQI.-GlY-V=%$Q6D4[n$6'+HdSb;E8tkQ)i'!
%'7YaH70r&i$=5AunXf_=UVF>U`r5"W:eG)+2YT#A?PMM;hgYe*CQ;X.,>2?M.Q<XYN$RY.S,\Tl>E7QW:XnhIb>s5;pE[4G+$X"-
%#>\=5l)34bM.'/aF+<0^g&/\OQ?E!j!FcgdREiXhQ;93KEkU4.P$dkBLCFDtCl<_<P&dXPIK'e,Y;DJTU^]>3Df/)3mLde2Q7Vlm
%kBf?:?EZb04C<<Hr8A=E<iUOS<T%q.:D(c/[cnlL:\dsF[`oVg[etU?c`4lf"t]PZ/mg,ekD@GuIsmaN_IZZH(h3TkQSIu;[+fK]
%J\V/iYV591P7"/_0dbjjEq6WH6J!U2J\:JU4pUH%+RK_r:FgpT'1Hg/BDq:Kq/c:f_"dB4^5K24\Dshs3Bd[`CO<2hbK5pWA*Zad
%s1rJ_@p)$gBCl4Ak?VKkgRQml5[F?qL#b&0VWut!or!3#E)hpX!T,FA^5iX@!uq6Lq?#Via=$=kcbC^$:&-0mRC9l[_X14C,N#;>
%?G9$(I/!o3Xr?-daLYud"J,<nT&\&6W0s!i9/`U]DYl<e>P#^_#;uL8$/V9L\I^IX+1CZSDP'E3rQK=9gnOCQ;>G(pp:IJVjdV+p
%;I_1hIKt(B8*HAi7C^+0PAa@qZ#LN/'61c/]X0S#fYC,^^'6Vg4C6Cd5WIS+j/')$H8/BiHrn13Tml-1?6`*Z_nXNIRE",:nZo0P
%=qQ3?eKt"(5P6b6J%ntY2dYYuKa6Aq"haAMdoN$L2?"?RRs#D>=%mll)5'BI1\9;7OHW`@4<dFV^L)HB7`3JhY'RNNiHaebXm%.i
%`s%K./C;/'_O1q+p+S!.)d`I'.ts_l*KNE%I-$RIn9^=`]uKg8HK*fqeZCfqZ"eic?XMBtS&BHg-,Ue>1kK-3WX<1!$0\/8mZTX$
%YtR%b'TO&\?.ql3Epd2;MSZ6k&3+USc!1eZ)'H/l8@k@k;i'1km)gN_"SI"0-mZ8'7YU@khka6),'Zl$Wr&G#R(;^qD[YOL-Z6\c
%?"34M()".>R9>?T+?Nu1)*;>^E75c$k'"bc3"i-=L[E(b6;,MgDrr#2En,Esl$qM6hehMD?P0m1>4n@OheUcsqfY!TB),TMQg?j#
%;jP98f*j`.dboLj;Fk\j9(m7#]Z>cmKmdW;o/uU@Lm8%PFSTk7cKZ#n9PDTI!#@4sf[hZmFtn6D<1*YBO!9:u.[_E0=)?iAPX_hm
%1Y.MWiSS[Zb:fn=.R7bdnpUEh>XmpOo9fN:MROloctKr'7C`6o6HnhQ<9i-is%_S@_,`kg=8>u&Z0u4P+*'%BVK?h>SF)6Gg#c"V
%;<bnj%l5a.`F\j/ltcX<HqGhmTB7-MpeKPl[=))'ol;ijWbNmaNj3"*/"S?^;i>"I5*n_G7c`l[G5q0Rf#$QlI?s8&RCTc=ggDL4
%nFO0*H,XhRI]@U09Pd`h"9iV*m\ifsGH#TBNmqu]T=qB:8$hM+"7bpnTXE/0rkII>q<rg\s."(rGr'k),):b$KU'`\cMsqdJ'\@+
%\OugLP5IRO8Cq9UMmNpT0,N$/]S9VbfOBj*d=Pj7n*/"j!jSn2maQ8tif#7r*3=M)rc,M=F_O_.b!u_E9GS\MosRD6Ba%g*R+iMM
%!bq%rnO&AfX(\Xh>9V4ej`^t#^7j+Y_aQ;r6Z[M053khFVWRm$79&hKDtcG?`U-TjJql_+dHPC&^>ndnoE&a?#j+T,4b;n$R=6!e
%@<#/maOXgV\Qr!8o[ULS4-u+cVsMJTf_`CgLB>.UXrE3_H*XU15Pk]*DG&mYC8H+[OeiN'F*M*"(5=+j4.[,C#Cf((RH8YHG$+BP
%qW(Nk[U](C7tXlLaQ6jUs$#J3q)l@]mmC@3AH&Y0QC\'M^\l)9Q[q4W]#p:/%NUMsgWMS:O`[peSA==c425jS9/`Ob`]N'07g1s'
%ZDX<k\GmHQrK[B)l_X/umks98q(l_NF=(>aS6p5![LREs0K>X0I=FFW&!-XA_Y?bDq1etMmsk-8rNE^)fgFtQCMWq_:P?CObO>A<
%F$(*D6rEoC;O-i7l$[ou8bs7P-:EmEF-TajTSELNimSl(=E_"m;$k(lO3\udc*:is;#P"Bmb[geETZ,$,cL3WBoir+YT/k@oU.18
%.3h3sEH3Q7NsDT.8X:N2W,\;"Oi=Cp%$[J!E"4L!L?pi0QD4->pu#r/s*pCSksjmhm.kJb[c*'!Gj[[/gn6eA$TkFjU+j5U2XJFC
%<R]:(eGrFh,^f1grA*"I7uJiO%Y/N:b*k>iQ3%#;Sa+2U?h9aFGKqc1"#oH:rrR<`]J@1`r]l"D*P\bWIUo^<E(,JmE86i(?p$<O
%/45GKGf37T3O,.ZquRBhdUX0[H!9>'0DK%\MVnit-UXToWdWfVon^VS^@4$`.na\59Wu65IbL)c*UG*6<L+cJ^cV[1fpGsh6_l+G
%2qMYW.)3RsJdcPD+6$>6gbuZ=/_IQJ"?0If4K'Er*'j%uX&0o'"l*+C?jVC/`_3TtZ^M'YB3he9[ALVQr.9901Ut7<3qVmW8DbYA
%n?7IJF`8)./mW(lT<9mI]q9bSKDdl7AI4Y.P#JS699X*.LudoB_cX2nLHD#FIshM[kY$p;m/nln]UHS)>E:'e<AhAP+Xda&^Zj7a
%?8u8&'@n"V8%bfn'5L`9K'!s5!DE?Ar/@dtQnj12oUkPtm%hN(m_7B-psS2"9m5dKOVWR9-l`M^#@gQ4a:^$Y0TU`U2Q,-t&1Q>-
%aRU0[2"1n@Ha2K5h-0+]IR^`_j$7jSHR)&RO91LbK0guRm9:TXqZC2&A]Q#KO*FTg-J#I6O-)rFnJtO[.XiDuBuR>3^ZGl%-`mSm
%EVj]t6u&a^dFm%U'LKXfj6B`2!EN/;EX9T>hGfJ[[1j`Dj2$HH=R#1Lf_8(T%JoJfL&+XCJT:[`na6$?Cm)1E[i3,DC';@$0.LIO
%8uS[Dj:I\K]Hg-+X'(8Vj@P4&5H/eWYB+OQJ="e=JTc1::p69hSRAU<$;EDpd3o4S5`GU6?leV-Qpm;aa$;`h-J=nmcN@(P?#a't
%.2$Mo="1K;ENK)R$8]95D(8!)k?K7Q":=g#,T;'M.QXP0Qm!08nWI_6XCi[h1h'arr5aQg9fg%H!khu(^U+I4+fEKMk>5agLJq^(
%?^Y)oDFYX>fD(T40Oq':""pl9[?_'1M<V;E4YFD+a`,1!0s5)2#hn^oEQr8Q/s)WnCL'rJlY_V'Y0lAu@(XQ<36r\1CkX7-XsBS>
%PAJIE,m!7ml<8[jjEnO[0:.Q#TgE,bNI,8m\A<>0p4su0p[&_`guHq&`cpXii4..?/45GKGm$gH1prX)85\eHa:lu>*i1Z9._uSj
%8M#F^XWA/n:MGeA2h`fg\s(KN:^@4EVC@/V='T8BQ5GEj^a,CJlZkaQXukOrUb6WS@99SV"iLlH#-C.3A8)U9qMkAe9U4/'PWaa_
%.f3S5Rnah0#EU-&Yf+=>![_'=>0B:/BTL3TpK^KFT74VKGe$fQ_Y9Yc48JGVVruqfMq>qnGHK&kWd]Q7L7n%V6blHC)2u_B,0MZM
%.,<i7WgMEt$aF6.DG=oQdp'TFri?9@cu2]1N\iSK`J2\*XETr[c'TQ)6;tDRVF-!b\WLDQbSVi(J;YsQXlU^(1h2;A?LW[kEI'?7
%@Q7DC.cVsJh9Ra5jf6>@V7!:&FkDDA7\C;"IK[*<L!)t`-!3JVT(/[mbc@Q?aZ79Wh+-r!8+u7N2]i\`K9aY#k!%L-ChboshV,%\
%[gTlDEs)uHJ/_6$N2$YIQ=,Q#GQo.n1p`L$8C*F1CmV9WrITCX`W^R]K@Xns-fmjh6Q6G\KuWdFHr\_G'0Uq0;K8KU9c4B:S"e&e
%6XUu*Ot=kZAK_\n^Y_oGk1f9mq<K"iM;S`9,[n06mgk@!8*0.DaKi_/Ojt9Q*A0Es4U'<T7NDu>&hG1[O*IA@'C/ddK&cq7Y!&[c
%q>Z&A&BhUM0Bs3aQaR7)$dgi78(F*qAHr3N$l;OBK]BVK%#u5`Q=\,l&C5kuQDW7(&1R0=`rEQn`JtX<N9#K/-74+U4qKj^.e^:W
%+m?q'on+"YGX/`>I?q_$*WA<#/20<%@ZRmp@SYgk7p:ptD\O-$=f2-$8)FF3$?<0]MigO.FrLk-^;bp9OQsLOPYV`S+TubnV84[1
%5sr&cN1f_IQW/$84U[Ap*1g3#A?d6P"l?"GLtRq>Zss1F:OSgO0KOtG^A`LJbttYL0\p&&YTG[$A)3-+2&Yr)1QPX@1hTfEnGQ(p
%5>NjPr<9WF5-QcBH;\@1)&iucJBE"YZ`DeL9oD8F.$uS])f,].9f?F>JTqBhZ?Q1oK4,)M?LK14YO#2(q^6R'K\M\UE._c4U/6iQ
%4+uocj*G=7bHC_qCrW,%'N-'ogA.hIR]qN34QF\*F(-^/PT]uXcA+Gq.Grs9gpo^mi/uXIB7=8'h`&8k'=5f\_dAI5H:nJ(RsT2=
%?n%IJ?+.V/U%/VZA92K;&!<S(IoQ7:ah,tSGd\h0XNV1kjKH&1e).i#5LdlSWbSqk$c$+C'qa/u,)./dp4st#o&hfi?s,@aePd%4
%g#Hc"k.Y??i2>+NJfDAH7T[:-[">AG]gqucJbZ''10)n1Cg.;T6c#helX9@i.^B1M%*9sVPbk@e4@G(8.()rk^'tmP/WWpo2gE=e
%Kt[.;\>.WNo@s7r7FnNtCCCP;@K'j)Sj(Z'9!Eu1SDp)hR97W6&gRiP?LKo0)Y=gc[KOkb_Tb['S,U:oB$e(lAp.1TnS]T;3"Va@
%C&@Z8L5eN^-!4V!*q>D.:98"M&p33f(%HSgIL-XIK5/[@\cIQ$TuU+^<"#`K-kKI8P9rB!Mc,I!@47eWW=6e7YTc`E`/pJj:0F#h
%b<r(=[sP'e]B[5,?h!5jX=TCS?g`^+iJr6#`iTr`W*8qr(4edXK^2,Glp`F(Potjt4Q7[?S6=/>&p-<7(,Fbr4ZFC.5-]PEDU=:b
%"R<!SLDTC-NM$%edUWlj6Z4^;8bb@8fW(X]GJ$#!CkW`ojW8B+c)J*57#I!aUcZP-fo%bBUV$lfTQa-FBJfc)mTAOb>h<T!XIb%3
%0dq\V%(OL=bnk2R/AVr$nI1dqF)!iKOeVJ4>N,hN0-&-J@a2/4J*.QFml)7.34[Q6e>KUP]'JB\MdXT1OAh/tD;W1.b:fk(3<\IV
%0?`M%=r*3mj*Ycn?86Ph&MQg9k@I,Zi!No=Z/hAN2[HnF`r.T+Q!JF#TZ=:rN5:X294`(ln$+F[&d._2Qt18Q4V*[L&]\g##t`F-
%r&R'HPN:NWNDcmP^Yj^PB?0?G<l`l;H2GjQ5Md7Vq(1%BLcrG9AB5ig4<g>=U48^s'!ok;>EMq5#N)(p`d0\U6MP+!S6qQs\!7K3
%$#ZbTMch8Aq\fE_pXVGhFSI>/d3Mfq+<J@^B[3WU+L8>-e_tN#9),T2*+8k,L`3kBHg)9TdQXLK45e>g@`b]AH8l+a:dDpU3nTcc
%M_%5U+ZK]HZ95Od#Gc#SRD$cb>CN-\U)7.oiN(hUjZO@tN4u<Oli(pk<BnMF6^TtCO1Hh_N7YTa9<c?"49Hq`S6F5@;RAYsL*t_T
%dS]Ga3DQ?%/%jXi8+qt?3rW/>@),e;m8j-Rp,8Os)M:C*i+upAN)DB2"`"\qc=fS/kLGb-q3g3<G]$L3qJnOuJLeBOX2[+X099dc
%`Hju7F&P#P.dL/u)M:@)@+2+aL;.Pe-!4V!ScP$k:9E[[.2j"m9hqso_!OdT')F>1E.tdiDOn[,*],k(0<9*eHDn.;hbZX9"p+Wo
%b?18`/ZJqH#fJN*P0KE&/4=qVGd!]f9_m;NT348IoWkuDgA]>WHt0-Am@*n3!lY%sTW"mdEfXU^qgiq5qTE9VL_j'C,m<3F0?NA#
%H5;Sb=Whb*SbG?SEHjoGcJ@=bgrs?BV27T\c2.UNnE@n-LhdBh/iujMW\-"SKYm;$Rq6Q!:"<c#K#ANYC$*'S'!S>YCQ.mCQ9XiA
%Etj+T.n$`(F'/%c$9-ZgXrQhB8613)k1`<Z3/#0@F1Pp:mPdS#@#6$d#9:$3[@W.E;3m]nV=;(DEco7^#ZqtiBqLkTFqo6aYts,b
%((7G5nO1-TMuXCj?>WNYU2a]U-!2>k0B'KWR9.]8d\AD<bfAbRmDqD9bWYC%!cB%1G2.4W6+F6!=OacA0Ka8FoCDkk-%LocD-pC)
%.Uulm=]>]*"GJ)S<6\Qo;\7X(<Gaa)-V)EhVX7,E^rg&$/2*[QB"^H8@f::ti.kHk(Y&W$gc0n<gVT"j]VNC4KuB1HU<-"-N"IUT
%o!E]MOIb\GO4e$sZi%#u1XDWE1VTHup0Yi3,Q<t)6Xdfd56!N8CHPZ_5FOOQ0l[%EBdbM_MC-11q8>'i;U%f+$q,,*(eD@oZJ3*=
%Z,/B8.19B(0(I!Ea4;/.=2uCa+RWQq/A%UZ*lm1M$?=cH#B/#=JRf.a(^eT>6^FY$o7.OGq-L\9J)]P`R8!l+/&QDpP4t4>_mELf
%O8jRd.&\\k\r,9,5Q$(>]Ueb_cCmaMMBpFJ.=f8[=;$Tb[J<=)7S[Ai;[%GER!F).9O,n#8(=7AFoSNSgU*NTBd^9GX>V?i0dq\V
%/G%$BQjV"L/27^^J4VYsf(4D+afD[.*R2V3Mgq;drY>L:&DM]`qcS*P]SO(=n&S=:L\6V-0oU(G5>J<"db$@Ee<"Er'LLc7QW8*9
%4U[CFRJR>H)2A)N7uoiQKs2JZ`<4pt-r?4@r5lG<gKLP\m!>9EojNhiE+fT*q"iHIEETN<#g!iQ0bDZ]8X?:*o+3cF:UnWn9c)P\
%M7C2AV.4(6`k5I'Q4A'65;#4V08-.4MtO+L6mr+%.%i_5)%>E3,"o/Y5Wf.'/C1CD+jr_)/)I082,h+O0S(aE^&fZP9W^.Y6E_W:
%q#*iMq?(0VAJLIfKZ.Mg8(qb?i$28,8X:KS:b]a4<M!==66p6!JXP/&mH?hYf0pB33`ii(FC4rnm+&#NCI<Hob-SU;ACmZS\i#3G
%%n>OAo3DQ=gK-78M'-e-9:@lESqP22Q@6@C7,G-=#<c1[^MnirZ5AN@C;X=c=EQO99ad"mV*U@fe)D2arcek'Lp$8.fGdd(eRT?p
%@mitY3Nm?6OIpf&EW1HpZ]dRnrAo_E,5;PB48Non*Qf:X%LiT2O(4CGGjFPUX4+`!SuiEUZWWD:80LrMd2#a+lC3CHcMOd,osaf_
%V\iV:3_&L"\3[k?$IfH5A\+`6"+fOib.FZKoa@l6."_MCm)iFP3@h*49*iH\>Z/gl[2_SXU6!S6:O7$RqK;4+(r6[8e)s\CI(_:9
%(uC^@Hg?G:]BgA8N?KBNjQMR<<n5%c<`N];Q5GEj^a,CJlZn:#*S?aJc_dnX^VG#k%9QWC1..FT6[+9"bJr)[[#8ZdllL\o+-44H
%b3NH=L9Ilc.>Gu`N(m<Ef-^`O8^>#Nj^D]_dU-m2S$N(e"ko/1KaYo!S_Gl_.VlH]22(2I/(gnjH0B\$O!M".GfC#s87GKS%/f5-
%Fkp(]KHHP!8I%1f%sA;&Xh;P]b:aBIli#RKp\XgYM'71p$b&"Q2V<r$X";(""7ZeeA92K;&"fooe@Mgq(M@s^"u\Bi;J0`%f\!t.
%_SSY"kDAMDWd<9W'#6QR]X0;l32pD9Dm-/rj:I\k]IB<`.k18MfB4S7YF[-0laM/C#.H\cG"t:aM;I0Fc9mloMd_nDMa7[.\F\U)
%GJlPlG&!IX_@ck?LmD"]?9JVPkJF2u6cTebL"]k%\3\l+<-ZGN'u;CBl56.:&>H2Y;K<-gQCW`a_K?f60+1L?+GW3A_^3j'=NeSU
%h0lHN]HH_3^=gqAE.dl/'Qu_8LL"SC;m@)aFj7hT)JT9"OBoA'gNda>r6#=pj!1+b8=MIp!i`@%P$2sD-0HEOi,W#Zo#$q=aCbUB
%0.d@+WcP["7ke?c9ud8!?p?>A<=+uO$,e&pQAq=*/4>*\=N3MjDV1#JJ<pos!\`BMDt)OY[pHUfVeEAJ/_4A:+#5lI6A+mJ$-?58
%0iX_FPAF!rjT-fVUnNBgd:G]3p3W*GCBkGVTm&Ah"#16+E.VtTC!WCuCC]8SL']qWiMYN*l<ns3BX.b$#3HLObJr%X*[jHp7B4C0
%jApdF\S5/bK6nR<e@P"(0%_.DC^!O-dTUOtcX3W.HT%D5XFnc2WN$Tk!!jfKQHUecq8X$4%\k?;6LX$KK&)aLn]Mt)S`nZ'rac0X
%mhKd7dk?kDg/^CDi=A-0960=Uj8,c&b5_nC=Gs'&kqi9/bS?H.;Y)%Z(k0<c+Kq>P&;VX$JMRiHL<"Z$lE8QHp!@Z=@A-Fip_Jk7
%F)Yin%U"N+"7lqgA92K;&!<S2s3kP&m(_JGMfXN<onCEY%H>+Uq5HM5WpF?RHtj'oT):Zj/j)+*c*@a<#3HeBb0ndC*[4$7Y4-I>
%j]pCL2u)USi8!8[-@F8#dILZ'T(cm;<pA.6\*6E;3.rkYs6X6u;?rus8]k'N+]Rge<n2?k-%pDP;=FHiR_5i>*N.o:j]rKVjk`\n
%5C0+o=!Kou_AS-KcNOJ#MU@Bk$).rR('7#$FjO64VCAMJ9*iHl?HCuQg9d!#99,!7@uDc_Kf;bPSPbserk^0:-j<AZ:G`?0MoP^R
%?Y-^Gf@V!o_B6_#Sb"Yi%7,ne15_`4O1&_2?Jd"rIWD2kMSI[1+4JF'UBEMhDqk]o&%p+8jp)73Xg8&O?Kef80fXgf\r)ch]/Q')
%Z4&aJi#H^Wo$ht,OJ;?'HAT'0o4m0&a=AgbS1DN4^U9i_>_P\4Dc^fa.8=tg9:Hj;$=DeZ:[]-$#4M!C?XsJ/(l2h?,b%`uH&*/k
%.>Iefe*?D^N7[bWp/>0kN4!-I$H!^qEGJud<DVqm=TVESIugI-1j2;PFV69f+t,Rk-/"ejb<]ZOMdr*/p\;Q"/stjT)g!`G.@9SB
%@g0SB=FLEfHqYram-+c-8dsl;o7Rq&Cs-5a8rG5fNe)EZ9X6[dSd2(T36VQo5C.o+lbB9(c"ecD%AN'$Tm'UmYliIc22nN?IV,X6
%OQX69k]as4@;B.*)0,_q1Km]$H1`FNI^\HG-fp;,6r5Z,f.q;.%2DX\(]GTnSoGFCgn/prp3le+_dULAnAf%SO0f<b&Q=f<821g=
%J4VYsp<<\;[#SgP/4IM?j^4^JB9fN,AN1\^^D?M=C2fl^U2d/,qpSM'HR5a*A:#r6iS!o_G"(:U&hT1h-p5CAeXT^e!R`crB]F*H
%%i3SYlIYiC^I_gE\(>nq]/;Y90U>!D[fRRNh6#^JNF8YBPZ"sNAYWfjSfWb=_%Hh>N&P9mAj$NaTGa<=j\ies]]YW`6kWRW$C'"f
%b:?g;?K('ak5$A#rn%`E#K\\[r:/G3O4ab.M1*M^821\%J4VYsp<<\;Zq#njo<^t#^Q-^g**cqM9k<p(Q`2H>GYG/_\&XK.\fLVN
%0+i$*U:"XG>oG64g4#J;<=@"V$:_Bk2<WM1&D>aSmp'Ze[t40>.qi=%bMV/_GZb-\$4e-(X4T)%7F[fff)S9&"c7jR/ljuW][?UV
%/QE2&#RX&.75a8YF+EnA1\u'^\$b2lFhXLIa1nB4hjHtnmXOAEmiRqA@4L0;i<g_Y0:eR_6jsQ"iJ?*')LOq+:6I2j@ON2sP:TM3
%k93a17K(m9T<_&@OHqj!$j3XDQ#YuH<QPSL(oC9HX7p7j*S9P]'SA_PfUh:iQ\/Y$d^YOD0Oq':"0Spi[@RW!BNrk&q#+"I-F'[t
%MfGg,51:F*p=lN"s*i0F4OUR9Zt;L,+X1l=$8W_[BlNq(Ot=E^6fA<<A8,X-$.o]7m]c;L+>.IX5Blbo"BPm'+Sf0Po6Z%u">i4O
%\J@)'06OHA-o;)fLq38rmpi#[J!+W!)+).F\#AH-H57\jH^JK=i[G2Kba64/*aBk'b2odFBISCa/'b@64DlagAQ>r1W?F5X"mIjZ
%`F^qdlg79P^^QoEKM/=-Z(;+EkWZmLjZKW?j4F,(Zo".#N%a>p_e"R\O(f?3Idg?<*;*'nN>NY(_@`^<C%)^_N_$TDMLg!V9X6dg
%SqfkaVC+7f),eXfIN@=`PNlB`8tcd4.8+TS_k!PQ>^',(WdL<8Pg<G%j.?g"ArO?t*;ldVQ/tLlcT"KPBCqTTno?<dgm.mbKbQMd
%FMq(^@qFl=H",I#_0GomHritr._>"niMZc*r:.SXPI(f`gfuI3$_mt78%;"<kOhCIP&igq+7LA#F4GHk^Wtfc"0Q:6YiL7<f$LkC
%G^F>`>"'7\bAC9P$k@bL#!?Xe_.[afA-liVQ$^:t)cQW,*[4%r8uqrdlQ>D0qWn(5U+;/6T$#C5+3n5l<C\'A)/eQR%WerB[*==D
%_os,,iO^1d.YH]W=C_`((l2h?+j3gMH&-2Wakh_H,+;e^cGO6#r70Jpje8dHkX'KE[#EVH\eA(HC$Ik;1-T/dpu=*=6"(Wm7P+A3
%._uOEH,N@U0sSK(+VJm-;ngFm&MTdMb*h1"fUf#02EU!8OB-rP2b0_hH[9V''#PU#JR6(MW"ohKd2JNc$`"VqB>>e9;sS^b'M1B)
%pR@=E:qe5&*4Gq;(QR]4,`DZBI=GYk,rBMZB2*R,Zpq@@T^^!3E(cr]G/?S)<=)P/Kd0o)`PfJn5_<NJ^_Vs-HX2C+o/IVW<P!)d
%bI3PEi>"nq;2tI`78ghk/9CW76U1S??>74X^&5SO&u8;NStW#pcKR.`8B_M.cT06857]Kf:8DnlQNV.S>Pk^B(;TkH@p&aR<gCr_
%mK=RC(rO*Y8"(F/a#XuM&hF%t*l3RZc`3lCfpNB9etr-1*lfg4?<P)ZmXFbQiNNFV$u,UNEErpSZBoK>Po(M?G\gJJ/q\/Z2e=M`
%(mmh///qOb9-,9Gf0A^[2-``GknCJ_Z6IHHMQ8C04^?%kk_q;C9[-AC.5"nsC*13<F\;I!AuRuhbS,FS>Mr)N=9qEu,arf>$&I@f
%45]rXXa&7VX^C8TC,Fp19FeSXJO1:D5>pGULT$W!$1;s9WNoDlE;lg[(rO+DD%dFCE2npU"1A2cB=+AToBJo'r9Ws`XYrFa$>#:e
%+Lo;OR&I6pQ+$smE3"!GT[[QOA9NqU:N9/Zp,Tj>dBpR-&hGaKc[\SFVq1GN.2q1"-Dj3>SI;;W,[H*S`2]f*)<k@DL$0B$q6[0o
%.dKlX226K>HoW'l@rOUNODKI^6fAn:al_*!*[4&Aqk'uL8D3,Ok1m_srJ)7qTf[<&<7d0@UN!U1j[2U]??R$Y7%dBVr>oln2#)e!
%$p/_LXXHEKEY#U9k-TFEO</DM_n!<lO&*O9h&&/^6MCg"G\X?XK2HaG\=^sEZLcFuh\q,6..$:!N#fsPIoH`?&;Xu3WL=Ld=eGo.
%GCd,Lcn?OTA47quNHn+'["u6TQ_Ek9j(mXMSYB$n_:Hr)3(gJ@B\C9j]@pUU[0K2O3K$)]^O07'2uS_SMjZ'u2eYB/$Ff1+=8nn\
%WqT^2c//ap:ju*e<mBo;fou6Q1<^#[B!<PLe*8sgbI'g1f<LnjgtFXk[qis3a3fq1p^7MBZc_HPqK8!4I4`.PTJ3N,<b4aQ"g0gA
%ij';2%#nK,<Apc+oC0G'9eD)]<o1+JM)Vq1D_36]`=#pHhJO2-_8W/6eh]1:>k8WsLU26lAi9'XPp&R]3293qS6!r:5P*OfO>PoV
%jfK'>4Dp&qgu&dgH>6K(lnb4k#d4]`2PfRbo4e8P9MPopchffVg,rBcA0lcE)(TF`Ufmu:&'Ru'*7+/n"#D8*DX[pTfX"[g1S-B0
%hG8X,APG$1CnHd_Cr&;p1=W1*-'OTi:Rm!!ABq,Js8/6BO59*bnXAPk14gIPD)I#N6JC@F7_WUl\*^URX+j/.#)/aYKd^g-IXP4[
%Pm@Fi[&HXgC.\37WD?Z\3O)L+ge['bbBl/H\!@TQs,LTZ!+r:a<5s([q0_7ZGH1uAV/<H/r3!=.=8mQ@(1Iq?nRCB'rE\$CbH!\.
%Y-SXc!!.9W(]/poPZ<nX*4`5iGf(F0WP3:3kFWfI67@(gR5XiGVqN?<O@!=piK@qNXCpLu+un\d50R)=D:T6hJK#SP-=!4p,'=_,
%KT0b/XtI?(hM=MNA)Z]@+65?2+!umq6OnZm`-\m0s"+W9-07.`iZ.>$Kc^I;Z^Q8qVfbS5nA'?o`TDVH7IAd:"Ya"1#NI"2#Q*Vi
%WY4@u#\UN?Re(8Sphi\t>nPibfTa0sC2efKn64DrU9cDUlbX8"Jkt9c+N\&pYk@TX1ohG\8#p@.39]7"[%R?lJhti>Ua`_IIlFas
%DI)t?TB2n'^rC3Z?J4'4!dEEh)qX)aY.AmS@h&K7J)[g#:N&AFh5@;#6OnWl7*DSbXdXgH+)4mD?$;cIRO[*20]39KOG2N4+;<R$
%)=BS0)bFn6hdl]LJ`erMIV5X4r>npL$$$$i,?0tg)>36D2q+[lX335;Co3i5K,ED%*b4RA:t`oqCnc)WWKP_J5kX_]go]Z5h26OE
%i5<3&X"6VqJ8k]bW\gcBJkpg;*7@4XaUr@7f>.o".@ELYJSm0aD^q&)[?'TV:sB7]<cII98"8erAZ$KJ.RT)DECA!M3Nnm(TC9U=
%oh[n`4?@$`cH">_LZ+/c]!5_H+mP6AkcT>_FN("Rk%1ch7PCd[2upf$PpLKDD>ob<*;;,3&EHWKp'KejTLK=don?c%K/@O\U1X)F
%+p_N]E[Rf<h8c22')YoSP[IWNVU]`!l++#%<ZBp'G6<ll%kH"AVQ#\oK@+hME^-""A\FLKN?K7u$MUHZ3nP67WbfNj"7ZdZASGm2
%&!S7qTD4Hd7\EJ0nDcX!)mheCefT()?^R]*Q!5o6-9EqJNZjG;4r4]<[D?`+;e69$(l2h?,b%_JH&*0VLAqqQoPq`T\F%]J2[E>?
%H$7O:o*o"cM:_O%k7t"uAuitF0GN:uWXOVp<0:b50egq(;jO<3ndm5_?T)]8-9FBMX8VA>CF+LjH!-0o(0ThZ#'#Zs@I9gd7@-'o
%[f@+/!55/m@'@p.WXL<X`Xsf%k.H!M,!?;TB=:ld+?_6T.)69U_<gN:AR>5]Y^'5,c$@s6XopH=OO;8!(T@h7kF<VsJgCQ^&MD2R
%]NPpl5<Bp\F;&rqESG+Z)pW&XZU_2!@<P,=6ERftJH54OGN5F_m=B!Tfh4m2RbtB!!4/UZj:I,[]Vuh@C+5g&4Nu9N!oY>=,B'Uf
%XN[7%'M`o;0\ke*[ohX9kA%$K4T#[^&L`;4H7>)p36"lr$'l-i8%^+:1[A1/Ju$H-L,p.@rs4Z(S.Gc]36gkWi2Po1)Ec;eQsm_1
%\TjC1eh"Cc0VbiDp!;m17qM#nG7IYba<<6uGZcq;<jNA5=lEUJVf!Kk4j6]L3]6!k^V]=?AqP?8DqroCWbD6cdH<$5^hF1)FYJ9M
%7?q6eJU,1,Z8o1YJk/YFZC:NWed^JN,KtAI%AK-Um@,L5k,l2bFUomrXS$1>0dq\Vau.=L=E53\JgCW\))01pe9W0tU?`04!\+#Y
%]t@8<[B+$D>bSnm-oCgT$DX"Yj8MKMZ@9co1$f"emB6o`1NbBf$]6LO&d.Y4Qt18Q4V*Z!fdcT"(AC&g%UCl:+W=@&UHbdF!Bo$>
%^2M#*Va=Ye[B$62MY-bfTC3<u7s66$_>_q\<0NRQ&neSFRBrpB7pa-"`,!r"'C*,>]5<p(JK)87("Ve'OUXc5er$qMX<"=YI+E$<
%%\_f-N-4X(*TJA;O@(.\iJ&gXXCi[h[%aL%H3GDYA$%@1nE;jjA#:k*IQTt9.a7JdiIb))@:E71Y]o=MK>Sdl!KSL;n3V1=Q46r*
%-l`8OCejAe#Gd091oMA2Ja^r$LC_08::.QXhXHR$Jbg>bE<Y@9=@9CB5BN<O"WaX_puAWQWF-UV]K.cY/'Jh[pOGgnVtQH>7#DbG
%5SdEALd)1d#I=kcFY^d9e/:^t"S_Zh1Kn'#Y-&[CpAI9>qGbZn3;i=!E9Nh4qL^/P18=g^B<WhQZhgO!fi_1Y->+_!(%0[6\HVc/
%SXb?NE?s#h@l?MRpg+s1\(g2)6iF9rlMD6BoSJPpE;8H:TU@GB^>lJ^A.-TuQm5p<NJ[T[$^%)r%H[SaVj$Rjq$hd)YI"\=9NN>G
%>/aWsW3Pe2dnA67C6M9j=-PEI^:$&u:g[%2aTC_u$V.FsRa_,1!82W>LSjJ6/nonqi=7=J>(1W!>bQWT0DC?A/0A1+p--Hsq>SD,
%c%eO@)#cOumlC#t"1t@3+FS^t)/H2AUj<4h3IA-!^SH\i^,fH$A?Te,$F-%pVWtb\;W3)aO'fHjK.O=GemN5$%\^-(0rm'So)i,a
%Q=,Q#GQo.n4LLacUhCQsF>ZmEVj!YcL#`+<>iF_f`8s;2*D?gic)i'h+KhTj?$9t(T,*&G-nJ.AO.G-W\Yp,l+V;tE;`,rRZOdGs
%_W'`>X<QZU3?D5:e\ku,TAFl9O2i%X#JL5(CX]P_.ZQ^1@>*S.a$Z6.VH3tKLH?8G7%_dBZ'&YClC.icB<3eBdiG8*NODoqJHf3N
%p]^CQX<=r==E%:>MHrD(<#:MS3!>!J=SVmc@!cHn9df>WK4^dMa&D9p7r"j!ck.^'=+XfBEKtLGd!!un9tcl-'NGd)h[J0F"A:B5
%:00[;+U#Hp\.0R@4UW(ZJ1Uo`&T+K;XEk3t4+$To((FD/qfRA`5q?o.cb0=6)4;%?EDPrV%_rk1jW!G1KU'1;_S$h))=*9aMJ0:.
%!&2A!7@mFR!&iW/+-Cc#dVnOW;irlK2o*tK`65Lk>2ug/e3Q\#]:&QNHW?V[H)Mn1]OhEk[r$'1i$1p>8=!Y?Tl?'Z<-)O+/4>)u
%0KPJg^l8P(Z8"Ic`bJVMbp!Sag=X&'0g;2nR6pfi>+S0_]@LKD!;<MAQF1..]AfNRD)>9bK(SlW1K[Q"Bminkobn3RXn'!+8%lnS
%VT7U%@0S&S+kQNu/,Igs^282)KiOntL*F]2)o]GdIaQdcB,sRO5RO3(&!p7:?Cr2[4'1.X^HjFF`"Ks#m"@>V',0gQI\k@\67pO(
%T8pIlf`*Chi_X2e1A(Bm59AEs;rocZ6[*g3&h9NGS:XJ_SCJtfOd^!>2#_"Q;GdWE5AKWt#HlW'j.:KGdb;&<8(?]XJ"H^rrfL>a
%H6f-[T,N>L;\11nrFpmqZRhXK?'\lTTl:-.Z8o=2*g!,f68>p]kjEG)(5"4=@Y-*=T0'SNBZq3'k;qa($R)S9N8c`&@>7^mo#%Y:
%Aak`3a\X9a+t+GiP%mbYRtXD[c3l6$qqjM%d8_O'_Xha@_h#P6(!cPLi8G9'0lW8'^W`$eJ#4&&rci83\td(d*6q-A@#:Rr"AH*]
%[;R+J,4VI'PMHK@mI0,qCBq!RqtBLYlc7!_?LbVTq6V(qbF\EcX"cU3n^uW#PfB<"Vb!fk;@(2shGhaVIBsIkRd&_Ad^N%4g-'s:
%4PdG1r/_j;F/&T$q"/d%,!42HO(4R1%n7I#?gclCK>jp/XX6]F`)&Dp-<ZpDcN@(PmUF=u%biYVd<s!cNnN#O`Q^ePPT%d&`/3CO
%f,n$a<'*\/J'-q9qsi"QUC%NcEC%tT/>$9'@SP7?e7\cCR2+kfldY+d?cR+uEi]["'[hKa%!3s]&"#CW5/"okW?1aA>9e(mKlL7P
%#n<KrRS0pi;@J7l^`c?,CIs?SCoARcCRAg41r+IArlhLrYs6%*JL_\W/Uk4#RqW&,DVchAKWpTjcJ#"*65f-FXG\P_ML]r+9<("W
%D\eEW4c<b[f$]1KH8()OLjLe,.n"F^m2PrX+/iu25HYRq^s.LC&+@kC@W5ufq5Qo:c`h+/=b7rS_@\KDo$ht,,"4:K-dO_uZ7CTl
%P/okt6EDTWajb[.%;tl.rc&,$VtM5^ZCCR$X<AGXn]9!aoj0`pQZpk/O9-Prd?87il^NRKceuP)pPg5OEaJMp+&R!2IL]YV3KlCh
%YMYWB;fJ#XmG:]MfE\S+;`[:7EAn>UIp)B59t!<ETl:->A92KK%nP)sLO](OHNAADhes30#?U,[56[(HCBbO=Q061&^nlIlG0",q
%Bf.OZE?tfS-q$oP&'!mAOTk)+&C5kM>Gg!C&1NbpWO>nbA5h2h`af8/e*gDlm>dL<8pRES8qkuKji7O\&,#=iU3`31#EU>2A-(M)
%/nOMlpICKNM1Bi*9<'_MQ@_ZQ$FatWr&i@Rq>Hn%IUNI_\46XIn*"'06JY)L[\;G4X\PMmT^]u(HS8de1DjEb;O&+'^_j<l9haiA
%JOn(5]m=KD@b\!emB?+CHb(_/pipS>%D@$*e<Z+ZY!CcW^7).\;ec^JU#<ndALq//M^lOU!qD4.<HDV4$]uPdA'/u_:F'UD]<1"k
%ZXj5co<^%7^ofuBg@`$mlD$l\5iIb/E6\%rm.]ir99;Ig*8qZ9bj1`$b0Qg=mHAR;r%Q1-i!-B+#F).W%^UM0jiaPlU@+=J,=lT-
%ku2P-qe*-7b-3:fo(g3[=;&kmoc3lU4]9QS%geAi_p9Vh[m,[#OD:una+!piC7/W1oocpW@$PkIZPiq9c"o#@W)a/@9<-&G/27^^
%J4VYsf(8Bt?e?[V1%a/UUEO&bqq9VsVSM5rgLYqOXo/,2T+c8h=nbCd0dqu&RJfIp=K`=<WWXc(_@\H%@Ue4GI':rO_L:8cY0h1m
%!B94taC8MM0e$X#IYc=j^>VM'>5.\._Mh7W_Ym,0#Q+>D,"o/Y^`;m-C/1jCiHp@3-LP>t*-ZXSN!aILSi!R3r-a%QNn;4lEBPnZ
%diMn4%.er=-@adTOubSVYGZ2f'LUt'E08,h^3TK;+\E^J.l)5+R1e0)(%(8Q27bM$f'M1?s/W)je?/i5Z#8OW\@W0XC>GnYX@,;j
%_3/>&Wm1S@H83Ai@))=+ie3/HF+`o@VTo8:\#=7MGk`T!D!.tD^/.USQ5CTrJpmO]=F7r%Wdm58iYh2K^CtBcpqEIt=f=^<]Q1J!
%!&)o%>,QQb?[0l":R*O5md=#mZJ(23`t4_f_YjgK#Ff:RP9j=?+J&UtCeh+oTr`9:p2l..LEBL^5mB8]KsD';IX^5kM_Kjs)bQCO
%m.sgof]JaJ'XoZ/[DDQ?<FlK&(mmh/,b%`uH2+P-c2#"ZYjI7SZL+nI#e2rJRE=6K"oi4aiN\TK'Ck#_U&)Laha^s%$O?e%Bu>R!
%1cZo5ateRk,MZ,WM=iEI='MT(@dPCA>OdpfDXa*F<mK7S`,d!kpR@o_D2R\e_n.c1LJ[K8-$?F6$`^K5>7A_#i/m'"ofRWRl_di?
%cIg8^]+4!2&(n]\Gl4aaU(F6orV"c^P-l'(/V`(gKoB5og,dm3+BDKO*'rSCQ8EYh4UL#:Sghu6?Jhg9%[R28F)NOVSCt(MV6]F&
%C4#'No?F:U(up?%,&dgA_loVBn?Ku'Po*!kbgD.l:TJ*c]29uB0)F>A7NjlC^^^.r:nXpG<#A,`3a]Ii<FtWm(YBXY67@)\EZ6"T
%32oN/,=n?PP%N"?-fM\d/>b%7]D;p'2IYMJpB>2u@CA6,%f!tBY*\6&X-I9[#),nC7BJTf5%-mG@#9G["AH*X[?cSd]u$8k/.ktO
%Fs>iO@6>a\hLZ]Z`Y6l,be9K=Q.>#m4U-!`<UPScFg,)2<*=em"7lecARfI<&)WhB3OZ:jOQr(4@UoBUotnWGJ.:?`=K2)$apStb
%LZ]_/656N:K!5`n'i\59n0S1Q*c4cn]Y6BkHEp^fDO9`!TPA5PK+>CWGGu-ul*nCC0QD#9c_>PbgZ*$'`."(mgSAS:YN)BMN$BGb
%dB[B.X!clh@kV9IXudU)jS59/97\&S7q7,Hk1H=J62?'5nQX=s<nZNE+Ib)6$jAFDWae3.<L$qu+Z[L\W\guHKh,$BF278]mNgXY
%%bSuom!+%9lN#Ys(%*T;T4'!3Wciic7<#=?$F_[If"neEe78l+%*Tr(QGq'O&gBJQm%O\_"8PM9)Xu`hUUF1V>.-_Aj*#<qX.-1K
%2Js\2b:i\<n5'tQ'MX<%!:u/8<-)@t$'CkP##^5U*VM(!AcuFVO4:\^@]o4dO@47o<E,MaHN`bY>-*\Ji&qOt;g.W4l()Fj,b!1s
%3Ul[r)dI(+>Y=]2IN@H+"l(5tI(=T&LG65QgnJSi\iS\7=EjjFI"i_-NV0J^;'f=2?lnj$CsK+nJatVq0h&Yjq!48U^PFm.G)bJI
%d$@HJU;qNAHBP5+>,=fK!0nnRGAAR4#Oh8S+'F=<"7lecA92??$'Cg9H:G<-3kPj0Ejq282s:dE!qkBY6*.A9][#\9=4Pc]4bPd=
%.K";>iA)6s'1J31Kg7W8,upC9b<dI&%m=YHPm7VYa5?K!DU<`LKf)k_;%M6g2GIkjAt[mf:^@6nQX.U?K:PGfE<(hOfTaT_ob9f;
%Z=%<A9+0k/T#Y#!#_OSV0t++qrCR%a57KU=:W?kpS>(FNFKuGf-^?H3HC8):A]UK>4<l0*S5>i*gpEYl%MHD$'<TBQJW/2YK.FUJ
%>L9V2>b/t\SDQ+0+8YYIWn%K^Koi_Sl9BL\T>>3]>\"/,(l1\pUm_t_=l?p'/U":&XCLB+GBFT,K.HR!.Y4(,fbQ!6Puh-N&q;"9
%>TmX%\/'#lHajh>8*e;Q(h[]D/AVrdE"4j<H"oJQo\;Ra?V,"5jALa<B,if1<sU_f/]9]q%tr!sLTfYHH6d8jOqr[:-k*:T/qZ+W
%(+HNt3<nI\0ZiJ,H6+8!4*OSM;!k;'`J`"V_OsBMr9+$4lU^1uk1f8]F!Q+#[8DqBEpk[AI[ISQhU*p<AJoLsbTgMYc)L@u+@S5X
%,/''!mggB#hZ`oQ%<.#B=m_?Qo]u*:LTo2[r-lEX[k!-uD>Pe/"D88_W7C"7B_u"5"1Ac.8%^"g1M^-Lr#B]fOBn^K5_9JeB-OM*
%Rt`@K:K3(SVZ;e2`ohXFWNu!MoXOr6K0q'&C9@sT]-inUa>!h\J4#X#f(0G%)ZMp;?F"Hao4KM8PJB?uk6cVL=l?,0`/T`]hgiSG
%W2-D-F[h8h%sW]p-d8f(W7JgcblT>Eat;6iMHP@+JF$N]4=JM16p^bt#8Z,##$g-VU-1N&F..Y]JU6td`taEb/ngC'iU=Q:m!2dV
%gt^,VX:3*76'<g]@ON2sPAF"]RtjP^N'hbj6P#*`bJ&ej$D.E5][!Jm]u'=m<3SBN2pH2$rSLNR$6e>=?Zkitgnp!@$'l-YB=K4V
%oBJn4IcTiGcGklh7ht3miI/<YS&O'>'7/5!XMHo*!*8U!VYd?Tkbe>.p%(+)`Q409pKHOLVjF-@AqBdR"XDSBlBD(g5;KR^"6T7;
%-9/BWj#EEq\!`j@5>h;bi3MK05H[9,NFZ.7_;^tp=CH4KE]N$hg=YY$.P/`$!_AitVBjKfVZ>C1jCUAjeiM&mU^90-b&7.D`R`7Z
%;5kSb357/<:RPS"o<@TY?/O.LL1>19$L_V0QRa,)A'os@$'lD88&-Cn;sS^b'MU5bP_8N/ju178lds(t@/G,,IkJ(NX)Qs9B4`dZ
%7>@;1L$E8OJ.dC=+--eq)*)e/Gm]HB/.iSVE)SWkeJ!JWaK`W1>^JB]50H[LO-"rD`",gPGO3k6iVU;Wj3bls;PD6.4,7*.E+T/l
%.".\(m"P:.<\9D"+J/+d/C1D/+nDsD='58oZ<-?b)j`UV]!%3:KjGq3Y1'Kp)@Yq(`eP?Q(Y/8.kL::t%`.+bLPD9.%3FXC:h9rR
%#R)GX;U(&HZ[`0M"d,G(&C1Mu0J1R^bEn;1/&S]E<"s*m`s1'&m)K9]?bUs*U1gc2!ltjUb*S`0Vnkkc_5/Wd&jbI^QW.I$T+j\6
%L*)[_pL`_?^Q'H=Y0beZY/ekS<Mke[5Q:*bMg+HYU+&C\N@7"5bl3$4#ii1ZXgjL(')LsJ#VsrQCtd*qP<HTY`:,bC,@6C_UYlJ4
%CFLc1M\mu"aD&-SW>iB:G/N&Xa5G;Y(((k&n-T[NOtDc)+J&Ut/5ND2!@\rXnnQ?pmsC.tf"9h,YB:L[#Wi075M;i3U-VoU2!dGE
%<o(EXEsZ95DU'oMUXqU;(@q_0CSu!")+).FQW/6>4U[CFM'>Oe:YHiSfD0OK:N2"IfIF(nQYnZ9*4-\_q75bGP@]NA/1E:^1;"TR
%3(DA)Be?PJ<Fuq2if'0[H!WW?aNl3H$5^E)lK%X(gs<8/=*U8lnpILq,X[TpEp\EYAYh'KrVWWL3&H=FDL=9C4:KQLaVIE%&C5ku
%QD`=*&1J52VMY=0\'&-fFIQ_*bSAR`<1dqeN%]FpgS(41XLc*K"F?'g&0..U(5?idGXJ6#Q7XdX-lCp+.Sm-Y!>Rg0VJo(A6usD2
%@dP(=+m]Qtms/UV+%*V%2K#tm/1^]tC2!)VoKV`8Y'>$5;(L3e8?P5SCuQ=GWq)DLIj6,BcKJR8dQL<*&q?JL?@?dH0[c%Ea]-"V
%Jp^@2gho2)HegAKTbmc(iJo_42#,'F?W(H)&HntE;mX]K-R&%:_i4P?X>/k@F0D;HY1@1Z%:;%(b#B3R@YJ0.[pW@<)qj"Z/Ri[4
%$@>l`d,<`L^ThOZ&clK19:@lED\A-Rq%+Ws=k=IjTY%U3+(8a4["jt5<+!Abn.8sr@82<1k!B5(ICqB5pF#g#nQ<(H9MpB]5f"Kl
%M<:Tto8h+SI#D;(9OOjQ;>CgZbfmM?2-mfa>p-f^2Z@%OHuR0L-Cu:)jqo*;G\lm+U;>63O(A]p(l2h?,b%a0joHoo'6rq`-"2VO
%YEc"loWE,h^KSV`7mHh+cGjMuTl>:e[5Og(.Le29@3c!VBEAF!XRY3`71H%bY_58(_G+%!f/EqsSmge64GjTmai2$]bc,F4eGJ%M
%')aQ>m_WZ5WUS(PmAm6l:%\&_LZ$MnoUV\94eB$s$WVp$!qQ[V7<;Yi*$@Dm&RtPe:?s#%lb&Su5$hL.i"gQ^9;qu,rN^EI#qiM^
%O$D,*N7ks1:o?]K=4m8/Aq:WrnVic5F'd`L7".Tf0V*+!nEV(_9AjE!k*M,FDH`0%?nQmE/E]=,N@h2'?d\9=;aYM;$6+p+B^g>r
%cnT&K;@&4;>Z/h'IC"G,Xn4#%jS?[9;pTStq[VcrDck8t2^7X6<$6%K'RonrDNR)a(nen,ckN;&p).`:O`kIg9<c?"49Hq`SD#n4
%OeQe/&0F"$>P%1Y)W%sA\U'ckP?HQc47-1X_Us8eI('pR._D0q@uXnE7n6_Ho;>b1/<'hXQ%rlVQ5Bs!^a,CJqrRo.RdsS?h4#It
%'E1%RG"*#1OBN*$YQ&(a2mi$46e]Cor-`CNJ#_l&(JYJ!N_U()\e3NH3V83;0Vhho"[G2F,upO<:I=,T`=5R*pXTVn0s:QXIbF7?
%aop5UM$g'Zi:8+=PomJ!c]RMb[WWquLF07Z3;F&o*FB-h8=rX>6X=Omhml6\[TKi-;O?X]^!mZ'h=$ja4KKX8^j4f6#=drKiO@E`
%("jQ)a>o!ER[;@mfIMTfd$A5LQ5Bs!^a,CJqrRo.g92nQO[MrOL6ogJ0\6G/\@^4QS5UI&hB8(*26I]W<E:$KR=Q$ji:+cs6iWl9
%Ga^Jmb8*W'&C5ku2Q-8n6_m7(#JBj#6%:k6`5%q`W$8GEQV'%c?g]TTfGYk"W^EMI03.M^?b*0[:0:PQ>_]CA]4QU.5iINb<&(F;
%rQ*0B;[$'GG\fn(+Pja>%^&hZW#Lgb`FF'^ooG):<CDu*EA?Ag*<(0kW*Q(4,C1GnCk39&nI1dqF)'Sp7#EngWr!m?@+BJ^?g"@C
%!S:-&r7,A3"*]Gr6sI0ke$2+Pae!aRiYYF:s&//G>FWpS]$<O//45GkEWf(A3ONcHOJ7k#Y_K@3r]5h&/%C&f32:$\I+0FG_PkCj
%I+S@S:"FV9[2??V_\tJAB[3mXM&'*C'LLc7QW5cFD\aN_=$/`b`uD[X3X^_`0=\mBXmk1kRX<pR90_*]Xm8I*oTcBo!*5t]&$Mh&
%_'f09=LLI%U$rJWA92'?$'CkO+5#mrmo/7tn';lt%c@]mSO!a#ge4gN'o(%5`R\CQ<!<c<mYM4$6,:6b4B@oF5C6<\0I%u*UW'^R
%bcBhJZ?',\AimTq%!^=9s'hJL?uF]l*[gH?KnKrZ+-3psp,-"=X4^rYM"u>VUcR/_^9ML*'LUgb\B&,oh`O_m]GO.6J%aH]I"Mn[
%7Kg38M1;7CEaJ>>irE9Cq8XgbGEJjZ^dZ6iGW_V'?G]uJ$'l-YB=t44'C/frbBN.kC,k<^+X6W.Ql?MQ^6eaN%$/nqh)QbQbT=0@
%lG+@<`9Hu"4Oc<a=g#R<k^jCY&bYsIB)T:"aC/$'-GiR$H_UdHk\o3SbA,W$Jbg(8Zk/Rpr]a\3R-//i5oBg\laVt/=\qsA=@+.%
%nWI_6XC^@;a-+?_msE.oG:YmS7\"BW!k%'4@pu!:nPj;.WjrA1!#.b-p[a#KYhsAV.PVE`E5YA;3N8U$n+2R2FFW5as)L?7(Yg-n
%K"l9i3_>%o`VtgO%H:Dcg19)2guhIo5p6s#hGsjX&YggKYf&dh"")]k>0k+\WHh,-%!c@!;tKl</6j@da@DUO<-TGB%9L'I<,](_
%1f)I2_\&b@q\Dr!AahnN3aZD(Q5GEj^a,CJlZr9>HVJ3iIA0MgE4;/9hq@X&HXP/1g\tfH.st^.X+dRg(=`s9634MrAakS];O&(h
%O>qh$8Y/pX_=rq;/pUiW2k=,VDNhUtgku:F>nX>;GEhUJ:)r-G7Fm?4=pugb0l@HWl<ngIBA!>8L;FOAOi>haH2+Q>9PF]^8ho;m
%Es$7&NAh$$%iXE*e+d1^[Z[*EZ.D3)NVA,'XelT:.^,kpO@(.NBLt$neMH]#2gkY//aJ2jUKaUH]5aP_9M$moCWltnq]fM)OL^WG
%YcR13Zo,IG=S7;\DAhdgGZhJlN.H3X9X6[dD]ZVCc;QbiaC>obS@tb&E.`>nGA;Edp^<=DPohE)Dt)Chfb_6a-,ndR$@\MM%JC`L
%OU]rP?lf?(/5ND2iO`eYGONY.9a`J>$#IhC0bi>WF+r=9$[WZ5:L3iJWn'>E7A(1n^.-QUDtXTG<#K]^`%t__c'e5UHoJe%50SZm
%)diL(`de0RPUd6H.Ql;PKkTK"pglA@<RuNYPRoJ6%1BUNDe8.:1G)Uj?jV@/6qaO?YF^F9hPp:USNG]aKj1>Bi!TFYS\h)D\IEFq
%hlGP)nuJk"R&D0]1RMSEW@pWpn>0kH/-.GcBLt)EeW]Lon^]Dg,kkA?mLF-m#2Kbb/XX!4$P+)p<30Ym?$.4/T2,aA/Bj+.=e7P(
%q[?G,JfFjN%$sq7@P%tMT_'O-"/U(74,]#L)mg9k$J.;Q&?gq]lOBc8Npq7d(pJ.cSDJg<YVci)Z33f/`%teac)J*57#KFH7]hfi
%^rAIA&3":aK]]eO?!hiPq%.%sY,^d$D@aSXFj5d+R@gau`E6+X;?Vq'=q](o[2^;PZGc.Upr+=I\GnnD77eIt7P9=]hbo)8c;_>9
%3E95VI&\os6'Q>hR&kpqqmI8CJgCW`&MV>he9W/a7IW7%29>M1(F^8?5n%Wl<X#[%8m2\O?lJB2DI-^FFrmR-RUT*,$<sYUkMUa;
%,M<,IL;FOAOj0lu4@G(&B]t"]d^=H+nQ)j7UMtkb7hGh?h#hRlb6AM!o*kc#\u%nt6;RpgG_D?uDV%fdR;iAJ1L*i&M=iF<<TsCJ
%_b=]R,@neokT/hT_;GO23(3\/A2BmrBR&"9FiSC*b=pDX#Vbc^I/""<*kK_\Lc#L)!/P9pUmgo?8Vm<"n!Edcp=P3<1?$m'"ukb*
%\A_N@9@Om0_rO$Y+RXHD,&;N:/V])u1?#j;82#U>n+0^n)0-/(1LQBjWV&AAMG>/@Q&WK;5_dS:`WgqOKklK^h!+pZ#3Yt.]#++k
%H'K+3`]='`&=i]D#gk>da(f$^=!^B\'TRE02J;a*!o<'g]2Q;SaGZ#=7lm)uS[h(WTTFV+kOjNJQ95Q4m3khsIG[KChO6fN(/G9d
%8?@dC*Y#2CY_5h4i[*9Jfd@1"0YL<FEW>XspD"4f33!JVcb]p%7rCI&e=`u>`hR?j32.-jlOhTTLk[\%iD3DWn,)pG-!4V!ScP$k
%:9E^<-XGD%fK#;ck$*_OBF>6O&9WE,GVRhGJ[&3[psd&T<Ln<DX<BS$n^)4hZOB<G.T?eN#TC0kM^g(I[k'q!:+S_(SXJ&`^m,?V
%4i#>'bcGui..,\P;#;[>\,u2o>tU#+rdH/Jr;.puo0XCSdrcp?+N7/:![cTjg,BP)U)E"!=u#B8B@Q4!/&ZFY(W&AH^]TT.(#*Z&
%WS5@*$R+4a>l*6b?_>0EI2?%<*!5(-QW/$84U[CF/PVcWgX?+EN`&&[L$Q,3r<pld[)!W'=I!ZUEgLo-UDcMlPn=rhoXE/_pQNm(
%+^8Bp;#(]h@jIOBlZkaQmLrfbg*0hJV#<?pECb&&E!R/1&Nb2B@I1ZA52ElaaN>J$2?2/C*'s[tC,G]No,a2D=CN[@!tJJ*>0fR3
%B`D`?mH(kFPRost_HP'l6E_RFka/gep%It:$H2+FmUnt3R,qh;@>$k@S?+lV2Kjal/#a:T+V]r]=Z%SXZ[`18#?Mt=famkeaPfSB
%$k9@Yk-:FngH42c,speDC^4,:%8-AK9+2;[4>oFm=2t(s;\EY2!@5ru;_i"Y9gN;;D7S^u)u;3pC)q@OG/l:`Q]Z>mjoSmuXEuk>
%l^K]2*kqAQ+uj'#pZ9d\K*UjBd7gPD;@%t$?BXE<odh4OB,3C3_[`+43lh06bqmR:f&TB^p`OCe(&n3IqWB<%;PBfMjr=Dp.9p;N
%8;"+E5:,!9228t"g_?T!I<,taOmc5=R3g`F=br%.[HZ%lC?J5.7]Y8T_jR^WN=Rgu@+jA]QIHap1+h!V-@,12#Oc?<`3KPE%)ar0
%P0KtSo7.Mqdb\NO:e-SSrAkI-+m8.;"e-f&i)SE$/LLfs0*h*V]%PhOm]tkU!cVfSH%_+\T30fZ=b7q&iYaAjk.JE"M#?VlNR@@g
%B\oO+>r0gSCQfuakup&/rljR#5ZfjBmTluQXI]HbmO3f,!)6li&N("=q6NXqJgH/g&TGn@e@p2nMUqGaK2"=CK_`9"Gk6KUIFeRR
%QefCK`5Y%)IAZsEih:!1Ml(_d%0-&6J3sup^CArS`h%2@KiAGU#`*-#WQMR4.>[=!gR"3*['Fh<E4isA@5=c#VRD(!I?@;5R@men
%E"Asr\,sdp$bsD@EXWFP@7/'a*k[28+3>9h0bDZ]8N*L?bl^j#&*l5+s%/6,Df4Y\AJ&lDEGbteO6?Q<`sfU2>J"ge'Y\Os?r_,3
%;+"H2Eo=W[]\gPRDhH#NdXV-C9<c?2\Aq7B3O*K<OJ)Q'ae\9LaJOLLB?Q]&=6R>H"Rb#))LS`G(T`rRT2VqJ/:6#(^_4MH7frpU
%q`3B_48a>%[DE?'H,Rn30sbd6,!Rl"$,uN^>S)*n0^;\&2nT4d'l+Z\%I[5M(]?ZM\"0!4H[-K7M8A/3`s+Us)SDu[9Ze,A0bDZ]
%8N*L?bl^ihS+]l;\(!k$pRoL9$Z?1+$GFi^khKsg5;:ukRD2g>m3l7NV(t>bp,E8359ASKdr%#;%!rhS-!4V)*!)7>:@4O+8C<5L
%S)W6KL4bed4Zr/K'eV^,,?Ephd?kc@_D/*34$HJ?0CulX+ZTDid'igtg>FRZ16?=''Edl]QW/$8h^fm9]#=#\\];/Lc#QJ&_Q:T/
%r4Hi=:_Pu1Oq*qpY>Da]RHRicMdEh&<$SoY#3"8ORY^KA=X\@k\WeCB@N^\M8Mm@<blR*_AE2+)X@;.&@+r&_Q9VlG591tg\.;r#
%iUb1dJnZ^8Sg^Dp&0,GUcZ>j&PR$)hR$V@lbRb]$E/Q1mp9uS@K&Qr<;BI5+lK^;CF+nQU\o4XmXRNo>%Tm6q5>fG=Z?",ih[Bk.
%R0hr$2iUNV"B$OJ66MliP&/G1P6L#;DejV_TAILON4d"\cacC"r7=0tfZ+5WL#XH&hj5d;mk1W'58C"#N7gE[d05D^T!5.c`C/h*
%)'_sUbUIu'+/tB4RkZX7_eZ5CHQR5"n:KPP`28IS"YOR8A^M*^BJdi:mu;MBEr[246W;XaMiS*]dGTXf$'lEaB>>d^;u>\X.CtOY
%Jl9@k!IqELhDjM/eR#&jb:@C(`A(:ej>5St$Bq`Z7Tt.6;O(,s4grQX3;i<n[O[:Z0c4c*=Z%'%O>LGnadgm?"d'ftnbu=Q[gi$Z
%Fe?!;%7%>:R%a-^7ur#VQ]uPRIu:0ApXtn&!WZ1#/M"Jp3r$AJ_@`fd8d*?_>Z/glI8YUVLkD&E_s,480M#H]]\RIEFn*=!\<mf!
%(*(06>1-VoKl?kMk$T?Zg1+rY_4`=%oMj#MdS9Q_>9LmM49Hq`SD#n48C8S<S[$83NE7Z"Rp#b(=!t3=Lpa;HdA*BM`grALp0!9Q
%Ctuj6/4+<S$F9I]ghSJHM]%5P/qkiD$DCo>QW7O)J&t#&BZ9lI)b!l[Wg+C%"J%(8V&`_/[_ics"rTZ?]^7*5_4\>AX.gM_6PG:T
%`&r:*7o#4!O?t(]iKA$&l^J%<8+n&'kkt7<J&&=CAN[IhQtj_Lac:6q+"^I7Z7d:<P-VK7C/m3@^-bn^Q95*EUVYA!H,$C2_i0,F
%LWYc7V8(5=;R<[HLb>j(_#D-#`SapU^>.9;]oJWWF#<+3.2EnCknpsF0g*S#T2Y2+*.pUWQtFiH#Of46Og5*_%)ar0P0KtSo+3>`
%'D<*um12lsQ@"i0=,>&P3GdHb_T`Q,rjW$>(_mO/E$a333q3-me[-r=!*"[Ji#E.7SlsF,Z33f/bTgMYV5\n7J/$,a.c7t,$^r&s
%[<"OB2?9o*?Eb2lTg$"gGhS"'$]k)Qce?lWK4UC7;:HF&R_hC$Fri2o7dNj+A-nP=LhFLKRoB4H+]:.;:Ofi:7nZ]]Q342PQb&h-
%FSB0t,F>>I+5/&r<TRo_iC7,cJ\rRj%#0g"G`*"N;D!ts+J/+dCsMC:"XHX_Z@(,)Frsbp9\o5j$3!7oUpMG5jlPhD^6d:Vk1,_M
%3t008nhdQ%&WX]$.9q&dW.V;+fd#/O.0ecL0ZiJ,^3PMKXa&b=?c28a;qVb*No17_4%9(%p<U!_:,eh&AA_cYErS;,C`FY[)#2&.
%^2Q2b#NoDXaVIE%&C5ku2Q-8n6_nCgqsK[a@0>]Tj5=-\Ks6&UiHn!U)a(GEA`N[Mem"hoi'EYQ38ur!nX/Li`_,X4GCU+L_C,ED
%)(hiM]KS>@G/X7!+.T4<s)7l^4eC<O#$2*!jZ1O/Z:"SKrjY;apWr<B#pd.!.=bp\aAtRXZ>I^n%,TQOWl[j9N"IXUk.JE"M#<cl
%n:'c1Rm$5E27`[N!8O(ur9kfl6JYRni;8]F:PaVqmBET3hI_rr324ZpR0rab(6+UJOkkU[[D7`On4=*<TpkTLj<1b7U9$q&f&/AK
%<pY2n<ef4p4o^lQmMd]G&rW<LSI$Ui+a[#*TCVg'nF->B3":kbH*!F<I"&mL.n"Y\D>oZcoY2>_3qMYWM]sCjBI;"]X]P&$jc^&'
%4u51XrjL(WEWT(p)`S%W59@`3jrQASrJ>cGAWeX,@ON2sPAF"]RtjP^H_p9kR+q5h65NNV@M]tgTg-8-ZGN>SeV,#g5:k;k0Nmu?
%5!nB&*LabZM\.d*=8b_!^l4po"A>aWX.FpacM%5Lr%sKTCNtr3pNu08FcM`4&VRO&2g<*TNr+2J[`!7%`h+INrX#t[@/5&&qX<O1
%Pa`BM?obdY9?!l6@7F)(8'A2#Xe#T)B7%LRi47(7i>:MA$O*][.j3t!='.?YY4/s(&`F>R,G8'1]gD!qPs[6[J$7%MAa#,O'@n^r
%![p1+%99!$:I=+iq?>/Wcu\1>`&US3L!.g(D;Ku[Z6RR8$f3PEXC9BJ06U*_EWk;3ZZ@eM3dAb6?^34)67<i4P&/G0RtSQ;kN3g'
%gOmrg_(EuVoap>*cP<V8goF]2Y5WNGpF!$s^n=O"jYh'?(<7[l[6P(mE5]r"R+O>*J,+Xe:R(()+^Y4R*!i^o>=/bIrj.Su9`jlQ
%gb!';W`<62&/7II4#?A6=mIcB&!AN+@OO@u-.SMfcbfGQ4LLAE?Cfnba/C3>b800>G878$`oiW!#tYm)++O6:r:o[UA\LJkG)OYP
%Ufq2]:q=VN<&'"ds6jfQT"Ze1g\U?h6Jr4L(kk4:51JMJV6.o7qtB1gOr_ukUW9#=l$[_:),5`BS-ETY!\&l@&TElWWV&B<LI7,*
%ronLC_dV343EPE;\cVPQ\3k+,MFTbfCU:L%,.kH1BSdo0UV)!Ng%I1Ghk#mDZ4]I_N0Z;A?9JVPf8B<&brgaN?4l%47sGP7c`qc.
%(U7[\K*?"R1qX\;5O[]d6[$"[$\tt7j5n6t.)[A/9N%-$=?`@%"q+;"<DUHoQ#oX=K/(5g1f!gu/+b$1Jc#%)`?mD9NI</iI@j06
%oah;b$j,o7.V!n'Xf;SA+V7/N+j.-+)>GgsbdFN8$^NT'gY[T5oFo_q8X&Z(_p7m+/puLlS@>1QIBeMOR.O!rgBLq&l>:$5ZTnkj
%E"A7&F&q04I$VXHXRYJ"WgbgW2ll[](/3/6_&broN7/r0&%cIR=Z[I&6\n*_JmkNY`i=$+=!^s8+J/+dCsK+niObO>kHqt:^Wq7e
%3k-%I=s8X9ENJte>PR=oIc&Z<L)pOqPo$-r/n>1)@OcbRb$]J/(>43X6GWqo<-)O+/::O[Vt<lKT#=`nh[_N5"lH<2Ku!)]?4%G,
%Tt]L1<dI@1_H%G-E7)CdI'13bPek92n>\$,$A!2M)ldIY/IQ,ca.<G-pEqPhY:rOqr1sR%[q%Ds8IO=n([_NEBH,i<o-@o'"16&Z
%#?6BR`O1ZtmEhlU0LI6.nZjVkp<CGb>]6dTSr;LLmMBQurnmj\&-do!,P)^pGk:P<*uI\OEmNq]TIYoXh0lkZB\3Zs-:88nGQ^[6
%3NJa'aNb\%hphQ'JgZX2&?MG5_UE:@`C/iCbG#(.gsWDjc?<2L5MAG##R/_JQGNP.Xg/'i"Mu$/WTM-F(*Z%7F;#:jQOANfiooe8
%D86m\(1*[5GT/cl32ggUVlR+%X9<hX$DHt'FjJBAhj5gma[u\m1Kr5NH1`FNIV,[V8T"FbXh9@7=XER\<b\Z[h,uh85C_Y(2?p7_
%A$#L(8"f@l,<5G]Mir^RO6#j0n:V(RW*r$Ma[]Z,P]+^LN"]Qf4_f$X.pH>N/&!`M0j!<n_JY@C'Vq*L)QAU8o\iPQ&V7hAO6g-7
%nJSuK/6%gu#T+didYqmg14\/A)qHVX1dAE"em,rT$uC)m^3KNA.srblS^i3pJ@P8(A_$N-]:3"L7H![U,Fd8$J-Wj8\$p4dVJ:f&
%!qV57ARf>%a[.9:MPGUkaO<2e;)nrcTBPuoiWSlP<n@T%YQ5t"'p/1cVlEM,&TIq0moeB_eNu:g[,Z%(P9>@(_2+@EF&q047!;TN
%S_%`X"TtDBH8gI,]MS7)rUX>lc3gIK-[BZbDYlTs'N'.#QXYgb!MCl81ooQN1HVh;Ck30a;@5<NBj0C67!`=il?te:QS.6`T.L7K
%M!h"c7FM[nLb7BOrc%tuk;8q\;I."7;aPF/Koq*G)!l#m<OP/MJN1UfW][PXKcbQo]YA89kBa<JI`gu1$Y<7/'qH^eP&00MR.OrY
%'kP?ffN&]_q!iCH/K/3G.rCP(G>QDDf0;dS90s`eO<R@QRRiic,XUk1-OST4mbPa.`B:ZIgF[^]5JPq2oh:_i's;Jn<Ar+(-jGH'
%Lk7Q,N/=cRZ4]I_N0Ys]EaCm8Oe44P@rL@8&fsU3r"&_2Cu-`9Nba%$K!@qe>M(5f<(pb3[=pj&foLVHme/A7b_uBEIqi"$T3j<^
%V4uq9e7\d%N1B3&$fkmn>^.@L>S$T;jln:g)SfAJ?Jo5/f=5*1MX7^&+#O7XVJoqHKa/]CAZ;s=;@LK"@$8d6IIe"!)X'4.jjM2f
%M-Fs4n>SBJL;I;#QK[\X,//q1M_#U>/$aUEkeiDYGYG%0Y2u?*A5C1]kei6iTHos^qT^.=&Mjpc+F1LRd'*'(nrjW$D\U6%G4U59
%b`<6JFHsanLK$2P[,_c<RY"XrfHm!kT6R2Ef`ET,iXmiCZ5$9`66p6bDQ9;6OFqYZ4c4;Lc5#?5HC\@E;kVbMCp5K80&*RE?GWqj
%N:pupMqn'f@"]VZV84C&s,nqL&d.Y4Qt18Qh`N#Mo'NjQ'QP$_T;c4GKW>?f6CdkcYc(Hm1nXJ#^W+M!N)[cu8fO+9#_47`-$;'>
%]hWff^f2nE+s<K9VCG=,RtXCpP_BSd5I7VRn-939S?"jcbQ5\s`'09M4SO,;L$D!1e_L'^6j^Z&.1CB=_;HmS0iGHqLk'0W8t%c>
%D[);n6[D@n+e)`P2]-9Lq<.sak!85pELQOL.eEcYq<ftemjNK!YK0K)Pug;>d8j&I(;c?1@XkcYVFdup5WkefeXY5M$'ChlMbnF`
%=mUPg5C4:Q3*5=UpNk%i[osa+@9>osXBG1hN("8\'.FM5;((r*/^DVfi%5H6OXreUTMPbaU,f>o%Zm:VIGu1-@/4X2n?^E=q#a^n
%GYPE,+6c?QLA,2MoA^1o`@PdeIu:?(4I?LR`W5eoZ/IYc%F1;/OsO4>8592`/5>N$#GgR3VtE*CpWrA9Ub9.uD/mK#>ciS8$N(=5
%_sJ#IRK[VYIjIs;[,'8SOWjf'n]9^_IL]DZN$:lM5/'jSPSA16In;od7c$gTR6`qBL;0>ga!Dd3?%J;+^5-cZM\BVs3Tf<gW=S\R
%41nOu`8JuV-9>Z+@'OjEX2tu*0bDZ]8N*L?bl^ihRp9:PqoDu*>hA]5XVb;kJRAa7Dj]5iWk`>p()gN@=s@$Z`TQT2(bn!,L!*)T
%lJOJDY)mIN'Edk6Qt18Qh`O;aG&/3PWVTj94HK2cm]0ag"iBFCB"hL%ZJ'AXNNq#EZ_TFX=O,pd*SS7MES>sJ9D8ct#q"1(.0AKH
%/]m.^^*u<j["#)_MGJS\s)n=N_`,)N!nfAhe^$FE*FVQDYZ.MRG:EsEBjIa]kKe*&\7?]CBd6]LZR/7qjl;21W%"06qT_<'Zc1Tm
%29>J#/`G#V\[_aOc,+PUl*1R+$e_7!^:a,<Oe(XT?"7iP$6*8CA$?Z6SoO:>=b[muo*C^pF)'Sp+@Tc#mk5_[&A<%8-V#:uFTg.T
%Ns:AWV\I4%5j%'@TiOFS.f1L/c%dJGLF+]P!5sMdRe"%i.^9TenI1a`F(4#XT]k=E@Zs0br4(^S3W^lp@g&rp5_h3AQUjlPSn1I-
%rkdQJ?!RIaZ=6D(LTicCLHciL\%gt>BC*$h/AVr$nI1dqF)'Sp7#H_%:q-d90uXgiEHcSFo`W/%+'CV3Q@02+p//?Li%-f;$<]A(
%o;F4Zi:+cs_tsEChSN-MA-nP=LhFLKRoB4H!@bV/M,D!qLE!B&a$'U8RKK+p0.gQ/]eas=.9oK^e=2"hUR<B_i6W0K-$Z&!n;>aL
%OsO4>+<L'9C/4,bKh.<tSqt/1%:`(O!?1jS=P<'lOn(H%kLEs(`>1#&+1-ZDMMgklo`h8n!*.s'i`pU9^@(Is8l^T[!TT!%<,#[r
%*$@E0AUHdJO33lic_:<T$*.DFXB[VB4Xs6h?\&R!d0DX2`IcDcg*m(g':AT5Q%O9;I3I!K-%NcFChhD*^*u<je?1l>qVihKej/D@
%?-Lh<BT^?rJ7[,#6V8'K16lta4Y=OFdWS5YY]0dU<C(H6oAq$G0C(#kAI2rO9I!XTNG8>;#E^&V1rRG:qhC`hH9\9IKlA5"XCYIA
%[/RpENfn0`5&9S(P00E3VkNB)X&`P@6XrVg`hd@So(e+u<78uNIHHU7BKPkYqXo_FgM(tsWZ)M@7O;+.)D<dFm0_[j@ONK\CD"g`
%]u;)kTOe]DbQhAc,Y4P%1rCS19W-2u&gEXeZ-7Nbpa$q:c.JPe"jiAIi;,FZN#$^W?Z'&iRdX8?dJhJaq9J?!O#Nt,)nMG!B[nA1
%5+d)>R]83DD[);nFhs@;nif<N9QS\<m!VteJG/X6H6;@2#&0R"n-+:f;OoLNU&ZMtk[#VF#\`E6NrYtIYQR3RUJ9:/egCQ^S)%fc
%/VnIoSWgS`>i^a<XYn&q#>`(n18V*?$D_O9_DbhX.^JMKF/fBNa5G;Yj?WArgYdWMT.EX>`'?Ee-J=pC2\/HAp8,40aXJUOcs0`M
%5e24h\@V]VDNXla0<SnXH^0;WDZ<mN:[>Vm@lUe4Qh^R<Oe2i)s6V:/OCMZ>!OHT9m4Wa@'M4GGK]CUjY3b\=,Os^Wre';kEO4,g
%f`Gl[]C=YRCU<<q-:&p\LF07c3!^$9IWCK;':$m>S?\5fcK^l#A4Kn@2d>-d6dY_#A]G7WM!G:THUa$\q&_75<Cmm`DKi1.Lg-iB
%V,.GJWZ_90Hp*,e^X%OM-Bk_D.0RL*/ue!OrfVt+ck1I9EKn&J'(lrO%CbO*2iAe?s*br"ohlVAfJ&Vc>V5AV9e#L3QRWK\Ta<9?
%f&=Gb>`E;$Q4Sjb\0RR8qBdBVZcDsp+m*8R%#oFGLd>;EJRAd.epHj!H\G^oebF=P=.*UV]@dnuj:VQf.1FtJWImhG296P(0dNZI
%;jO<Sbl^k.VnUYllG4pG+U6ok@'6,X[lE%`dc7@OW1'o05C(PSdOfaJ#L<IO_RSTG7>!8C[?E)HN.<U6A]^=i?W%Hg3TA^m3aWkG
%^=;0J4(CACkY4%5^sen$#\GZ%U]+n$c$=X@<rRJ3'3MM!7>"ZX&WpgZ&O96O2+;4[h[DnnjN1f&N)tY9jQ,&H\;I%s_"@56'kSb3
%_/?,P<Q3Sc_Js1@i:+cS6^'#=4KM%SPpOKp&C,5d2(/+B66p6&I:d3+!D>WHk4`2fNrAS)XQdQJ*(-_nDg^o#5Wft79)E]MlULr*
%.NkY[h6AR;Me@Uus$F-!N.?2,9<("U:C<1'0tnO6W[ZQr#tl2AQLIL`E;R9q:/"bS^'<U/6fGYJ33KPK%]jXY3ur4n/sQ:^f_:uI
%YHt2@/0P^fGZ-IIp<>oLk_(h%fSmL.6I1^oFkX/0\4U8sF'RS.Y/*'t;n*WN<nUTMTb*`^^jA)T.Tbib$*6b'KMXYf-/"gA-OZ'/
%'ihYN#p>52IRDjaU7<aP+Vm)M@TKuR`n@?2[p,Ka=a'DFRjEfKQ>3j5].8N]@?Y40U_jG/^a,CJqrT&"oR?Q4@6jB3hGM$2DU4a/
%$Kkn0=5/9q&f$.B6,hkB@j4fVnC-J1(7FXVEJW9Qk=u9((766ZN,V?G-hbeO,Y/>kD&VksC;T^ZL+/p.AT>@[lD7!ZjmZmBj#0Pt
%&=p,ij\AMEr*YoHo#'6oXEQI.eH.1Qi;\:2n'\Pc[Ua%D/_,@'SW]YN(HHDZJX-m;6:-8.#^Y(La-!XFY!V65OoIQ^QOtr]k%`O0
%p$B6/4(`m/-$*['aDRs)[e9\tA:0'KOOX+7LSutC]^)nWi4:j/E#\?naks/C0[a[QphD,"-q@nP>e;VR.eXb<`US#oZ3?DF_I8dA
%F'mfI:jc*tID=[uGY0I1am9'FfOAZ"YsT/QgAPI6Y8)OGilCZc+#u_bSD1<"1X>B0,Q7t2(JAeX[6u4l!m*ggm[$me?X!eboB)0T
%":_9/16UKH)hQh1XaBiQ)sr[D>SNdJD-m2F&ZX88IBE@D",mbF=2*/CL,0+$/MJajS9@8b2mu68o=Zq4+0C8N*hOc!>iBo/?<Z$n
%_&,bQEHK\TfkE7dMZmaLO'cMN[J^HI:b@b['Fql'RlgL8iVUMMUnbRb!^M:K.s>n1h=20jJU4?%_`9C^U%6dHIoh>?1n.nagmLVu
%loj%E@S\5PZ389:i@ms2\[?>q^6_&O%c/I8+.#2m*#7,/?0m#=+F:O4LtgdWHRm^BH9Cnt>9"XYgEVu4p)u#G]upnB1*Zm[@CBiY
%>Mg!>/tU,SAhUZ=55g\LU'Ze.W*5):OKRm"OK-0=`0G,s_]D"GlkPl\C#Oq"Hc:b7>NN7#:[M;m5dF42q@-TafbT;1h:Gcb)ZJaa
%$h$E$L">BbQoB(4egsDRa8^QsIn%PKc*!#*!J_4GVB2f0i[_SOO_fSZJN2Bn=l.aOK^Z&?O>ERbZXG>0$\DS%eAj2n,b`u(.2A^5
%oA]njO8JSCGG,r4Nbj:/EbY\@s!]RYS)(AL=b=TpnaIKt]WjU,hnu'07EX5iip]I1Kb.>L`ruOl;msK/be%jj5cM%VkH\tH']ScJ
%oEL^pnZi60Q7\1\'Fr#L(0g[UiHof/jCIJ2VRt92`4i[q(&B1PJNBK@LG@P/j)$Djk"]'m*8*J'KYmB\<kNV.iFl4;==b"Z^T!Y@
%gS=7$HQM3q9ATaO]&R65gn6fD<&f@0O!e+'=)P_NX6cO$<AtGDcW)jjT96_;)qYm.L?sJ9)CF.mg)c%<'9")O^Mju9fFhG?NG5G.
%7@.=F<-ESik_?"C6E?:+1p+K>G$'qOA(GP&0")#:Rk2BbJU#lpfmA)uj=T"9B6+\94!M3hPZ'PrTn+_ael5E!grT!7*Nlrc'1(_<
%E+G0?Z#lIj(i_2KXm]tDM^&Um/W`(/Sq]fp\$j=#66qi!:UKDL9RsmJ,9I+p@D(Trh$#\n4ct'R6_=/BU/kI23TqKs<+ObeqRc?.
%oQVgj"H*NEYY1_$XZZjo:O=:d<Eb<OdGX6%KKl3ENBNb0kbnI7YcM1R(kX%lD@Q.p=oG5M4iGsm/Y*]koRI^l2]P#fRUcdO%u%o?
%Oj1#qEJP0s0o)\lem]RMedd1m#B!hjH8$q*Ap-ZoreBfC;pi6phFBH]n-?teq,nX]02f2CE^2bCVJ>Pa)hNl@NqJQ12Nf,;%Upi6
%"><KcA@g7&qZe`lg:q\L-XC<@>GHYL5H4sD5OJu5IVA8-<(`<*O?=3e_^(^Uqo0dGeDn6="b$hBqVojT\@uFej2%`)dpa`%GNY6N
%]SKdeGEs7I&#in:j8mUA)Y/>kD._(UC4Tn=3Va+ag=S=k#`q0OC0%#T=6"OcERWr)E.,RborN61L$8fR2\rTEqJB/nQ*ZS29ru3a
%6WMK!'^)eS^8&3!A-oPsb2"bp`n#SPLBu:bc9SF5HY!T4M>7h#b)kAeO?L1kR4X2Wcc8QOP,`Wjd8Y73!;PU"L-L'Z`Uj&fNE/;@
%9irt]%_jGc48VJj!n?7U^'rQ1h3d]TPLRCUknG`oQB_3JqZGkbC?*kH^;ro*T]c6JH>rZ>*`1!LMd'/ZPAGg2Tl:hqg"b:?%R8Va
%$98nXQh;9\p`l%1m:*40*A1oliMFM.'l'q[+'/H/>\L1]-JA(eo*"aepuC5BpDTjH=&c>cCr5J2E#;>Qg=eIq&Ya!#q#@^@QJ"'/
%g!p1EKpO_o4/E4bD+o\@UG/fjD;88oAW6>bmB"B\_]Q?GHmU^&QEm@!DmBP0#NF^/<-)R,-q&TG..Oq+>J90+e_9]<g*$]&\;gg)
%TVij"Dm2f]n;f(&^TF;f<M^p9Dr++o('&j>)TFVriqnQ^r_R1G%P!7i<2GS&UOW?d4F#2ge]H[o'>:/MPdYXM#;t4'S"0@:5:d!F
%']/4*\>i/tO^'(H$P#nIb>IP6q<g8_-;1Rf.,=caC2WAWKa<dI1HCQ#Y@0i^W8X@UE;:E..SXW"FFI'(Pc2GpTAEX;Q^,fq#7aJe
%L]eT!I)I$5aV$-G$@dG;Luu.[0gKujSW]&*n(*O+rM,Gf&$A'hRZFqjdGq[NpO;b-##aAW&FjE]/!>=SV89DA5Z:eK6d:NjFJ9r3
%`Vjet"7\4<ZF%#X*$Rd&]7[a4<)OcT+mN3bj';IG@G&*&H`b#NiI'O^kZu!Z0<M:V*/ZZ120j.S$AV?RW/H^-$R&Z)`<5We9X;4:
%D]B<4RBZ&>!OkaVpPC<P;e_9/XT=Yn&'Io<NXeqf]tq/2@t&_;cQXm-6X$80*ZUWcMSqhblq^fc/A^=sGT%p^gtF[s&Y_r4Q7CaO
%7Vue83.b?J.!.agrbSRL,7BU$hf9"npgV>$nheEL42HM)qtJOe\(.=<3:FW<WCa<2@%M77Q1jk[!obFbkPc2KXW+Es2H"1p3<IeZ
%:e8NjH=5"A.Ib#U4pK^T&V&]TI<`Z,O?J!b6Lj!\'P%VRh\V?@3_H[\M[/6UQt18Rh`+#[ntW45./`F!\gp30Y&f:V)gnjd/E`nG
%)0=ggJ"=`HpF7[B5.A62aFci[OQ:]ZT8CPYN`sPhA]Pp[LLHLnXaT5[&A>Qn_oFSt[hTT[X/$L'-fDDOPYI=>m'QUYF%:WRN2WI3
%D,>Jbi6W0-1c(rH4XQ8R/A^=sGk`T8gt4Om#`p=8gTeg\j;BB"Y`?cED?eZm:sgZQn_WC3^08%?@f65F>>)X@Q$o0hG%4)G!EEN4
%Qj^uncYV!lWW^EEj)CKf['/B*+MuTMhQ6Vkq+UZQBPG#!g.=kTD7ML8IYB=iUb%:("N:Pa@TEF,8[JJ\A-MfEE``TZ!\K;+B^LA>
%0+pu[$imWed,]%l6@e"ddgk0o5BRq0BO-e^:\,"Wg23hDe2#F^7r'&+ll\jD<IS%'ifo_!pht8##\XQCE3c[4_qXA2<!srZ`7$A=
%H"5_[7">cs.'5j?5>?7RC1r5;>T5;@EiA2lVnP#+2JVm*r4TuAL/oIuIqnccAe+oBTfr4((Q7C+Kr/7@.PZ*338CAXn*:nq`2CQc
%,Pb.3-F@Y^b8W_Netu*31G@+%0Ji'=Qu;&B2h-_#WX&B&Z@aCB:L-lanjIl1\76WbWtHs!Lo4UCc(09XJ,m\GXZ^)sP1tE[qa]f#
%>'`!/G$OTkE)G#(W=&S*d**)?ra`[?^Akn2T%SZ^<B)Ta(?`*oO0<]:AlXG!JU.#:<UB#jJd>,lM2`oO(IZCD[RW0ig21PqrdjB9
%c!OSZX"cD"r34Z`(=c3=4FUZ?!DPlVWHj]8>V$CYcZ>9r=?I-*^S+9sqLei_$drYOmW^f5-eeS_=+5-Kf+q23;^F*[8c&pc*JS@d
%!-@C*EdOu:A@B[Bm?4d`nds.^()dY/g@s=q>'!Ug==b"Z^FS/&\Zp&e,!^o@1WB5([II&9?ZG8_!6Q[9/BuFG)geu1<!F\9m<N,\
%Wld!dD6p\!69nP4Y!;`Gmu+$]MVj#`Cr5Ig3W,a(DsSDH"R)HThJ@5kB)Rk!"QX!oI?qMhPC=VG=eSscO!dsB/dLGuk:gK/dVdbe
%c1DRo'LlCck2MtlWD]$inIV3"O1Z%JXaT5[&BWlKg2T=Fa3P9#V:SW;TQI?MQ7gt=i6&^J91rg?*T?b`_GX?9<K?[YC4\#s<!>Ee
%M^F3]*907dQ69=<*-PIB2YNUg7"@<>k"@Kh\KA'NN,2_\>e;TH=gs>S5MHYoeT.;f'QL[/ddIa5Q2+I9_R/7F"QZ$>HFC5%!BBOB
%Q!gj^4T1FZmd(Sj`94e-c:S"-;<&l3&A1%7>h_O&@C!DLN\V#uh6a4Ek2!U8<7tlmg=8R6qsRIpEqjo3/XAS+le,eT((\@40ZiJ.
%^2\r?a[Ki!(EAcK"%hCH/">]Nf=joD\Y=MR9i,ERU4TXj)2#$`kp.cdQnhpVGQ9RS"$,nY=JgQ*ZQ$1Yf`Uh&S?fN0D]B=_FiLDh
%4;j#]qit*O^pPgpo_3Z\fg'1^no/WD\^SeD_Rtt`<2JoQc6H^)J>TR1%nhgn*[[a8_;\noaeS`-<SH(a$5&r.o2Y/MoX<E3oD[`4
%d7DQ#Q_d2O6T:kUK1?eOOtUk;R8:H%YHlTH:k*0#Jhn.'li_fgQ>:'eo(7BLTurHK0FtoLRlgL8!V);b&C5lg(Ru">.:&<^)dK)g
%22Yne;'sl]-N2!b4g81FBMBUb*`hl5%3/=Q-eU(bY*Ou91fu#+K#If]ZqI^8YAXsr5)1.Zg+2HLKuJhYlSn`tbapU)NaGL69o-Kt
%i^`U0ke\uGYpcX+H;$AOZNWTo(m<`rc+8.1MIFX_A.QVr0<*C>^/7.GU_T*f!.J;ErS@*$kA`p<;fI.NoKp+dhc9H#]#QhJ?1@Z1
%r;pE\JXZi:i6W0CXtJ#[2j,Ih4:k<+,b&$8`Z[[uic&7:_G$20N;!Rt:TD4<,u]bckuLVd@JeU0KjIBi%r6_mA5?q5G'Tu6GQ9RS
%,KfCpEIVG:@EL?9&'WLAb0nkTEBo>U9D]<bR^=gaj/=>[6f"[Xm1478:73f='n!qFX_agoi.]<2em-d@XVu.l!bY2oUr=hoW(E:_
%Ys:G=P&0RP)ha$n5WPlWgU%41VIhq>!Ois.E^B8oc/eHh<Wp%jq8$D,Al%Kgls[ZMe\a[;dup3hcU2AcM^p?A-!38@:W"HI>PlD@
%+_m(/hu@E>fAqJ(6?HV>(U1Ur=suqJ9^i!LnB)`^_G<h(.&mXk2sar"Q&miK(su(dM_@1(8Prr5J8glec.LTc64hOIp71AC+7Y,(
%>`sp1F)A_["hiUd_W9)GHTi%tpsH0fNF^p"$Yule*ZUV8p-,4i1fH)>$R?8$dkJo+f"Q-[&A8kj3C=Fi*E)j5WMRP899T8Lhhs18
%6H/;sEC0/\fM7HbVOWHU)f0hKBD1duI%Aa?BIZ`Nbin^5VcD0h4am$baN3nUGGLJC?Wg'H`4$Sn6JRIEpb4MjmnZ<g>FTlDOc)Z9
%7B[0+i(sTQ[8==M=g[saVo#.MN#aS_];uniqb7bK5h&_+DR@*KpS&)jm]D'n^C)-M-dun9Y@n)*r-[r5Dso1Zc-u:=bH%7thl[qD
%a(_fc"mC#+-!2]4%_j9III6om^s)!Ko3R_rl6r+ZTM7,M^)@3f^2U/pLQ/qD'].R2N<_dN&gaHbrWs)F9jpHT0J+?n09fuT,S.iB
%0ZiJ.^2\r?FmG1`rhk5-e7EDX@\6/0Kb(&FTC77OlN<3GB/>A%bNIgug#\:(MMIJC_R*N?^UCO%Y/!Vo@'NNfr2(r^Cl^mckf>Yf
%EqA5l5DAF%>2fnZr@YKjrgkc>^Kc4m!PCSCN$`,tTr-X(Op=6L=E<]kf-@P&i3J(_.Edf9CtoH*Ct[M`#7o4F1!/;K<m$Ymk=.*f
%^9n@nE"tltD"Dc7*R;^o%lW:?8A!"S+)+S73;db,_`J[$`CT/DZ389:i@ms2\[?>q,",L3F_Ck?+3u/O&&Z3u53UR>HiMn2C-U8k
%=!4Yo2ll:\^RYkPK0q%,55gTZ^R%cGfLE.MP)$p'E6.V$p,GHrc8]a+L+)d_LsG4i#d-3JlB:=GRLi>(O*^Dg2u@BS.].Y/$P#lr
%$;0Y3MAFCeO51tTC161RGhOIogt4Om&YOg_qr?KEEYd_CGjuKP1;@N?8DMqX6GgOX]DTHG<Cqf.m>pPJ+h$Rs'QpZV+(En)a[>#@
%9X:q0:Cnp:dsc4i%*a#l]RL]SJ:m1]Nn1;pf3qIaG.;K-^@CVuOsqmp#I!A'*WYs%d:2@#IIFHFP)$n_R%fmNqo7SR+d*OTZu+@,
%fEl_?g[uDl=MFOlomu`.S'6l$p%TIgAC7rcGf\/n[MN]^7r)aZg`b2La[4tUS#X$(D\RZl&\Dqm_o$-2>Lrm+leW*;\olTBL??!H
%7#-#7!C?;T#+p=p2`G,l^?ht&eoj\T+O.deoaAP4dg=.Od<G?B0B[=P<ep1f>!3,bDgq$,+<tg#+EWCfMjH>\+&Z"%7Vhcf$4@@(
%XloY2BX)qGYBuHb0J*tI];1l7qaTQA"$blED>@b;rXr"FT680(fG/7n?APYb!p;[X7#8>frYO7!(BE!<_hbQT<T_7TY**?(,S,U,
%iK30'm;_o--B@]%@t%Z0hDRh[\6\/u7^KnRhOfM@9TP0K;km'oh:kA-5R:%&lWP*Of@Q`hX>h=DDFl[o[E%3PUG8)/S]6WnI\+CC
%2??OS-;NYPHp9lAUHs:]UDfG`/8]1Q7NNO9_5D23@_GLG<`,tM*)rGG6^.8P#N:$-3i6!2i_J$BDM'I0A"4$G1i7fQV$5dPQ1u(Q
%V'.A2h=pM2p#$B?Rcqm^Md'F0ODKL/JTr([=l.jRL[TN/OOL"MhCLg:]aYpjp"Hb,."UEs&I(P#!I&mE[g,DB,\r$3WeD;$E_O](
%.nfiM\O\%t0:t5+P%8HFO2)8Eik3,"=tQ.sEqn9.D623&=ol.Lq`t1>CW`,nKBJ)/1^,NmIFqPd5'P[2./\(#gk?sg,O^Y'$VUp3
%_er>j`kG;8JE6WW/bJql.S$kanZ9hL(a/0]%0H\hrF(KOot#-Ya^8$Y/Z@;A."hT#=j(:8'GXW"`<,T%9<u+74UMdo1\/fQZ72o*
%3QFB$E.`W%-F!4tN3<(?n(jJZOK;dPmN1BQ=1LPRXc%U25`oX!*f-_&P0L,rEJP/81qK#;'p>D*&XkG^$!\XnLG(*sZS"?Ch]Kot
%ZDA"MbO@0jL\H70$V*,K(Hd`#'mfIX<\9Ca&5U%dRlgL8+l`+-V/A@`P6#htrY:G+'6&X[Q3QBS$X@uWZuI,5<)hsTqRAdmE!QIt
%IAr-oIrnhY=E+nBm=m*/Cl\W!,Y_<P4Ls#!maf\EMNh[klS-e^TuFD$+N0:&_qDO=+]W6`0e[GH!t0WDDQP"UD2T2k6aCNZjFMRN
%9i]p"2[U.i&^pdA')d9lEL@LJpq\\pG*n+\T7.STTVS_tfoCg^dEhVYQ,R^Uik_<;8EG'Q(O)?9=(Mab&&cpNal_0gEVMi'N[O*\
%Y@ct)kkANign:jn&Y2Iq_eqMZGhgqW@d3-)=N_7h9$YB'C+jmY^n6+\<\M?OR.K;F?2-uI(qk<nk*.0%:VYY56tXH<Vf[6p4A.sY
%ZJa[cp^<k#nC6%Hk)J<CA>d9L.em*]^%mSAO^HJP)^XnHidn#EUmeAE8=XQh1\^PO6H&&C*#S)-i8(7_*HM'3<i1'rIsP$!XfGn*
%h?`mTP0,Fnn5**_<k:>2Vui.ElVFI"Z'=t:/LIGPA.-W!0?`M'^/7.G,Qe`*U8<5WFfA8AiE[VC[<'O=,9PGsUDN,]lcgJjH-/.S
%@h$Q&:Tg"cYm6%Ks*uFJp'XELB9Z#N/A^=sGT%p^gtF[s&Y^Kk:J&-5oN..-[Hh;'D-A,*</*3%G>#aC=4Br"Q=J*:GES\6dT-cQ
%8%2-h_0W_U==b>Xrjba'L?*l)\7O4Gf/Em>O#0!;OkkM[FB@1fpl$66g7r5*$I*Xb"V&:P&rpFF`9!*B68K?X'd*:VQQ6)*\?k4e
%gKL"gA(SJk9!DDg:4>Pfp[nhY"QtT_f$\U?:ZJkCM.\euCO_Z3%jn-<K00F<:_HLL)M<<^Y8"D0Q=VfEXa%plDuD^QdkV`S5@i)_
%Y:@_W4YRDa/=Tl@`W75Df.YVt>uk!;h+LM46U=u3ZhP?<4D\cd/VBEqGbF:'iV,u1#NuoI@08"&l]3#h.BQa7r'kH,jpI;cZL[jK
%djf(oSj*%4a;elXDUkB&J)&Af\e>\-"t8]q-P+ntf9YAihlP&*Qf%(gA>LZmqP.4JVZ2*.G^u)Qf,Xl&8RhVgKYo94k,,j)5]Ge?
%Z7f/Z:O,?B/P?l2+Y)*8/7U82T\=BlJObad+tbN0]t_\K$;3In+V+TJ6+S^4F'C1EWps/CCr"9tnMD5k]X;Yt&0a95]WDJ0]m?#4
%3bqmhTNc;QD11CS9r,St3pquMhB2:^[R^3P(=dUZetJ0W3)g&%`nf@W\5[lD[T%[QLKUXkbqH-;`dSST#Z1.P>1tCsp(,fG\7l8P
%/QiQ_X"H'Q.SpUNrORXOYR-%a[JuDbKKlI?LSiG.0H#cZ9^QFpJo$!Wg*P;)fJa-Cd("*<[iN^qf95k1I!L"<F7%*/[8cHW).S4J
%/,BUFedS:q%W;h\4?,0OL%/?ZGeUr2mG)4Y((\@40ZiJ.^2\r?2=rMLY;G/:e<brhBB'Teg6T]*+cDBS\Z/JBTJ6N>jTRY5G'QD_
%n_hb.U7DlJmLS#aOXrln^cW'iCi8VZ#DB%Z?hgG2?fDad'tOgq]aEBB/BuHf<Q7(00U*05BU$X:[#t)_<q^`_]+nFeAce.uKXCp8
%7BB+c=<O2a-O0o=qa:JTO^@T:EbO].RHZm&AF-Tb640lt=k`,r$(bM%FPEimo!gg(Ui>Qup.#^[:V2$.O97cHpJ'N2hPMV9UYU91
%'&cn>*)9'[p[jpT6u3&KNlce!A3F_p11OtTg6^ndec"NR'a7d=))FeXqK4aqn<9lZPI<[q=TC8^)10cN[^a:`3E;9JJQCV<ju"H!
%=5OQ33q?FEH98KE$u,Wi8VWj[:(OL5=jUd?eN)uW8W_1O^2,-C;3_Q,qb87BJ>TQ4]u,aUSq"$s6+2lBm%u7Lll1WaOBg8S-OAh4
%QhK%1>bP4FlMFRkc]$c8biM#g:E`8/VMH7=4-U5joDp@$-1P/iIUnVA"d4SVh(GbV^-49ej(53d^WnXlK:#pmB7Es7PM]^K+*9id
%2dM",[9,E&6]3M0D2SYqC-JKns.8tnG\i8tqoWDi834;Jn&>qQ3E<][&4)M1k<N;lYd+M98u02WqQga/?dcee];qp2$NoJB_4kXb
%G9dCai^gO&=bc9oGo1-rm-G[E#g`BZKH;K/5P//XBl2:ZLT%XiTc`[>L3,/G9<l>]"pL1RH\$BbDlaSTn'D1U8i:ju1tK2*9pK+k
%5Wo".Ci&GO!X)"s.,PPa7]1X3>F1Klm1k7h':-@%geVTJmK2uh^>NGM_H"#D)U6ujO9LE:&F",GGf:28W[;3X8^f1]k,uEAM!-[c
%6L.t\dmKq1#oZ3,PZV/mh44/aBf18HkuP$-oI(p26SD?[b:BlJ.uCk3ie::?I#V:iR.3g*:S4GN48S@dJN4P(ip-"JCJ8bX<^LbB
%E8jY+[>X%<-0,L!(kK1T0:^UG,\3f:DUS!9oFT@`B(kK2`URJn<5CHtM:6<To"Mh(M"hrj=CBj/$u>BIp=+`)[Tu1*JXFoiHY.@0
%<VU:#ITFuO4]5%r(':MQ\ucE;=Y,b!cT%eD=bc9o3W,a(DsSDH"@uG^mV'8//HDn)abmYOE:%O`7H5_Cpd'^20SrPSOBD_,YB`:b
%%>8'DU&Fk>RV#aXUMbZ_#o3W]dqbuGQG35dBVb>YgH46[e[1+oaQ%@)g=Kl[)=<4OJSp$\pg&,3V'jI#?RM0epot'ZW\>aDqqTb/
%;';.(%+t^Rn4TddZ/7qm!]2--5n<f7r+8OK;7d^\9[]b!G,JKJbkTj_iAZLqVs#^Fh2:drS_66r;/MjsHaK>8`FS)\"/jOGU`Fl-
%O2-^0S!RcW%8A$^2tIhD/#dR$h0S5qbbo=^:VZKOWY8=Oftr]Ij4;AkV_6>*R6Z.+<L+e2?lX>m2)b/t-q&T_T)@@/c0hQ>d`uD"
%6QpDcB4B>Jjlu&n>MR*ZR4Vo?G$*TF,rB2kOu@6Of6:j,Ic)TAf1Pdmkk"sWK#Ic\FA&pMX\T36*,/n<DY+mrq`B_]O^3VMh"Qe?
%jXkuIo6JMo.$,MI(Ol<$f'@s!hodeT/g1aUWmL4Y&]hph@;'5-.Edf90Fu&HRp5ba*$Rd$g4.40P5&e[q>:D$?P07Pnm:N]AX#-j
%=E9<9)PfVs\t_-$C_?plRXdLo^ULW!@NgKZ5a>_s5Wml"C@:@+Jr!0[FK"r^;.k_o>cd[,!*8f<Hdil.SKYnp3b&"n]V9mLLrr[*
%I<NX8!)5]kG2'$TF[kM!7?d9-'2>MV8XoP\!3q[FP5ZtY9"PYAUi"OVf)EhMqLX/G,C*ju5&Dj4da\\Ss.W[d<FieHBD(30'NR',
%U;[ML8h<W>GT`T48N+'ONC/A4TR]IWj(OVn$^!Q"\$&kP)ZY:jS[2iSC7F/`.Hci(A5/Z?)jim68[AdfN?Sm`VU/3%aGV?glIo3i
%<<nB0D/.M5^-P#3Nq[l,1Yj[Q]T+$YmhJi4XtLUuUiM.:mL<(FCuLPgY9.kP*I]VG4?-;oj$ju+?CYB5.Edf90Fu&P)dE26*$Rd`
%%cEO'%h$W?E^gPKMYfQ?Ue#9-;h^H\c!6hY9=0TCN70lZ!,)]i'"_iIZo:pK9isOi:W"VS>PlD`68[%0?CKqs),Q[m3VIM&Y2[^<
%#u#Wig,A*Ra0<>:dk^WtlL:hO@_n`eaA8/a,gkTe=`,KXY]q93IRuCUp5MBAkf=(,hW=,XfCl+=_<hF)K09_apU<Ng*Y*C]?2I%%
%Q'<:"3mEcl^`W=%I&ogh?J7p)qnPI_+a_j$%&YXnm2LhQXJ42lq1%\B>o`iW@A0Tb44`$$:ZBRGEPSXug9=;L0;:fq1tU>$dC!-B
%4u&6OQX88#\nW"JY>7-kP%\[sZi>j*MEA7!%lUR329P-m#At9YSrh\Kmshsc"8,fNhc<BQARA7!6;Ii2E;8JMQ=hP0`N=Q!#o4&*
%__B3pf"Q-[&C"m'fk6VC#kq71?tD<ulGNKFDm1JbXmkc=K35O.s3'Dpk;DalltpZo7>jZp[jP1-`BrPQ9<u4:4UMdo*Za7tbII;\
%%ftrM0cXH;]?`BP=7e$l:o?(b*cZ%_:h<H"XAoc@9gL6p]O+Jfc=oBd>9J2>*/7$C\+YeKKW%='FJD-]_EBUc=IF@IR&sLQW#ak&
%Ep)hE!`\'LA$,Y[%NLqQ&Y5q9nY)!iW[KYY^_gZTPIIrT+JP(o-ISlp+6WfG7%G1)64BQPB1quII@une_&[NbHr=K$M<oWhW#cqY
%_OWX;\QC<]%dTCOZ5'6lb2"bpo%*Lo+@Pr;Z\deaDrH%H`3#XsE.tba[2Mhg_c=2fr.n<im:8dhTQRRb%foBjH4iHsg=oPI=d0dA
%?jsB'XLm1R&CJV>"nFg!q([[&'-FIt>bQ@IOTSm)$<*<e>=E?@CH%?T3M[\;o1([r&:7WICf2)HM$2!;8/;Pf?'<H\I=jfTZ.d@j
%rib@t(UQT`cIRU%rbV;hOFHZpP]qc-npBEjGdGIth?T8s3/d1W0hu$/X:nZ8,tJdYLL64hSUI7%S+ht+NUH!eG!FBV"5MagpB,))
%]JhfO`eSM[:B.$oe\ci+WWe1J%U/:h(CtF96F$clKn<a"<-)R,."&dYhEUB(,M:??qQX#+i:bu=IC05^K'3E:2kes9^6u"fH]b[q
%qY:X-L#_Z'1qEBN-VfsZO?=5KL-q99[`@A(,;r;2kl6V:&bCI/_%h8c\Nh[-g#-]B)b*pO7d[50++C[1:#e+N<f0/#mg%k\8[cL?
%:pJcWWk#At$K#WlpB,8rUi6e(f:]qpUAL)nnX\5oY/%S;Mi/_;<i*:Il2^_+6=2;gm*CH$l%,P.XB?Y`-ld,_C@5jJ_Y66(aD&c7
%O-kBagHP]tBMFbX[l<-24E//S#3#<jq2^U!d@j,9Np'Fim?$_q;&@uPeL!qn=<O2Y8N-=N"lUhUOUQ^fZPp4P&5FehXI<C%\*G5h
%g')>K;WRZV"la$<dgqb07t%uQD`&lO5AabaG3hY\+hp540MA.NX"=I1:7Ldp8qt[e(UW*[dl.-0PtrFW9DN']+/k0=eQ_/6n0Shp
%WoGaU!t'P5!=j(k@MCi/.PYs?3:%D\hq'4Y&Y'V4=AO57H(fjYZYNM!$AX\k&?#oP)akM>S_IQ(:"E'72\0oP.NE(8AMM13Y\LK'
%+E=t=c.pnl"N3f6<.!YSWIC2_E&<[G$(/ODH@^u;?IBTL%$)B5\oGnH.C'3XU?o]>'VZR1(SBnt`j,c2#NBPZA9hs;*$Rd+`kZJ!
%jd0?"\>+b2I>\81Lh>^g6",8X$DUi'`iZN6-@6`1/!(!i:nXZf=PRD"3QW%-*XY]\,b&#mj7)YW+X-H,,eF^A,Sgh$d]Cbf]:4@c
%95\@n6WHY\lfD3qPdZK.&=8kGgb_/qNat;pM&+ugN_Qe_P(ht-2eC1Hp)lbNUbls4e`=_h2!Oen9t>j+4AYj4geo>uKmF0hWKeRB
%Cu!aa(0MMnX*%V4_;UH%o;W(&4>>$FAIBao`7$E^k177d5_uepX%t=YmBkb;FBE)_EGYm<jX$@sUgn3J]IY#MlkSr2=tG#H0C[u[
%bf8VYLNSgB`HMa8$J!#A!TA"@R^''R"<ld2b+QQ)DcDG20Lb0Y#i`L+^0]EjOp0!m<dt`^pgF]+MQ@j4/T2p9%tLPHrme]S)D*!b
%%m<pV'aKTED/.M5^-RSM*7<VMMPd;t9TbVOLHe]>=*V,$CU`.g"jV?l;m<Vs5CICI%dG;O(.R[:JQ'To/CQTWUQDbiaTCM,bGr+X
%D\Na*q0h`JHVu$Cr$)!cn++2[CF9CpFaLmhXN>7/QfYcF]u$76W@5(8qhq??$23<(']uUUkIE/cR&!*LbfE*0FA&(5YAXs`+6fkW
%]^frY:5b0\Qaai>'h!s_Z^6\6@WkjLDY(kM+$6g+g<^U0A0@NPS<O2JMsk"$*=UK8dK&7qH;Y5pD!EqkLu:t>fq_":h#P`Se/bHE
%T&[&>F<:leiNVp,+92)O]AFSDd>n')If1>\YM'55lLV9j@rrU3&hG)[VdYb-`qBZ\1m2BZh5[mJ%Z`<>jha$PC<&e^>hU)4`NP?2
%ZmnUFPK[+fjUYgXj?s;=^V3&M=BF'4jPn6pAm'_%TlP4tWj/V^KHR!Fd,e$fj-o-q94%iP0\%-*90:ciW+bkI15>8p3%iCA^G[sE
%M,b(s,LWGrj8dO@H57F\ieED'Q6fWq&5U1mRlgKM!TBHos&k40[;+!5,i"bI'jQ)Npc"X,Xluc]E[/r&LU\%dl*i%>b!rJu5rrss
%s87hb?`[MI<g@`&?PbC:L(nLd]C-"s_\8'\HkNB3";@s?^J(*Ig:O##9;<o:fqUG]7N=@I,^T7'Y[RUZ":erld:,[Wl(a+K@fqD%
%CJ*$P^&^K8`j4:(nt0NkX^4%.C7NMUXTAj=V".\:MA/%U>9;hm.AfO63eV3+-aqs['Vo<dm+^NN1a853a;,&Z>uJq,IA;;mo`qrn
%X.>]%C[jEHLBjn4'i("403jbsS=.W$pkWMtUtX]XCV)]Pi(t.6A]<@EoAV9tgSZSip:rd!ZRg:n%75_<3iuSjZM0Ed<X:LmR=K'C
%L!-M@RhRgFob55W=0:VEpok6.<OVdt5ITLo"?Pu9H#:aLV(0;jTlD@9QXk/MT-tgGn,Mbm+7c$V0=m7R$;i?m=M$&-ImA9>]nE>'
%]jE_f`Z11&MX'\<$8sTtR/(JEc5LE]_Jp!"&hF6CVd!&YD1*T>Z'"fbQ^/s-h[Y/-kb%0$R;5lXqngN>eu'\=U+U)3Vfh1(P/D_s
%lK^MgJHN6TB^lZDX@\^$>@8Li8Mt_b%0<1J\ZPYT^8u=Kog4c9&,ft?/JUBT;?%Q4^=aArU?I51&&bB:)-#;JoeOM(Lk6N3omfY0
%>!+ooLK0NQ#Dpn]C$*.D623`%KEqG[7H?Z&ma8QPF"r.fVI8-Pf3-Muh:L$sL9Pd4^@YcrUtcc$9*0Eb@mB8DVJ?NGH0'A`Op0:W
%([b%$'-$f(mNXFS?c3?4gM'f$ee19'opgZF>[cVg7/oS7_5P/;J%!3!`qclUa-6c$i6W1L4mB&+>Q4JrCu_-unj#;HPAG.()[D&[
%^='=uJ%)il2j2C;^[T&R9QBX[/>!lGB<MCh)i/]sW+T6^.t=qZ!I8Wt$E)Jrn_/[EoW1Zh=<O2a;`-N-NC!cH+f@[aZknf-W2#tt
%E,Di;&+A&)4rl&U>@FVD,AqWI<V:T>fBn\(LF2M>(gAg=o#5WkeW*X/RBZkVBpVe?A)A[W5apH4+JMH3ef<Y-:*niPq8!^^`(?R_
%PDB&'/ZCR`O^+]V.5`:FSNsCIbl5;GQCk31Pr=;*f1a7=:Ge$-,jjg-I7-P&2=P21m/+XDdnm1c>h_F^a2224S6?Xm;#2(nW.JT0
%H`A[@8fJ>2r'DG)<T1Tm8TS/gR9lpq=bc9oGT%p^gtH]+&0[LtKId=U85Fs7lT*Sj%pfVrp3cQ@_b5cGR6/:OrN#5@MH+47[XRDF
%"c&u%hqOcuDi6[qe$CSk[Qlh>P%nn$)[-@Xh0>l6J#Ca[?0fTZM9`NVJu>(%@FJ`G"D-T?M8(/&iRp^i<pKAN)j<EE</#I'BF-=]
%&N$O8@g@\)/SiA?IM7BjO0fgQi_8u.][gA#6Y/1njk9j3j/r7Y]]p0d!rMl_*.Ik&r4N`KU0s9Mr1\ir(pe_L0N4=(*ne"W2$k$#
%`7$<;k.\Pq5^__k.?.&87AdHo\?g6g6`&q0rn5\W`@#+BZkN"a%M$GIi/M:/)1nFVV1i;(E+0LuY?a,O?r_ft6?)W;ZFmM>'I#a0
%:$`_E*Ohf4EkZHuJ'8;'4Vof(k-]$W[*2;4&RjN%0/$lbU,05O%OT5o`CM+T/6RnkhIHqu"iB5a6uuSi(a(s$ZCs#PHFNW>Q];HF
%qZ3c-(LkQspc18]mnuqG.bm*c'ifP#@f6hYJO:*,6'f0.+Yf?a#o3oedkAi*cG!/3!;1S#01@)pD8kSSD;L5ZkCPo.dG>pbnB4MR
%Eu1uDR(kj,qM:b3jb!/-]"9d!BEBb(VpOECVa.6bMhU5+2cXR!h\[IurJJ$Fd]Et2nt_f"Mo?YdoAYH#`%NXGoj2K''8OL]gI3dS
%=jla>lHAdY5sI*1Or#dA!O=8m@Y&dX-/$r%-NXmLJY'\ei]6q1W3fcrQrr;%qCVJeQ+Q@TL!!R]d4Y4@!V8`Yg0WS2CIA@,9q]Q!
%,[-/(T-Tk]?Tr0@9gRL\GPd2TSDMr+A^)$[d6Zc"A'2L>Jd#7'b$&j,L)3QSAF?e$X/m<-Bt#G_i(t0BKe$D7*)g<<Q6CT_*emfU
%[e?1M7#5GSW*M/V(Y:guD'<b?C[3>1,+_OYpFr%';P;Vl_Hq2,Y&JV)LlfT#kMdZ*4)=EhcYM^_4UQF*Q=05J4:RKjDXABu#gn29
%/0.Y7P6h2/ETEI:.t%A3BJ*b.%L("se+n[1i0Pg&Z)gW7)#C3T%tLZ&\"DNB/JlTYWjSuU=bc9oGo.l2g=eIq#a*oFpcDigACnaB
%e+^mkq/e=R.ZR7\1-J97ZkbWMh8b]u$neXe*q-*?Z7VLZO9[7d4ON/o/rn'-/5*3l+J+<Z2RiC>6\K.JP==`sTk,qAPCO'HE7IE=
%PK\O'Z7C[uI>eq[@t2=u?e,o97AY^oAQoWH@.qone9oa!(.m>U8Z9:LEq5Zn[&Zt*+uTZE?7e/J?$Q+NCnBV@#KU((V)5l\WNm#k
%CR__VLop:4M8HRS:U\>q+o1:odo`f;=6^K3YNcY?!pT@cLY8Djg\QT]LW=B285D5Q>rcC59le#a/l)h?RCb3I3T0d!]sOs5bO3u_
%m.IFVluDUSckOc=4%P:U(jJQV"H*NEBp`FPCYq*>Lh9ClSQ8O!+^1I;'j-mMrKaT/Q^'uSVNZmer8.aGp1UoC5dY7fF++!&rO\mi
%?LK8a;EUjc`FS)\)7raDbT2+U++]O^-MqbrpI*`u%(6+K<!KMPO-BbgnpI+IMopW%Dr)dnAEDbdAAa$e;eVO;cAUT+k5<:9803Sb
%@?T`Sm;YCI,T5/<GJ<enG9:M'EPuc(\AE%6&,,41-![-c@sVOdE3D80c0"iC`B_Vo'uFVTh=4t88\8R\q<H2A.Vm&$IM78<cD;t$
%msjSg?#-,hH.X@Li*IgL"Y=]oEhR03?jq6.I%^uRbH>2QCRbU[YGb(-lti])_q,1Y&M,SA31Q.Fmch(XLs1]I!)r4$:=QZ6+CT5S
%_;.GEd[)[P0J;UW91m(#V0aI<;l4JM83e3r9k!"RN7P/Ai?m*.eO&6a)lg9MD\OB\=mdSm%0LO>'q\XLb*M5I9=DoYDq+oa2r)FO
%)hM(F-2^^I%Y*7Ob)"2L>]l6HJ`NMD(adqgfd@%;*ose(\\aWhL;.!(q8@#eL&NW(+Bg`9PdY1PKfA"3#@1=_40:.GSGft&mb_3T
%<YG5q9/T-G,6Pm5/ZImH4u%lWFDH%Is(Q"R9U5-`?#YLhd3.r*'!q^e1dp2G\&)75I=J1ArN^`gM#DUgg9UGATp;EW+B]hYIT&*_
%p5K+WaG37pSXJYN4bW]l>B#9EFd?q#dRJD8aL9a*-@&Zm)*_RP%^P$>'H/TmGk(Z@ARitf[_T7H0^OrPDetJ$":.poLQiPpB?$k(
%WD[\n]fgranscaK#rfB"SP%l>_WN.S&$HUW$V+6^$MMC7\oue!!36l+((,h(P0KPGU@=/'Hq3#&@_O/UnL7_:-NX[gNjF/loQf:T
%QQPlbG$,dW>:mcqi2&5HD0KQncc]qN!m*dfn69G.ZVM9ao)ZIN8h'o'cgueDHbp[[$Im5F*QGqQ`jJ1h/o.kBRtpF2=r'iEI]859
%lSqa@P8+=Zdk,:r^@i[s^S/]u/O:<F\a:"g\Gmha\EAj!+L6,Jrr,-0'rJ&I;JdIO8>Z6i'B-OtRV2N=&hG)kLLH@BX_i(Qag1;f
%.EfcDVt5eOmITt1mEVgHgWs_TJ"XNnX$7HU?FW-PhdgSsjQ7V_:YnSe.b2MeY',_<ZJm!H\g>VVf,fSe'\qj0Ltn>uM1XJ0qJ:^5
%6n:Cao(%_M4!)U^A,a2s2Y&K#\">)`$[8*iGjY!E/KWc2.`#SfE4;=2\ZKcY,!==0o`*F]NGDg+Fs8LD)(IoW>H(o8Tt1YD<0n\`
%DuA+fPc<>a^e&hET$pLgS[,Kn`?RDJOCj&SJ9\XO=l.aO!<bnBF7!%@C+%3RM_$-0I\I<i'B*j`SIW?<F*^3jMQJ,bVE*E(a8YoK
%WNPg$*p;1B@a[Nh,ZnBFG^:[dgsdBr#`^/<:J?J!cH_dU`d)9eF"Q#22QU*&f%fT/,2%nLe/iU5d?pppbLhOhVM0Pt0WZJ./fsQ%
%6*^MM%u%XQ;!![bUOW@/0I\)8pV-61,26JM,FcZ_QKp0!?VR.G<oC2proT5c[t<Nf/!XaN!5]csWe1-oT/#mBMf0^"_5bW0!TA"@
%R^''R"<lb\:fqT;/dKO\-gh(gCUpT,RBn&uqVeVS1\]-7n`:;*Ml]V*HG$OC4?37YDgk6qM`Vu?ZRirPTl:hqg"b:?%LCH"BBNGt
%2GiZlIC\cU1"T<4b0,,_\\CHOhe;_>hjO^N<5j[<]d=,;.Nf%_?DL#J0@'33eVgb#dm<)5QW/$9^PP8[BNR2:9757lVn\c!F0je.
%\@_*5nZlS'Hc2AL@[XdF#7;JRoC/`.`IL;hkYWU!M]:BhZRiq%JU#lpg"b1<#`-g<n;'c=J>1PCh-"m2:_LO7R(fY9dq`br*`k7a
%]FpRN1%Oh9aEI#2;`m#rKbODRH1?dVjs3U(GT`T48N+'ONC/AtfqYo=[8^]XhE"rbGPtQ$\CU+D41NWER&QER$l@YC5#K_EZI@83
%MMIV1$.h4Wh9V!jR,r=+Z36'jib=cjF)0Ym+@L9r#1I<b9>")iI)Z[@\BTd&$'XcMR4JMJkWN8B)0=k1F^]XX?q&V)c%!cuj'4[n
%$'8-nZ3.u.Q;hp4T,9t<NqiDB2mC\JA4eb:'h3a)6q47QA'lAiK'f8'#0_"X5K0p&-La^$=<ClN%TQrYVf^Lt3rRkb(daK2>9KMd
%;jB97N<0/,4m[SfA="[.(iKA.fksf?Q$F0@@;TbW!JZA8V#Ik(G`sJf>,"fmbm,O0#Cr[*@brIaNnFdkS$72]Sq^0%GP2=E_BXKr
%m07+CPk-df\,C`Ig$q=HXY`N<FSACg_PH.e5@>pFP/]+JTQaC],AU%,>6%V+)>nA8jEP[/,`ugsG!HmV8MYM_Rh.u0H?=1hmduRt
%^.UY]G:7HIj5BHYldkd*_Dgm[/BSsQS#e*cYB54)3rh*kQLht7nUX1A/5*3l+J+<d2L"j$!lC_OL)/$Jj\]'9/+Z%fA$%N[p+n`g
%CMccAZ(hMm0SW*&jFJsQHM&Ms'Qq(cHbJ"=[F0ZVWj53\?njo/c&uo2l4\[Rc%5kk9+sons'/,o!ZQe)>RQPUD7Q`4!Q/eR1sI'2
%k3(qsp4uUXno.F)np>NWf^ULEQ7=6]h+:b(m"'F!B%btn2\$,@&W[dj5IKN@/aiK^3o^+5gh+DVs#M#uD,MPW!LYloF0MaAqs4-M
%4ZG9PJQkfO)^kQb9!DD?SpjTq2ti6J%r--]\(#u4)?#4l:%!Ym1VpKSpom>d!d2A(@JnMcIb6eZ;/MADH*@If+1:TE-]RHF(,*nH
%@Te<DU%!V9l_tdAqcsm[5`uQh?h)GZ?8X-dEF'+XY*H[aQ:>8O3`MCgrH8m(fRp@Oqek+D;98p5.3-*okMFdI<.?f+K#If]oGag;
%Z#:<f+DIHla*7H?61,O^:E+P-qn+e+@>=s/kd#iF>cf#-q3WH#\k[;ll/_q?@(o_>f=`aWdCkBI'35LZdr*=j[QY:ZfGp3jC(gC,
%d=Tj:n1(p`)m;'#3]4aP5e_%dr:40k/DEph*`+s!WksHU!OPl?j(GEe`7R?71n0Z8X)A7TSSR3cK1P=T)(Wd6=oRenCQ2c_I]pIC
%:RG8@nh??01JPGm8b@ikYJ9YB?-7FUon"!p?S)04AI5XE_J,<8F'%61+?J\F\rih1,CQ#@Pjb4C1CUFMiq8PjN+eA\KlkLC\308g
%dH2])SMRX;NBK7#"Zb<-?X-c^@[7#;&nDNs__B9Rep\9f#Z8(2E>M-nU!/D/m\_ekWa=$MdUkQ-hUl4[`&fI==ge&6Nafhu.8Y_I
%/j=`T/,E^@Q=05J4T(@WDX8;G"A!/`:Ak(_m:YOjOs2l'k#uR`E%]Q*8$YHB]IWpLksm9TNFpo:&n6(c1kc\56<ZMIGSIFdMhfD+
%[pV1,BkuTc7#7:m,1HN"Va#]uOmuc!&mPfkj6&eX9DYZMO+.P($ns8",2)"p+##9sR6YqEaL*dR4U]M?Pp'?S:4B197.0CT"iP&f
%[ib4%p37EJ.=(2lTQtlO"rS8-1n:A&leE=?4XaQ]9^9q7Mb4?MoXXI"^nE2.bcKpF;S$f&Vb!+]nN]57P%s@L'7pM8&`;jDEi1j)
%PIb'rrsGoO]t!VI__t&L+[(<)r4V57LC].N=W\\]4jZRt.I$N$8Qn5oAA46Y6h\;X%'sbfm2H:`8C"I;Jk>B3j<qqsE_hq("kUoR
%)smiu*ALPbO"cD`Sb-DV67JsPF0A(m(`iaI_TZZV\TgNm.*2\K4:k<+P8c>dCYq*>L^k@CCTeRBFelSbF`$&?h<W%gg6$)UQ-iNL
%`_m_Sp%YUKEDam`Aiua8,$s^o7uR7]A)E.p6ajcmm':HqlPfuFV_?hQ9PsNQU,)J[,JN+4MTlC%^7N"G%mrs`-lg]=MQ@LqlPk@;
%3&H=,,OT78YQkb?Q=05J4:RKjDXABu#a#O9n2G3j<aHX6^?dI7\A$tn(Hed#*]$R,@I0VpU3XMg9:$Mk"+V_;i"V=ibDh1Qm\VO&
%[QpALVC_-#)[+)LWbB'mihf+NS]HgDrQ'cEamp[&i6*p@%B^[4<VVA!h'C`p9#2PgR_hCl4^L6f4C4:!=?I-j_^(^Uqo0dGo_r!A
%#/"J"@m&P'G*Kp<SZa;g:@7D`OL!Y6;6Uc%9qUY[=im_#!b?NU1kc_,X0hZC3@62EY^.F`L/XDHp5K/@o`"\3_aZCIjep`\/E>S9
%\A"]HPa-Q9bB#42>$IZ3*cn<?e[$loS_c-0G]9SgmhLdGa5Y&cRc^h*62&)V%'sbdm5K$@&4ro,s%D%PB8_l,qqWW.ID'k1FO,Ce
%Yh@ZFQjYP0%Gcf26WI#G`oY+mi;h4=7eG$"`K>o#Z36'jib:A`F(_*f7!K28N>*%]57'FE,hJ8$X"_sT:[.k$[gg%`H*/MQ(OUMf
%?Vu6d+kH,ifl5kG'QaJg^Y*)$NqrC@_N6@24;8:C75f>_$,TIRl+TBB-lnpDTh1L=iH;6=p4ua!cS;RSR@M(fbRMS\/'mVu^*.dS
%>t9<gLF-t0BdbS,c@f2`@'MsZm?2:%lP"i*c&>HXOtd2=Ru9!E7d[U2-M`h3@2h3s:l=1+1'T?GJ!]UJ7,S"n2+dK6*Lai1Vfc>$
%A'bS)&hG)[VdYb-`qB[+BNcZ\Y&4CqW6[UX@5#.(g64tj51>R#HbUP\XNq>.k:qb\,@mWOs7C<ciPD3:*1gh4CSb"[$Nj=m+^8?G
%IT&*_p5K+TUn`#J$I?bK3i<5/nUoR(%_H\)msM<]I\D5#_]ANXbHEBW;0^A-AgW@-Tr'c_j2Ebc\'Id7@.@&Q%$PLFm2Lfdd2><A
%hV7Dk.stnSC;1Ud[c\Y:oXWN]A`h+&qZ@pbMGC0)S(!7XdfH*JaBb,1RaC&a:.VAkWs.MI2e?]9h^CmC#3n+Bd%%,'UCCjTHUSlt
%o"Ki;2Cib#&F?Wf]\g17AqoZVes=j=_]SX8\L5$lEp2nWR:H[N&&cpNal_0gEJP16r(i(Wer4>ks7Q],&jbDtIsgb@#2:r5Se1hn
%65,[P;RkVs6kCC>J(u":6ApmA0M/PQMhf/X3+Zf>h`+#[%Lbq"d[OR3"TIL&F54PG@Us1C3Pu%YEru&kCYHl_X4=hoLDD]40,_U8
%l<8&s1cNqldmE0a\#AH/p*_%KEe!-*gSFB9nAd`0EBXH,n2[U&S[PbP4tOGO.NaGkqQ6d"lZGe,TF_IJ^[')&jr^*;9<`X`*e$[<
%2mu4"!d*BE_edR)A,gS0.jo:iVp>X6a"Wr&]"s)aL5gPj>*U+6^KRWBKi%7Pjgl;HAW&+Uidl=m-J@2.*et$K);h!??[_n7I+^lr
%i!-mLM"EstfD<:hS_.?/9C!c[g"FSjnXpF#\B?F]Z,%VWY]q:^L.O;4[`9OX,jh1>Y4oj$J:uZNp*X&+>`j^lnC6\74$6?k?FdfC
%2q@Y'ap#k;64!AaQ+GTTWiBa<@XrEb--b5r*Wh4ZpXL:F[%$V`_TM9@.(I+ZIN2OOkmh],Z#cI6ZH5i^IC"3d55IaZ,b'5u@o@]:
%A]Pp[LLH@BX_i(Q6!`Hb0p/'jc[i[E&Yj-W'r$c%<$TZXCsX,;rO;q!.k:E_[\4=a4ZJ,3SA/2hXRs9M&hG)UZf.#-XmL*nM!c5&
%+S&LqOpeM/S0L/u>RU(^j1ut9o<=so!lmGdFfoa:KrVH-TB6gu1EZQ$+*_86Mg]hlPpJsB$AW&Qc)lES&0[3\n;4\jRQL;2F8p%\
%<u<^rhn?2'54BPjMl;$W3+/&#mJ"d=_Lk3(pa;dg7TOMk-!38@:W"@!>MJ1g&4p_&;V8U@[/A,CH_]AaqtSNh#MJjW'"n@m<G%3p
%TDn:H[/$D@ER<^lghHtS<KN+lm]LK&"juWPSn:?S\$a7!_UGV,gp00,j)$ZMkfuE.^fH9C*b:-Jr>loJaBkoL;C8bkJ4+g%A2W<7
%a,LOHBMXOj.<KU\``5duJ8i(Ge_Jb8"piP#iHSDoN,mG4.4nr"S%09s=ec2'->?M.<oAOEfto&5o^VLdOHo6\Nu&(V#DZ.>mJ\_%
%OP%UZ7qVW5&&cq9aR[pU3(/RkjcTK*WI+dm:F-tW-sRp-=?W#d<LAg"qXK%GI!\@WepO/Lf.R=.J(tm@#AEXi3B/I7E*anp-ldCL
%="n#hh]O%*lU3J<Uj$S"`P7ofr<V0`M%8Tul<-`5/PgNs5>[KfZ819.Iq@;c6W7*SmELRH:WqQQeRZWbicIh^\Z]o_,!PO19p2D%
%*ZPNZo,>gf/h`*I>A'MDZ,-F4Jp-2QE!;Et@;saaMm(d"A):?km#;"F/49+r4:RKjDJbF:68U&nqCcQj(HjfcIXApO\5h]T!A,If
%5ae0r:'['M<.Uc);;]>.*<*GOmle^L#DTRKC161RGhOIogt4Om#`su`n8Z46^S]$b2*(2,p+d%am&(S,m'(!&=5aNSHqAIS^l'3m
%r,H@>CY-#i_At;1&hFe*LL64hSUI7E!K(M8X5@'X+dI;n#R/gX]^ApWrO/6l$846`X8'&nG?&e]1pg_#jleN=(`Lq_\[Y'3AZ@(e
%"%grl8`m1i+[C.Fs.hM#?W%P^U'eQr:aC"^`B-pTo6@]3JPrOmTKnUKr7Gb`,K[['gn]b>GQ9RS($4/VGfIC!OsO3m&5U1m93_;5
%+[Qm@\+60`#1Gogn6eDhQK',+>`O-6B8:].5SYmrZ.3-[p/=%[ZN3GiO/96r^BQ?-\+Slk4_FWGbekiCd[%WE7qc(Jrg!NUg_a]R
%P;Bm#&R<NL:_,'"[`00fAam\#kCJ?ER+Y6?P%pl_D6i*Drr'Ve-nU_Ia/a'G"H.ilj>L"P?f)tK50'5[S$fZ4,.]0%M/t8go9N,I
%MU*7Was2UcTF-kWmGk$F[U7mXNBI9AJi(J.`j76\m@e9[--.-`VdYb5Xo0RV&Y^?(na`<,&*B!h4RXU4>g)Z!+$([.m5Z\]D`8(.
%/GtZ07,:MYk"c>0!&TDNEoP&n%A'Z,"H/&rA2n.7CYq)oogLo%H%ub&!6/]DkDHGRE1JP;!fZl7AR2DGI.,OVM927*d6=+4jk&.*
%hoPtn.HG#3>!/Rg4&qIZ#DpoHC=9i16&><K62#*M-V*cA+7A_EX>PS;Q//qD81F&N8#(dQn+=MP]TVQc16Z1_R0q$Qr7aGrYu]/\
%]_P@'11Ud:__93Q`qBrd2VOM'j"Go*)4]7)/^0Ufeq'RLN6tlmCM0R$ka=6db?J)Tkd68gC;?MLN0k&JMp[3D7?\GgM8Li8k,,in
%5]$'ifu+WJN?6.r9f29OSSL)hg_u\`.9iLQKt^DNH.;]s*J$e^"(T^1_P!<2f7f>n]JrB,OX`)/^c^thC2E5q;2>3p^+^LHj'i$-
%<ldm<$hE.I"5Fht9aJ*$X$m1;@6<bQRW<ePjZ..mTaAAUi]W14Z2!gSO<g9N?Tr0@-,JBaGPd3?.2gesZ<2#9n>di]G6]c#SSNda
%gp+p'Bt7(l:l]_gV86F!KP56Ub9!#f`#ar+(o5&8]sU!VSnKOpZ36'jib=cjF)0Ym7#2bQ=R3N<l-B[4kRP)-*ReuQ&L/cP_b:f"
%dMs<Bs2;>:Lt6:<WZHDYjpqq%<F@sMco2`D-\qGN.`#SFH2&[gg=\Cl#`tPlATrcS&'6QW'D;AHk]L>-O]JRL1i-b_%30"5rT/-1
%*i[9j/1We/$\5*.d<ConO!lPTeRZY8TGho2S!(.ZD[6mp)9_:%gQKT"kAD'+B&1(UCN1K.qMD])#.P:nhn*mM_L,hb'$Cd..]=CX
%VA_u3T'(Rli]$/d^D=*`f`Uh"bd+L]ho$[)1qBJ`&"p"YNg_%Mf2B9YLt5s[<Dh_2H*ii0hfC<X,?ahjlWt`*,JA#fpo>&p#>V.;
%EK?g",YP@d+J+<Z2RiC>"%&78<AH4T4?d"FEr:rB.\p<b"FVha5(D"`K*B!`3#AT]LeDBGIe`h=aM,,Lg7O9TJ>ke-!QME$=s9[a
%_=Hm8_eM"2o_j13*`8=rQ-h>2-U(a%`bpaO>[PZE[cm?r/#Hm&`SF/JbC2jZXL(@HD\Mj&ckLe$l-@82d.<AG=?I-j_^(^Uqo/X[
%P-Y/31Xhc;%J?]`Q']0GQ.mui5JNLSiobH&E7i,\liliY$=7;5ALCIg%TPf4&a$d/ID=X"Z)KKh$d?LAWQ)r,'86_=HU0Mb[#*=D
%)loH4^SYAmJa3]`#NL6I2Z;8`4EBd&ENNl\CYtAAE_'.;L51;Vcspl-/T,5g^p3u"&&cq9aR[orEBo?@\$&N=U>GHNqWIDU?Jt[;
%81KotL=Q,):J(6fGCcSk>=Sn(WjKBA?@*J(*3+Vg>!G3W3Z#u@`js2H,R]RK0!!"3IM7D@d*07g>WmD%Mq$Hh"<=qcimGHLFBCW`
%$@A<?=5Nl><KTFle6DJ$ckHZs^Nf9q7rUZ<-;1Rf+J+<Z2RiC>6\OZZBf^9qO&jt4J9SC<1$pP[jNQ&TZ*]q2*>^EB/Z0EYK"jMt
%53=Y4V)Q_?q:n\h!*"Y>g>"on0%T1!?MGGE%+taS0MJdZ[;R#r,,r;o7f4%S9#II,jhk3Rj#O*e2S<I;B>F':-#aC>>k0045(Q\F
%FlTM4*1FZ0$W14mh^d\r=!^s"&5U%dRlgL:+Tg0\;=0uZ_>/PRH$i)?<HkOJLV1sflQ?PI*ZOJIF2?`uA8bde#?=@0SL>8,"$fdu
%QBG/_+2:VfR&\8cK>?P+202uo#lL=qlAk><la5p9<WMg,bZ1m]RX[4@/(=fR-C^F<`H_1"+%pcAZR@Kao702dfj_rTek5%^=7)k5
%5r):3MSYpaMG=%%!"k]jid*I4CddBT58as60B`Xm3h1D.eIY$7m<]p"g]bHpF&.p`o*u]^6ll>&+]:IK0fo*7C9lhA0Y'nPg=J7h
%&KdDamuqCtl2+i5p"kG5QG-cogpsM0\ADqn[*;n8RSm!o#DV6C#D]0q`)$S?/DluK)hDN-,S.iB0ZiJ.^2ZDojP/NP/8;(2*Y8\Q
%\V@n'qhDA_V^-pX:PDGR6EdKX$[u;T"fk7\UR*R/"$dO0U*Q-BT/eM_<='EKaiSJDda#R(L]B$f_TIDclb2nM0noB@"]pNFkiKo4
%)]S!j^%(7VPXorL9`*hbR/Qo=dk"Z`E<<qE"d4GRh(4ERY4`DpFLj]fOGUSPNM5/3Hj]7nOp*lEDq<'>5!I<,5^@l80L2m^:PEH7
%gMR4QKpu]78h1#tjJTC;@SWp,Op0k0QXk/MT-tgG1>'M5MWXfJqgMCf[D@K=8&5Z29Pf9+f=/YO&T8Vt)XU7"YO-KD0uHr"s5);F
%h1iUE=b=TpnMEqF\[="!&Y^eqb7>JflA&oe05HC^gn:"-8WP.mVY`X6L@>&e!p(nIe*K"($DDE6X44;1;>&);%+taS0MJd_[65!3
%,,oSPK$eJ\KqkB_YF<69HJP(+()8h9,=>l!QE7F7qG2>.OMCBbPN1]8b2R!Y8?+5Widl=m-J@2.*et$KLgkjZC-1I.2WHt7>TmkT
%3X.3R0Udu<>g'Hs=Y6'!4Xg5JD`$H5(S_cSaVIDg$A[RaMlhEfJ4,EuiLOn4Y/mp_/ruKX)pJ$<o?m3,%GhqV[W.k:]uf!1j5seH
%\.dtdd_LdeVgW+oZ3TN#Qt0oH>9"3KPHo54?cS.bqBO:K*?.?VDt!)hJI<]h2D/Kk5H7'kD[lu7a^.0'aK3P''A[q:Q6CT_*emfU
%G#j6GnAqdt#"h!9)!<R8Ic25N@8+l6]WD_:H.3!f;C&="OmGdXmMK]9*2?ZZilD:3=\:ba$]Mu@W:It%-m1c1L>=>Rf8t$6_fMZ/
%4OLPA+Q*HPBT#-(TWl6`akHO>Bei]>%LG')EMBDeS$(>]Fr+=n)6sM,Bp`FPCO7$4,0;\8XOFH@*9f->4s2eo_&:Hpgab_qGK%U^
%J";bkV;1aarqZuln!hY0WJeHKMH,KJ"3eY6WTLAW&0O$^Em5,qhuAr4B]P#Z^ZWBIi^(P>m,SMK[!:V7pV"aR<lO306oM^OaL5>1
%>'riD99Llg4;=BA8N+&da!!c+/58q>dn*IkV%UtD_h'DGl===O=qY^.kn)?!(kT"u[MDT:R_8WuYA_YaH&n9c\^Y[YWb-hSqS^i5
%WUcq[#Tu+tSBXP;Pi0WM2c$&;*>oLUcf+F0)7$ruI4m.09sY"\O6!%,naCnj)'efFZTp924Pc/MmqWG#`92q2,XX?<E=F2>l+H[>
%\3`<dI[rT%k#Z!*[jrPUIXeT'I&UeI(OL,rj5*OYC%>__P/OX0P)$n_Qt18Rh`0OJqO)#oU#L8iKin7YTj6R!%km'%'H#_hKhq0C
%;Il\*Z<%PmbM.`Cq.#VH;0YU:"H/&P@@1SHCYq)o6un6o<r<+?10S8KWb5mn/+hLlA(jcANPuEE`J4sA+O0X"C/(<O&I'6S\1p][
%h&#,!29?V)((,h&P0JE'K+RS;0lo`tE"8\N%NN._gE[,UN]Z=4b'AEnnBh9%GO,-*<P-S3/Iid"\22WKQ,S4Ka0Gi+LVdJeA7K8E
%+<Wep#fW[e0:b#`O*gLui1>TZpX=o#M`$tb\\Us#@G\)=VQ)Oi2d7:^1kcT3d'WNF-Fr9LW=g`t$A[M<NI?4A&A`(+ETENDIlW"n
%a?+I47e+FZX?g3Ea*Wa2Vc=\f?Jn7Q'!p[^]m'N6Kd06?Eq'a*,"]4.nj#;HVek&?*X@A^>^7dMoSL?ED4Y!o1%]6X._2lV`b&@Y
%V4P]qIgVJdZK?3]W#4REpH$"!1]-o&b&(YMLu]85,fhX23/iT$DWe?I`'b.8j&YXB-TsM),)`L>c,`(QUd.KXc$7qHl)qSde)m*!
%<>g%`hl,nWTdm/<b7hbqF0Y@l?CNK5p:rd!ZRg:n%75_\i7L't)(f!4;IP5aO:0OkI"PUB?K&8W"@"M(>T8*skk+/.@UN(dfZPuZ
%].@i0DPDiI!TN@0<-)F((a(s30EBef,/,bti/,"Ei&YEN?NT[,5\mDU3g=+?c/bne@7Ms3oa`%QBG,'d(A"p*j?[k64NjD.G^\`5
%PuV<m^PP2YVe=_*bE(5Ed@e=\Z=cU<]:Sd6."d&E7Y(=5r`3\I&ui;I1JZ!lTIIOWlN>pVEPn##;GC131`B9t\#GeMqEt=g))=i7
%*1U[9hf:`nIra>oWQgc@*im$r,Wk<Q^+^Lu1RBl2VDBhqp9[>8e\dg$pOq!H>qA/q><-7j:15I[Ku5Udk177dL_+]E55f-'O]1*)
%-cUu5IW-AiE?_=Ue=t4i7q>`jgrn>P<c4LG$3YWnBF<!:EU.*0j^%U->9J26Sq]fp\+Yd`66nGK3QstA4Y[+l7`B!Y-u):!EI45%
%#G-B/[rZI5?Y,"X@9!h`6Qj@Y(r+7P%kg:&Z36'jib=cjF)-+B,"*G#$p%98`mI?Q$Z]2gb\WC`%8:u.(6&!o6"s)G^EE.BldGWf
%Zg@S0Z>jmN_4`<bkQjJ4&#<C7/A^=sGT%p^gtF[s#a)KhoFhL%bXSVp*KpYd.e;bsJso^00pFS;-rsg6]g6-?[CVt+o#C%RT5iDP
%9@)B]C(`'%Lo4HT`NJq%7pLAK$[]YX]?f0\9M[=2#M2XFoSem\'[Nrk32Q/<Htf$,if];,O?i*EA0:UWn",,g-F\Lim]@Ye1`+=h
%_42>%Z36)@i+tA`H#):s+@OrPbWT<6)M@8bo=5an\-^J8OrUnlAlA[^X6MTe`2@goACWV>mImX2E8XOrA9q8I!9N57L=.E*Z78/K
%^c_P#D!^LI;2>3Ho\"_7$G,A$HN/$+b*F'n$9P/^f+o2tS2P8UMi0&S['P=Rd&tK\f+T%N==_M;kM0#E,R]=D0?MY^C'a=mrK2aD
%+#P7/QJPqQF$Hc20=X:Vc+.f,J!<Mcc]%5N3aq2>6>+A3akRugJYF7\'a%lb+hBUfi!/5l$]!7VMG=%%!YLq;Bfasgqs'c)GfFP/
%E.raVTUEid=]44opn>RZqt`4]JRmXk#&OlJ4?37YDp)?BQc39Da0Gi+LVdJeA92PD3(/RK1qf0lWmdHEBo]$<FT<Ae#&jqBno]`J
%_0gjWXm]t(eaJ^X!PWrGkF<JpI#Y<Z6ajcmr3C/*Cl\W!,fd+5VSQPD9BhS5H.b_S?tFQV.7<[LC(9hDe0+lX/jT?)C]1N=C>o!V
%5Tph(<M1tieEBk+<ZFpOFgraBf[^ghLs:gYH9&ffD?NHN.p0%c\3_GU$ImPH*KHH]RD_m<T!HJ0kPA\tE1STZICB<dZ4q54U.MR+
%?lj2W2>=K`+l^tGl*_"!SIOhan(S9R>+?Q(]JP2%?V+'5l2O#"\3<sGA1cbPo<9E]9XoRLeA_FM0<u#>"7\3AZFRA+%LA2o9\GnN
%Sot;,(V#aU#<->6@0LCg`<Y7^r)`]*?0."2d)HTcLOh2Kb,nP)[b0?0=':-o"7\4<ZF%"k%WUJJ=_7Hf*hP4H3#D\*F'H8N:j@B@
%q_L[=`l[o3C0/sFLY[PK*#r=dJ(Els`3)^o//7Mq=VTWe`ZS#XmnAZXgA;teLiJLAf\#RS[\RE<hY1&qhDg#<pp@'sU8fHNFpC%Z
%CYe2>=4X)TDc()e(5SmG<6]jA&4CK!*3G9_U<A3tZjUV^`ZPi=biF&\S[VW:>H?B\kA@5Bj&6u:NMU%Oq-DU4oc$n_m!s&d-.UdP
%NBnPeSuC8&a!"r%N:kAdo=gXYafV06)t[H3($alt%ZcGg<eOLbXmtoC5p9!aUX')sNjMQI,tK'aLZ'G8XaT4@+_m,V,B_CHoE]+Y
%]aJ^hs#)N.T0kb$dq.0.!*Zq"VcDE\oQb$@TF_Iofj#;:FD##bK#Ii`0MJd_[65">`d5W:>PIDN9HoMkJ9-@d1("0<@FGFmkFM%R
%l1aKjHe>.NlJ\+ULj\,`9NdnQDb67&nN]2GPAG,RMaN0]LuIT=fRH*<0-D<D3EPudJ*?("0ujIS.($/PZFTC''ho<u"mW%*AEkp'
%5'o*s8m-a^JT0<he_JduKfEM#hI&+R7\3_W>l]<p_%!ua*;=5Dd11.,Zu^TV?"K@n;%sBGo:6$]\C\;MHA\pV6ajcmr/rVuX@=Am
%F6$3p[*C%4(4ZMqE.d#o<=T?&>]56.?QpFRr:lXYrRA/WB\>#tGb[%kB/+]_OXMB%IDXs.,\^=a#i^qg70u5CiO$eCJ[DCO>KdgO
%pR9!TGjGuiY'4dF``71F]"RAp+V^$W>o''q=-XUa+<58j1\\9^+lX/r)C7JMi<rhnVk8Ji`$=[0o[\;Qh=5`%j-G,1Wi'3sOb"1t
%B6lc=Gk+h:4E;iu8lg2c!AAHe8trtt/HBe!H:A:f6Z2<&%+^DjgY`9K_rCl8Hb[IIda9^fbRJ/a0-%/2]Z/[8f-Q[#?<(?3RBZkV
%BpVe?@p9Wk5RgM;D16jP5KhmOFYbu?Fgp$mV*Z2ao)f0Up<g(LQX-su&(r='\32%m(0f[<QE;i('Fr#L(0g[U+jLWPI.HodJ.tQQ
%"[6kE`mtmO/(4mMO\?_/S!WB;WmrD4%MXYJ>lnr&]a1mC&hFf]PM_V$SS_5[!6)9bGu/I]k3$8N[+c&X&.]Kc481@@:mF4QG>TZ]
%nt09]gB=%AhquD$I8uIG",XoF8`l>IrPoN')=Md;"*pU@<HsFin&c)c'-A55WIMGf`p)s3mAP8neZSe]LDI3X(\4qYnNq:OQE;i(
%<:5LACi4*J6X2ao-sTK$p#8T_8BEf,Ccs`tcmQ:E\FAmjEI3)@WHM![gDgJ-"fq1N(>I<O9pT2W5WfL>D!\5-+i6%q2asm\jaHh=
%36hSq)dJMgWVLi^(u?`[g7W[h[4C.Z_SHT4hjP=-;Ibt<=9K87>uJq,D,H+)B;q*\dD<BPk,W-_&%FoIe%bfGY-OFu]lVBPYH$c>
%?>X63]HVX]_27i^5YteT5CXKI[6AgCrrp"Ugg!pm:a0PkX7V#`7/q/h`j!0.DholMO/K(`W]X_i=I@F*$<Et;/[f^!9pT2W5Wnt-
%C2RjG6<k5^S80LIdNW>cp8]NZKi')k6;&ofi5.q%`oljZB.U(molgr1^98Mjc=O8Q!EWEUm"'F!B%bhj*et$KYU@kJ6[I_d<-[93
%?Ig08`8R<'dkW^/N#$d[T6_)Q<VthP/F9#o.g<R-FC"8%MQ0:Q=<O2a8N(e$73O:DT1F*Mmn&QF`?n*(1OpF'%^;OI?.g*@&I$qB
%m\VF'\fV#1Y%sZ.`i+gmpo5Yk"qmh8d`bF&&W!L%AoeC\e;T]7$s`Hs7=k-D!B5g&R7g=A5-3_R<99RdZE(/*p81Ak5p6rhS#e.^
%2XRZi&hG)k__8";`jR;6[GQ\(?ge/m:65D_(t'Y+b$Qle>bF;t/F^GRV4H@Sm%S5@k1)ak2c8pi*9u8>;.ia8`B\HaS#Wj!)M<j+
%UsT]Gg:29OiEsCVgY3T(2AV_ul4gZ;*:[^To%p!'5,pZUDKk$Fl\p<o7O(+JAB4tBVq]OhlLs7i0,ol\.=q.I;WYE[F`-^@W\s&0
%G(!L53)o<_m]5WWL4n*/_GD)a=c9?6U7/;i+<G^HDmm'm+MO%$:S:sUXb?k8F5.RQK/ihBr*FW'US6LQiP)uTlOT5[LCns<L&837
%](i&2IeW-nj-.u58,N!/>m7(Za78#f8%Z0F*WU)^#OCFJYh%1%MQo<4g,.^EHI"i"!t$2j\ECHU#B:J]K#If_YY2:4Y<<.'TD!U)
%gde>:T(pHBpu)TucneK$>)#a_)"k1Uq4AbZD@PU*L&PUEY]`F8hd!6oP.N84p:rfgP%nlNMaDfu<i#V9.FgjW?K&4u@pW[pYhemY
%O-QhDM>,&2C0@t%QE44/-k$-`ZRLee\>cDRX;6Vihist.D,H)h*SH?a=u/ESUW1@`k6A9,la5I!as**[j%%#H<:r`heNuHTd#UWP
%[cQLlr'lu[nN]57VCHG!MZQ(O1+jBXI?/.@jVU_**?2m,i+"'o+,H,8NSEkZ<?"oC3D^!8H!0E@?#96a<L.%_^cW$hD!YsG6A0"2
%J[[K.ea/[<^e`,j#<1jLAHM7>F+ZWa=8AOQA#l]=$Jmn`bTQ$@CU5V4+_-W\=?I-j_^S5_gYuTaqVV>3h`QDd=9%q8s6'EUs8*o<
%rI=EWs5dVfL]@/@YQ+-bs64J%nmDCkDh\.6o)I+Ss7sEZ_8#r@f"_6/s7Cg>c[YgFJ,bj"s*VXIri^hK%tFW:roJ(unc/F^^\l!a
%q%*MiDu]Y%J,J]+rop'Tol'm,p](!d:Oi:tJ,/tkqU^5rQbWRjTDn;/rr7Ym5Djs[O8o"Drg3ZT+9'Ob&#;6REW~>
%AI9_PrivateDataEnd
